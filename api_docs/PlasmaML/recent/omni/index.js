Index.PACKAGES = {"io.github.mandar2812.PlasmaML.omni" : [{"name" : "io.github.mandar2812.PlasmaML.omni.DstARExperiment", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html", "members_object" : [{"label" : "apply", "tail" : "(trainstart: String, trainend: String, kernel: LocalScalarKernel[DenseVector[Double]], noise: LocalScalarKernel[DenseVector[Double]], deltas: List[Int], options: Map[String, String]): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.DstARExperiment.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#apply(trainstart:String,trainend:String,kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],deltas:List[Int],options:Map[String,String]):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(years: List[Int], testYears: List[Int], modelSizes: List[Int], deltas: List[Int], stepAhead: Int, bandwidth: Double, noise: Double, num_test: Int, column: Int, grid: Int, step: Double): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.DstARExperiment.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#apply(years:List[Int],testYears:List[Int],modelSizes:List[Int],deltas:List[Int],stepAhead:Int,bandwidth:Double,noise:Double,num_test:Int,column:Int,grid:Int,step:Double):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARExperiment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.DstARNNExperiment", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html", "members_object" : [{"label" : "apply", "tail" : "(years: List[Int], testYears: List[Int], modelSizes: List[Int], deltas: List[Int], stepAhead: Int, bandwidth: Double, noise: CovarianceFunction[DenseVector[Double], Double, DenseMatrix[Double]], num_test: Int, column: Int, grid: Int, step: Double): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.DstARNNExperiment.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#apply(years:List[Int],testYears:List[Int],modelSizes:List[Int],deltas:List[Int],stepAhead:Int,bandwidth:Double,noise:io.github.mandar2812.dynaml.kernels.CovarianceFunction[breeze.linalg.DenseVector[Double],Double,breeze.linalg.DenseMatrix[Double]],num_test:Int,column:Int,grid:Int,step:Double):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARNNExperiment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.DstARXExperiment", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html", "members_object" : [{"label" : "alternate_experiment", "tail" : "(trainstart: String, trainend: String, kernel: LocalScalarKernel[DenseVector[Double]], noise: LocalScalarKernel[DenseVector[Double]], deltas: List[Int], column: Int, ex: List[Int], options: Map[String, String]): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.DstARXExperiment.alternate_experiment", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#alternate_experiment(trainstart:String,trainend:String,kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],deltas:List[Int],column:Int,ex:List[Int],options:Map[String,String]):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(trainstart: String, trainend: String, kernel: LocalScalarKernel[DenseVector[Double]], noise: LocalScalarKernel[DenseVector[Double]], deltas: List[Int], column: Int, ex: List[Int], options: Map[String, String]): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.DstARXExperiment.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#apply(trainstart:String,trainend:String,kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],deltas:List[Int],column:Int,ex:List[Int],options:Map[String,String]):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(years: List[Int], testYears: List[Int], modelSizes: List[Int], deltas: List[Int], exogenous: List[Int], stepAhead: Int, bandwidth: Double, noise: Double, num_test: Int, column: Int, grid: Int, step: Double): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.DstARXExperiment.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#apply(years:List[Int],testYears:List[Int],modelSizes:List[Int],deltas:List[Int],exogenous:List[Int],stepAhead:Int,bandwidth:Double,noise:Double,num_test:Int,column:Int,grid:Int,step:Double):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstARXExperiment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.DstMOGPExperiment", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html", "members_object" : [{"label" : "testRegression", "tail" : "(model: M, scaler: (GaussianScaler, GaussianScaler)): Iterable[AnyRef]", "member" : "io.github.mandar2812.PlasmaML.omni.DstMOGPExperiment.testRegression", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#testRegression[M<:io.github.mandar2812.dynaml.models.ContinuousProcessModel[Iterable[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])],(breeze.linalg.DenseVector[Double],Int),Double,_]](model:M,scaler:(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler)):Iterable[Object]", "kind" : "def"}, {"label" : "test", "tail" : "(model: AbstractGPRegressionModel[Iterable[(DenseVector[Double], DenseVector[Double])], (DenseVector[Double], Int)], scaler: (GaussianScaler, GaussianScaler)): Iterable[AnyRef]", "member" : "io.github.mandar2812.PlasmaML.omni.DstMOGPExperiment.test", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#test(model:io.github.mandar2812.dynaml.models.gp.AbstractGPRegressionModel[Iterable[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])],(breeze.linalg.DenseVector[Double],Int)],scaler:(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler)):Iterable[Object]", "kind" : "def"}, {"label" : "train", "tail" : "(orderF: Int, orderT: Int, useWavelets: Boolean)(kernel: CompositeCovariance[(DenseVector[Double], Int)], noise: CompositeCovariance[(DenseVector[Double], Int)]): (AbstractGPRegressionModel[Stream[(DenseVector[Double], DenseVector[Double])], (DenseVector[Double], Int)], (GaussianScaler, GaussianScaler))", "member" : "io.github.mandar2812.PlasmaML.omni.DstMOGPExperiment.train", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#train(orderF:Int,orderT:Int,useWavelets:Boolean)(kernel:io.github.mandar2812.dynaml.kernels.CompositeCovariance[(breeze.linalg.DenseVector[Double],Int)],noise:io.github.mandar2812.dynaml.kernels.CompositeCovariance[(breeze.linalg.DenseVector[Double],Int)]):(io.github.mandar2812.dynaml.models.gp.AbstractGPRegressionModel[Stream[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])],(breeze.linalg.DenseVector[Double],Int)],(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler))", "kind" : "def"}, {"label" : "onsetClassificationScores", "tail" : ": Boolean", "member" : "io.github.mandar2812.PlasmaML.omni.DstMOGPExperiment.onsetClassificationScores", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#onsetClassificationScores:Boolean", "kind" : "var"}, {"label" : "stormAverages", "tail" : ": Boolean", "member" : "io.github.mandar2812.PlasmaML.omni.DstMOGPExperiment.stormAverages", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#stormAverages:Boolean", "kind" : "var"}, {"label" : "maxIt", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.DstMOGPExperiment.maxIt", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#maxIt:Int", "kind" : "var"}, {"label" : "logScale", "tail" : ": Boolean", "member" : "io.github.mandar2812.PlasmaML.omni.DstMOGPExperiment.logScale", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#logScale:Boolean", "kind" : "var"}, {"label" : "gridStep", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.DstMOGPExperiment.gridStep", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#gridStep:Double", "kind" : "var"}, {"label" : "gridSize", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.DstMOGPExperiment.gridSize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#gridSize:Int", "kind" : "var"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.mandar2812.PlasmaML.omni.DstMOGPExperiment.logger", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMOGPExperiment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html", "members_object" : [{"label" : "apply", "tail" : "(kernel: LocalScalarKernel[Features], noise: LocalScalarKernel[Features], orderF: Int, orderT: Int, useWavelets: Boolean): MultiRegressionMetrics", "member" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#apply(kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[io.github.mandar2812.PlasmaML.omni.OmniMSA.Features],noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[io.github.mandar2812.PlasmaML.omni.OmniMSA.Features],orderF:Int,orderT:Int,useWavelets:Boolean):io.github.mandar2812.dynaml.evaluation.MultiRegressionMetrics", "kind" : "def"}, {"label" : "apply", "tail" : "(orderF: Int, orderT: Int, useWavelets: Boolean): MultiRegressionMetrics", "member" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#apply(orderF:Int,orderT:Int,useWavelets:Boolean):io.github.mandar2812.dynaml.evaluation.MultiRegressionMetrics", "kind" : "def"}, {"label" : "globalOpt", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment.globalOpt", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#globalOpt:String", "kind" : "var"}, {"label" : "useLogScale", "tail" : ": Boolean", "member" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment.useLogScale", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#useLogScale:Boolean", "kind" : "var"}, {"label" : "gridStep", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment.gridStep", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#gridStep:Double", "kind" : "var"}, {"label" : "gridSize", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment.gridSize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#gridSize:Int", "kind" : "var"}, {"label" : "it", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment.it", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#it:Int", "kind" : "var"}, {"label" : "momentum", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment.momentum", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#momentum:Double", "kind" : "var"}, {"label" : "reg", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment.reg", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#reg:Double", "kind" : "var"}, {"label" : "learningRate", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment.learningRate", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#learningRate:Double", "kind" : "var"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.mandar2812.PlasmaML.omni.DstMSAExperiment.logger", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstMSAExperiment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.DstNMTLExperiment", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html", "members_object" : [{"label" : "apply", "tail" : "(model: String, action: String, fileID: String): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.DstNMTLExperiment.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#apply(model:String,action:String,fileID:String):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstNMTLExperiment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.DstPersistenceMOExperiment", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html", "members_object" : [{"label" : "apply", "tail" : "(orderT: Int): MultiRegressionMetrics", "member" : "io.github.mandar2812.PlasmaML.omni.DstPersistenceMOExperiment.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#apply(orderT:Int):io.github.mandar2812.dynaml.evaluation.MultiRegressionMetrics", "kind" : "def"}, {"label" : "stormAverages", "tail" : ": Boolean", "member" : "io.github.mandar2812.PlasmaML.omni.DstPersistenceMOExperiment.stormAverages", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#stormAverages:Boolean", "kind" : "var"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.mandar2812.PlasmaML.omni.DstPersistenceMOExperiment.logger", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistenceMOExperiment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.DstPersistExperiment", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html", "members_object" : [{"label" : "apply", "tail" : "(task: String, fileID: String): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.DstPersistExperiment.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#apply(task:String,fileID:String):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/DstPersistExperiment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.Narmax", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html", "members_object" : [{"label" : "run", "tail" : "(data: DenseVector[Double]): Double", "member" : "io.github.mandar2812.PlasmaML.omni.Narmax.run", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#run(data:breeze.linalg.DenseVector[Double]):Double", "kind" : "def"}, {"label" : "narmax_params", "tail" : ": DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.omni.Narmax.narmax_params", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#narmax_params:breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "toPipe", "tail" : "(): (DenseVector[Double]) ⇒ Double", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[DenseVector[Double], OtherSource, (Double, OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[DenseVector[Double], Double, OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[Double]): Basis[DenseVector[Double]]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[Double, Further]): ComposedPipe[DenseVector[Double], Double, Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: DenseVector[Double]): Double", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/Narmax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.OmniBurton", "shortDescription" : "Contains work-flows for running experimentson hybrid GP-Burton injection inference andprediction models.", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html", "members_object" : [{"label" : "getIncrements", "tail" : ": DataPipe[Stream[(Double, Double)], Iterator[(Double, Double)]]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniBurton.getIncrements", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#getIncrements:io.github.mandar2812.dynaml.pipes.DataPipe[Stream[(Double,Double)],Iterator[(Double,Double)]]", "kind" : "val"}, {"label" : "prepareData", "tail" : ": DataPipe[Stream[(Double, Double)], Stream[(Double, Double)]]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniBurton.prepareData", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#prepareData:io.github.mandar2812.dynaml.pipes.DataPipe[Stream[(Double,Double)],scala.collection.immutable.Stream[(Double,Double)]]", "kind" : "val"}, {"label" : "processTimeSegment", "tail" : "(): DataPipe[DateSection, Iterable[(Double, Double)]]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniBurton.processTimeSegment", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#processTimeSegment:io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.DateSection,Iterable[(Double,Double)]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniBurton$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.OMNIData", "shortDescription" : "Contains static definitions of meta data for the OMNI data set.", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html", "members_object" : [{"label" : "getFilePattern", "tail" : "(year: Int): String", "member" : "io.github.mandar2812.PlasmaML.omni.OMNIData.getFilePattern", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#getFilePattern(year:Int):String", "kind" : "def"}, {"label" : "dateColumns", "tail" : ": List[Int]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNIData.dateColumns", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#dateColumns:List[Int]", "kind" : "val"}, {"label" : "columnNames", "tail" : ": Map[Int, String]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNIData.columnNames", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#columnNames:scala.collection.immutable.Map[Int,String]", "kind" : "var"}, {"label" : "columnFillValues", "tail" : ": Map[Int, String]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNIData.columnFillValues", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#columnFillValues:scala.collection.immutable.Map[Int,String]", "kind" : "var"}, {"label" : "Quantities", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OMNIData.Quantities", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#Quantities", "kind" : "object"}, {"label" : "omni_uri", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OMNIData.omni_uri", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#omni_uri:String", "kind" : "val"}, {"label" : "base_url", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OMNIData.base_url", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#base_url:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.mandar2812.PlasmaML.omni.OMNIData.logger", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNIData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.OMNILoader", "shortDescription" : "Pipelines and workflows which make processing OMNI data easier.", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html", "members_object" : [{"label" : "biDirectionalWindow", "tail" : "(past: (Int, Int), future: (Int, Int))(targetColumn: Int): ComposedPipe[Iterable[String], Iterable[(DateTime, Double)], Iterable[(DateTime, (Seq[Double], Seq[Double]))]]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.biDirectionalWindow", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#biDirectionalWindow(past:(Int,Int),future:(Int,Int))(targetColumn:Int):io.github.mandar2812.dynaml.pipes.ComposedPipe[Iterable[String],Iterable[(org.joda.time.DateTime,Double)],Iterable[(org.joda.time.DateTime,(Seq[Double],Seq[Double]))]]", "kind" : "def"}, {"label" : "omniDataToSlidingTS", "tail" : "(deltaT: Int, time_window: Int)(targetColumn: Int, exogenous_inputs: Seq[Int]): ComposedPipe[Iterable[String], Iterable[(DateTime, Seq[Double])], Stream[(DateTime, Seq[Seq[Double]])]]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.omniDataToSlidingTS", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#omniDataToSlidingTS(deltaT:Int,time_window:Int)(targetColumn:Int,exogenous_inputs:Seq[Int]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Iterable[String],Iterable[(org.joda.time.DateTime,Seq[Double])],scala.collection.immutable.Stream[(org.joda.time.DateTime,Seq[Seq[Double]])]]", "kind" : "def"}, {"label" : "omniVarToSlidingTS", "tail" : "(past: Int, deltaT: Int, time_window: Int)(targetColumn: Int): ComposedPipe[Iterable[String], Iterable[(DateTime, Double)], Iterable[(DateTime, (Seq[Double], Seq[Double]))]]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.omniVarToSlidingTS", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#omniVarToSlidingTS(past:Int,deltaT:Int,time_window:Int)(targetColumn:Int):io.github.mandar2812.dynaml.pipes.ComposedPipe[Iterable[String],Iterable[(org.joda.time.DateTime,Double)],Iterable[(org.joda.time.DateTime,(Seq[Double],Seq[Double]))]]", "kind" : "def"}, {"label" : "omniVarToSlidingTS", "tail" : "(deltaT: Int, time_window: Int)(targetColumn: Int): ComposedPipe[Iterable[String], Iterable[(DateTime, Double)], Stream[(DateTime, Seq[Double])]]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.omniVarToSlidingTS", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#omniVarToSlidingTS(deltaT:Int,time_window:Int)(targetColumn:Int):io.github.mandar2812.dynaml.pipes.ComposedPipe[Iterable[String],Iterable[(org.joda.time.DateTime,Double)],scala.collection.immutable.Stream[(org.joda.time.DateTime,Seq[Double])]]", "kind" : "def"}, {"label" : "mv_forward_time_window", "tail" : ": MetaPipe21[Int, Int, Iterable[(DateTime, Seq[Double])], Stream[(DateTime, Seq[Seq[Double]])]]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.mv_forward_time_window", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#mv_forward_time_window:io.github.mandar2812.dynaml.pipes.MetaPipe21[Int,Int,Iterable[(org.joda.time.DateTime,Seq[Double])],scala.collection.immutable.Stream[(org.joda.time.DateTime,Seq[Seq[Double]])]]", "kind" : "val"}, {"label" : "generalised_time_window", "tail" : ": MetaPipe21[(Int, Int), (Int, Int), Iterable[(DateTime, Double)], Iterable[(DateTime, (Seq[Double], Seq[Double]))]]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.generalised_time_window", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#generalised_time_window:io.github.mandar2812.dynaml.pipes.MetaPipe21[(Int,Int),(Int,Int),Iterable[(org.joda.time.DateTime,Double)],Iterable[(org.joda.time.DateTime,(Seq[Double],Seq[Double]))]]", "kind" : "val"}, {"label" : "forward_and_backward_time_window", "tail" : ": MetaPipe21[Int, (Int, Int), Iterable[(DateTime, Double)], Iterable[(DateTime, (Seq[Double], Seq[Double]))]]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.forward_and_backward_time_window", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#forward_and_backward_time_window:io.github.mandar2812.dynaml.pipes.MetaPipe21[Int,(Int,Int),Iterable[(org.joda.time.DateTime,Double)],Iterable[(org.joda.time.DateTime,(Seq[Double],Seq[Double]))]]", "kind" : "val"}, {"label" : "forward_time_window", "tail" : ": MetaPipe21[Int, Int, Iterable[(DateTime, Double)], Stream[(DateTime, Seq[Double])]]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.forward_time_window", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#forward_time_window:io.github.mandar2812.dynaml.pipes.MetaPipe21[Int,Int,Iterable[(org.joda.time.DateTime,Double)],scala.collection.immutable.Stream[(org.joda.time.DateTime,Seq[Double])]]", "kind" : "val"}, {"label" : "processWithDateTime", "tail" : ": IterableMapPipe[String, (DateTime, Seq[Double])]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.processWithDateTime", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#processWithDateTime:io.github.mandar2812.dynaml.pipes.IterableMapPipe[String,(org.joda.time.DateTime,Seq[Double])]", "kind" : "val"}, {"label" : "omniFileToStream", "tail" : "(targetColumn: Int, exogenousInputs: Seq[Int]): DataPipe[String, Iterable[String]]", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.omniFileToStream", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#omniFileToStream(targetColumn:Int,exogenousInputs:Seq[Int]):io.github.mandar2812.dynaml.pipes.DataPipe[String,Iterable[String]]", "kind" : "def"}, {"label" : "download", "tail" : "(year_range: Range, path: Path): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.download", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#download(year_range:Range,path:ammonite.ops.Path):Unit", "kind" : "def"}, {"label" : "get_download_url", "tail" : "(year: Int): String", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.get_download_url", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#get_download_url(year:Int):String", "kind" : "def"}, {"label" : "dt_format", "tail" : ": DateTimeFormatter", "member" : "io.github.mandar2812.PlasmaML.omni.OMNILoader.dt_format", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#dt_format:org.joda.time.format.DateTimeFormatter", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OMNILoader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.OmniMSA", "shortDescription" : "Contains helper methods to train modelsfor Multiple Step Ahead (multiple hour ahead)prediction of OMNI time series.", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html", "members_object" : [{"label" : "apply", "tail" : "(alpha: Double, reg: Double, momentum: Double, maxIt: Int, mini: Double): MultiRegressionMetrics", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#apply(alpha:Double,reg:Double,momentum:Double,maxIt:Int,mini:Double):io.github.mandar2812.dynaml.evaluation.MultiRegressionMetrics", "kind" : "def"}, {"label" : "test", "tail" : "(): MultiRegressionMetrics", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.test", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#test():io.github.mandar2812.dynaml.evaluation.MultiRegressionMetrics", "kind" : "def"}, {"label" : "test", "tail" : "(model: GenericFFNeuralNet[Data, LayerParams, Features], scaler: DataScales): MultiRegressionMetrics", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.test", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#test(model:io.github.mandar2812.dynaml.models.neuralnets.GenericFFNeuralNet[io.github.mandar2812.PlasmaML.omni.OmniMSA.Data,io.github.mandar2812.PlasmaML.omni.OmniMSA.LayerParams,io.github.mandar2812.PlasmaML.omni.OmniMSA.Features],scaler:io.github.mandar2812.PlasmaML.omni.OmniMSA.DataScales):io.github.mandar2812.dynaml.evaluation.MultiRegressionMetrics", "kind" : "def"}, {"label" : "test", "tail" : "(model: MVStudentsTModel[Data, Features], scaler: DataScales): MultiRegressionMetrics", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.test", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#test(model:io.github.mandar2812.dynaml.models.stp.MVStudentsTModel[io.github.mandar2812.PlasmaML.omni.OmniMSA.Data,io.github.mandar2812.PlasmaML.omni.OmniMSA.Features],scaler:io.github.mandar2812.PlasmaML.omni.OmniMSA.DataScales):io.github.mandar2812.dynaml.evaluation.MultiRegressionMetrics", "kind" : "def"}, {"label" : "train", "tail" : "(kernel: LocalScalarKernel[Features], noise: LocalScalarKernel[Features], gridSize: Int, gridStep: Double, logSc: Boolean, globalOpt: String, maxIt: Int, phi: DataPipe[Features, DenseVector[Double]]): (MVStudentsTModel[Data, Features], DataScales)", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.train", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#train(kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[io.github.mandar2812.PlasmaML.omni.OmniMSA.Features],noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[io.github.mandar2812.PlasmaML.omni.OmniMSA.Features],gridSize:Int,gridStep:Double,logSc:Boolean,globalOpt:String,maxIt:Int,phi:io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniMSA.Features,breeze.linalg.DenseVector[Double]]):(io.github.mandar2812.dynaml.models.stp.MVStudentsTModel[io.github.mandar2812.PlasmaML.omni.OmniMSA.Data,io.github.mandar2812.PlasmaML.omni.OmniMSA.Features],io.github.mandar2812.PlasmaML.omni.OmniMSA.DataScales)", "kind" : "def"}, {"label" : "train", "tail" : "(alpha: Double, reg: Double, momentum: Double, maxIt: Int, mini: Double, useWaveletBasis: Boolean): (GenericFFNeuralNet[Data, LayerParams, Features], DataScales)", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.train", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#train(alpha:Double,reg:Double,momentum:Double,maxIt:Int,mini:Double,useWaveletBasis:Boolean):(io.github.mandar2812.dynaml.models.neuralnets.GenericFFNeuralNet[io.github.mandar2812.PlasmaML.omni.OmniMSA.Data,io.github.mandar2812.PlasmaML.omni.OmniMSA.LayerParams,io.github.mandar2812.PlasmaML.omni.OmniMSA.Features],io.github.mandar2812.PlasmaML.omni.OmniMSA.DataScales)", "kind" : "def"}, {"label" : "prepareData", "tail" : "(): DataPipe[String, (Data, DataScales)]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.prepareData", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#prepareData:io.github.mandar2812.dynaml.pipes.DataPipe[String,(io.github.mandar2812.PlasmaML.omni.OmniMSA.Data,io.github.mandar2812.PlasmaML.omni.OmniMSA.DataScales)]", "kind" : "def"}, {"label" : "haarWaveletPipe", "tail" : "(): IterableMapPipe[(DenseVector[Double], DenseVector[Double]), (DenseVector[Double], DenseVector[Double])]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.haarWaveletPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#haarWaveletPipe:io.github.mandar2812.dynaml.pipes.IterableMapPipe[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]),(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])]", "kind" : "def"}, {"label" : "quietTimeSegment", "tail" : ": (String, String)", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.quietTimeSegment", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#quietTimeSegment:(String,String)", "kind" : "var"}, {"label" : "LayerParams", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.LayerParams", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#LayerParams=(breeze.linalg.DenseMatrix[Double],breeze.linalg.DenseVector[Double])", "kind" : "type"}, {"label" : "DataScales", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.DataScales", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#DataScales=(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler)", "kind" : "type"}, {"label" : "ScoresAndLabels", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.ScoresAndLabels", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#ScoresAndLabels=Iterable[(io.github.mandar2812.PlasmaML.omni.OmniMSA.Targets,io.github.mandar2812.PlasmaML.omni.OmniMSA.Targets)]", "kind" : "type"}, {"label" : "Data", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.Data", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#Data=Iterable[(io.github.mandar2812.PlasmaML.omni.OmniMSA.Features,io.github.mandar2812.PlasmaML.omni.OmniMSA.Targets)]", "kind" : "type"}, {"label" : "Targets", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.Targets", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#Targets=breeze.linalg.DenseVector[Double]", "kind" : "type"}, {"label" : "Features", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMSA.Features", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#Features=breeze.linalg.DenseVector[Double]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMSA$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels", "shortDescription" : "Created by mandar on 16\/6\/16.", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html", "members_object" : [{"label" : "test", "tail" : "(): MultiRegressionMetrics", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.test", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#test():io.github.mandar2812.dynaml.evaluation.MultiRegressionMetrics", "kind" : "def"}, {"label" : "generatePredictions", "tail" : "(model: AbstractGPRegressionModel[Iterable[(DenseVector[Double], DenseVector[Double])], (DenseVector[Double], Int)], sc: (GaussianScaler, GaussianScaler), predictionIndex: Int): Iterable[(Double, Double, Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.generatePredictions", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#generatePredictions(model:io.github.mandar2812.dynaml.models.gp.AbstractGPRegressionModel[Iterable[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])],(breeze.linalg.DenseVector[Double],Int)],sc:(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler),predictionIndex:Int):Iterable[(Double,Double,Double,Double)]", "kind" : "def"}, {"label" : "generateOnsetPredictions", "tail" : "(model: AbstractGPRegressionModel[Iterable[(DenseVector[Double], DenseVector[Double])], (DenseVector[Double], Int)], sc: (GaussianScaler, GaussianScaler), predictionIndex: Int): Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.generateOnsetPredictions", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#generateOnsetPredictions(model:io.github.mandar2812.dynaml.models.gp.AbstractGPRegressionModel[Iterable[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])],(breeze.linalg.DenseVector[Double],Int)],sc:(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler),predictionIndex:Int):Seq[(Double,Double)]", "kind" : "def"}, {"label" : "testOnset", "tail" : "(model: AbstractGPRegressionModel[Iterable[(DenseVector[Double], DenseVector[Double])], (DenseVector[Double], Int)], sc: (GaussianScaler, GaussianScaler)): Seq[BinaryClassificationMetrics]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.testOnset", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#testOnset(model:io.github.mandar2812.dynaml.models.gp.AbstractGPRegressionModel[Iterable[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])],(breeze.linalg.DenseVector[Double],Int)],sc:(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler)):Seq[io.github.mandar2812.dynaml.evaluation.BinaryClassificationMetrics]", "kind" : "def"}, {"label" : "test", "tail" : "(model: M, sc: (GaussianScaler, GaussianScaler)): Seq[RegressionMetrics]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.test", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#test[M<:io.github.mandar2812.dynaml.models.ContinuousProcessModel[Iterable[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])],(breeze.linalg.DenseVector[Double],Int),Double,_]](model:M,sc:(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler)):Seq[io.github.mandar2812.dynaml.evaluation.RegressionMetrics]", "kind" : "def"}, {"label" : "train", "tail" : "(kernel: LocalScalarKernel[(DenseVector[Double], Int)], noise: LocalScalarKernel[(DenseVector[Double], Int)], grid: Int, step: Double, useLogSc: Boolean, maxIt: Int): (MOGPRegressionModel[DenseVector[Double]], (GaussianScaler, GaussianScaler))", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.train", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#train(kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(breeze.linalg.DenseVector[Double],Int)],noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(breeze.linalg.DenseVector[Double],Int)],grid:Int,step:Double,useLogSc:Boolean,maxIt:Int):(io.github.mandar2812.dynaml.models.gp.MOGPRegressionModel[breeze.linalg.DenseVector[Double]],(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler))", "kind" : "def"}, {"label" : "trainStormsGrad", "tail" : "(kernel: LocalScalarKernel[(DenseVector[Double], Int)], noise: LocalScalarKernel[(DenseVector[Double], Int)], grid: Int, step: Double, useLogSc: Boolean, maxIt: Int): (MOGPRegressionModel[DenseVector[Double]], (GaussianScaler, GaussianScaler))", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.trainStormsGrad", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#trainStormsGrad(kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(breeze.linalg.DenseVector[Double],Int)],noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(breeze.linalg.DenseVector[Double],Int)],grid:Int,step:Double,useLogSc:Boolean,maxIt:Int):(io.github.mandar2812.dynaml.models.gp.MOGPRegressionModel[breeze.linalg.DenseVector[Double]],(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler))", "kind" : "def"}, {"label" : "trainSTPStorms", "tail" : "(kernel: LocalScalarKernel[(DenseVector[Double], Int)], noise: LocalScalarKernel[(DenseVector[Double], Int)], mu: Double, grid: Int, step: Double, useLogSc: Boolean, maxIt: Int): (MOStudentTRegression[DenseVector[Double]], (GaussianScaler, GaussianScaler))", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.trainSTPStorms", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#trainSTPStorms(kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(breeze.linalg.DenseVector[Double],Int)],noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(breeze.linalg.DenseVector[Double],Int)],mu:Double,grid:Int,step:Double,useLogSc:Boolean,maxIt:Int):(io.github.mandar2812.dynaml.models.stp.MOStudentTRegression[breeze.linalg.DenseVector[Double]],(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler))", "kind" : "def"}, {"label" : "trainStormsKron", "tail" : "(kernel: LocalScalarKernel[DenseVector[Double]], noise: LocalScalarKernel[DenseVector[Double]], coRegK: LocalScalarKernel[Int], grid: Int, step: Double, useLogSc: Boolean, maxIt: Int): (AbstractGPRegressionModel[Stream[(DenseVector[Double], DenseVector[Double])], (DenseVector[Double], Int)], (GaussianScaler, GaussianScaler))", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.trainStormsKron", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#trainStormsKron(kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],coRegK:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Int],grid:Int,step:Double,useLogSc:Boolean,maxIt:Int):(io.github.mandar2812.dynaml.models.gp.AbstractGPRegressionModel[Stream[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])],(breeze.linalg.DenseVector[Double],Int)],(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler))", "kind" : "def"}, {"label" : "trainStorms", "tail" : "(kernel: LocalScalarKernel[(DenseVector[Double], Int)], noise: LocalScalarKernel[(DenseVector[Double], Int)], grid: Int, step: Double, useLogSc: Boolean, maxIt: Int): (AbstractGPRegressionModel[Stream[(DenseVector[Double], DenseVector[Double])], (DenseVector[Double], Int)], (GaussianScaler, GaussianScaler))", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.trainStorms", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#trainStorms(kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(breeze.linalg.DenseVector[Double],Int)],noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(breeze.linalg.DenseVector[Double],Int)],grid:Int,step:Double,useLogSc:Boolean,maxIt:Int):(io.github.mandar2812.dynaml.models.gp.AbstractGPRegressionModel[Stream[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])],(breeze.linalg.DenseVector[Double],Int)],(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler))", "kind" : "def"}, {"label" : "haarWaveletPipe", "tail" : "(): IterableMapPipe[(DenseVector[Double], DenseVector[Double]), (DenseVector[Double], DenseVector[Double])]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.haarWaveletPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#haarWaveletPipe:io.github.mandar2812.dynaml.pipes.IterableMapPipe[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]),(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])]", "kind" : "def"}, {"label" : "gHTarg", "tail" : "(): HaarWaveletFilter", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.gHTarg", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#gHTarg:io.github.mandar2812.dynaml.wavelets.HaarWaveletFilter", "kind" : "def"}, {"label" : "gHFeat", "tail" : "(): GroupedHaarWaveletFilter", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.gHFeat", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#gHFeat:io.github.mandar2812.dynaml.wavelets.GroupedHaarWaveletFilter", "kind" : "def"}, {"label" : "numStormsStart", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.numStormsStart", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#numStormsStart:Int", "kind" : "val"}, {"label" : "numStorms", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.numStorms", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#numStorms:Int", "kind" : "var"}, {"label" : "threshold", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.threshold", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#threshold:Double", "kind" : "var"}, {"label" : "deltaT", "tail" : ": List[Int]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.deltaT", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#deltaT:List[Int]", "kind" : "var"}, {"label" : "useWaveletBasis", "tail" : ": Boolean", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.useWaveletBasis", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#useWaveletBasis:Boolean", "kind" : "var"}, {"label" : "names", "tail" : ": Map[Int, String]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.names", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#names:scala.collection.immutable.Map[Int,String]", "kind" : "val"}, {"label" : "deltaOperationARXMult", "tail" : ": (List[Int], Int) ⇒ DataPipe[Iterable[(Double, DenseVector[Double])], Stream[(DenseVector[Double], DenseVector[Double])]]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.deltaOperationARXMult", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#deltaOperationARXMult:(List[Int],Int)=>io.github.mandar2812.dynaml.pipes.DataPipe[Iterable[(Double,breeze.linalg.DenseVector[Double])],scala.collection.immutable.Stream[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])]]", "kind" : "val"}, {"label" : "deltaOperationMult", "tail" : ": (Int, Int) ⇒ DataPipe[Iterable[(Double, Double)], Stream[(DenseVector[Double], DenseVector[Double])]]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.deltaOperationMult", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#deltaOperationMult:(Int,Int)=>io.github.mandar2812.dynaml.pipes.DataPipe[Iterable[(Double,Double)],scala.collection.immutable.Stream[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])]]", "kind" : "val"}, {"label" : "preProcess", "tail" : "(): ComposedPipe[String, Iterable[String], Iterable[String]]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.preProcess", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#preProcess:io.github.mandar2812.dynaml.pipes.ComposedPipe[String,Iterable[String],Iterable[String]]", "kind" : "def"}, {"label" : "dayofYearformat", "tail" : ": DateTimeFormatter", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.dayofYearformat", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#dayofYearformat:org.joda.time.format.DateTimeFormatter", "kind" : "val"}, {"label" : "globalOpt", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.globalOpt", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#globalOpt:String", "kind" : "var"}, {"label" : "exogenousInputs", "tail" : ": List[Int]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.exogenousInputs", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#exogenousInputs:List[Int]", "kind" : "var"}, {"label" : "column", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.column", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#column:Int", "kind" : "var"}, {"label" : "activations", "tail" : ": List[Activation[DenseVector[Double]]]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.activations", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#activations:List[io.github.mandar2812.dynaml.models.neuralnets.Activation[breeze.linalg.DenseVector[Double]]]", "kind" : "var"}, {"label" : "neuronActivations", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.neuronActivations", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#neuronActivations:List[String]", "kind" : "var"}, {"label" : "neuronCounts", "tail" : ": List[Int]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.neuronCounts", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#neuronCounts:List[Int]", "kind" : "var"}, {"label" : "hidden_layers", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.hidden_layers", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#hidden_layers:Int", "kind" : "var"}, {"label" : "testEnd", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.testEnd", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#testEnd:String", "kind" : "var"}, {"label" : "testStart", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.testStart", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#testStart:String", "kind" : "var"}, {"label" : "validationEnd", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.validationEnd", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#validationEnd:String", "kind" : "var"}, {"label" : "validationStart", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.validationStart", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#validationStart:String", "kind" : "var"}, {"label" : "trainingEnd", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.trainingEnd", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#trainingEnd:String", "kind" : "var"}, {"label" : "trainingStart", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.trainingStart", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#trainingStart:String", "kind" : "var"}, {"label" : "orderTarget", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.orderTarget", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#orderTarget:Int", "kind" : "var"}, {"label" : "orderFeat", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.orderFeat", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#orderFeat:Int", "kind" : "var"}, {"label" : "formatter", "tail" : ": DateTimeFormatter", "member" : "io.github.mandar2812.PlasmaML.omni.OmniMultiOutputModels.formatter", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#formatter:org.joda.time.format.DateTimeFormatter", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniMultiOutputModels$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.OmniOSA", "shortDescription" : "A consolidation of models and work-flows for OSA predictionand reproducible research on the hourly resolution OMNI data.", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html", "members_object" : [{"label" : "experiment", "tail" : "(kernel: VectorKernel, noise: VectorKernel, meanFunc: DataPipe[Features, Double], orders: Range, modelSelectionStorms: String, testStorms: String, resultsFile: String, zeros: List[Int]): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.experiment", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#experiment(kernel:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,noise:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,meanFunc:io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,Double],orders:Range,modelSelectionStorms:String,testStorms:String,resultsFile:String,zeros:List[Int]):Unit", "kind" : "def"}, {"label" : "buildAndTestSGP", "tail" : "(kernel: VectorKernel, noise: VectorKernel, lambda: Double, tau: Double, meanFunc: DataPipe[Features, Double], stormFile: String): RegressionMetrics", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.buildAndTestSGP", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#buildAndTestSGP(kernel:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,noise:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,lambda:Double,tau:Double,meanFunc:io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,Double],stormFile:String):io.github.mandar2812.dynaml.evaluation.RegressionMetrics", "kind" : "def"}, {"label" : "buildAndTestGP", "tail" : "(kernel: VectorKernel, noise: VectorKernel, meanFunc: DataPipe[Features, Double], stormFile: String): RegressionMetrics", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.buildAndTestGP", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#buildAndTestGP(kernel:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,noise:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,meanFunc:io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,Double],stormFile:String):io.github.mandar2812.dynaml.evaluation.RegressionMetrics", "kind" : "def"}, {"label" : "buildGPOnTrainingSections", "tail" : "(kernel: VectorKernel, noise: VectorKernel, meanFunc: DataPipe[Features, Output]): (GP, Scales)", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.buildGPOnTrainingSections", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#buildGPOnTrainingSections(kernel:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,noise:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,meanFunc:io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,io.github.mandar2812.PlasmaML.omni.OmniOSA.Output]):(io.github.mandar2812.PlasmaML.omni.OmniOSA.GP,io.github.mandar2812.PlasmaML.omni.OmniOSA.Scales)", "kind" : "def"}, {"label" : "generateSGPPredictions", "tail" : "(testFile: String, hoursOffset: Int): SideEffectPipe[(SGP, Scales)]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.generateSGPPredictions", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#generateSGPPredictions(testFile:String,hoursOffset:Int):io.github.mandar2812.dynaml.pipes.SideEffectPipe[(io.github.mandar2812.PlasmaML.omni.OmniOSA.SGP,io.github.mandar2812.PlasmaML.omni.OmniOSA.Scales)]", "kind" : "def"}, {"label" : "generateGPPredictions", "tail" : "(testFile: String, hoursOffset: Int): SideEffectPipe[(GP, Scales)]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.generateGPPredictions", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#generateGPPredictions(testFile:String,hoursOffset:Int):io.github.mandar2812.dynaml.pipes.SideEffectPipe[(io.github.mandar2812.PlasmaML.omni.OmniOSA.GP,io.github.mandar2812.PlasmaML.omni.OmniOSA.Scales)]", "kind" : "def"}, {"label" : "gpTest", "tail" : "(testFile: String): DataPipe[(GP, Scales), RegressionMetrics]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.gpTest", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#gpTest(testFile:String):io.github.mandar2812.dynaml.pipes.DataPipe[(io.github.mandar2812.PlasmaML.omni.OmniOSA.GP,io.github.mandar2812.PlasmaML.omni.OmniOSA.Scales),io.github.mandar2812.dynaml.evaluation.RegressionMetrics]", "kind" : "def"}, {"label" : "sgpTest", "tail" : "(testFile: String): DataPipe[(SGP, Scales), RegressionMetrics]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.sgpTest", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#sgpTest(testFile:String):io.github.mandar2812.dynaml.pipes.DataPipe[(io.github.mandar2812.PlasmaML.omni.OmniOSA.SGP,io.github.mandar2812.PlasmaML.omni.OmniOSA.Scales),io.github.mandar2812.dynaml.evaluation.RegressionMetrics]", "kind" : "def"}, {"label" : "sgpTrain", "tail" : "(kernel: VectorKernel, noise: VectorKernel, lambda: Double, tau: Double, meanFunc: DataPipe[Features, Output]): DataPipe[DataAndScales, (SGP, Scales)]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.sgpTrain", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#sgpTrain(kernel:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,noise:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,lambda:Double,tau:Double,meanFunc:io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,io.github.mandar2812.PlasmaML.omni.OmniOSA.Output]):io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.DataAndScales,(io.github.mandar2812.PlasmaML.omni.OmniOSA.SGP,io.github.mandar2812.PlasmaML.omni.OmniOSA.Scales)]", "kind" : "def"}, {"label" : "gpTrain", "tail" : "(kernel: VectorKernel, noise: VectorKernel, meanFunc: DataPipe[Features, Output]): DataPipe[DataAndScales, (AbstractGPRegressionModel[Seq[(DenseVector[Double], Double)], DenseVector[Double]], Scales)]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.gpTrain", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#gpTrain(kernel:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,noise:io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel,meanFunc:io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,io.github.mandar2812.PlasmaML.omni.OmniOSA.Output]):io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.DataAndScales,(io.github.mandar2812.dynaml.models.gp.AbstractGPRegressionModel[Seq[(breeze.linalg.DenseVector[Double],Double)],breeze.linalg.DenseVector[Double]],io.github.mandar2812.PlasmaML.omni.OmniOSA.Scales)]", "kind" : "def"}, {"label" : "trainMeanFunc", "tail" : "(reg: Double): GeneralizedLinearModel[OptData]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.trainMeanFunc", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#trainMeanFunc(reg:Double):io.github.mandar2812.dynaml.models.lm.GeneralizedLinearModel[OptData]", "kind" : "def"}, {"label" : "validationDataPipeline", "tail" : "(scales: (GaussianScaler, GaussianScaler)): ComposedPipe[Iterable[DateSection], Iterable[Data], Stream[(Features, Output)]]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.validationDataPipeline", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#validationDataPipeline(scales:(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler)):io.github.mandar2812.dynaml.pipes.ComposedPipe[Iterable[io.github.mandar2812.PlasmaML.omni.OmniOSA.DateSection],Iterable[io.github.mandar2812.PlasmaML.omni.OmniOSA.Data],scala.collection.immutable.Stream[(io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,io.github.mandar2812.PlasmaML.omni.OmniOSA.Output)]]", "kind" : "def"}, {"label" : "extractValidationSectionsPipe", "tail" : "(num_storms: Int): ComposedPipe[String, Iterable[(String, String)], Iterable[DateSection]]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.extractValidationSectionsPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#extractValidationSectionsPipe(num_storms:Int):io.github.mandar2812.dynaml.pipes.ComposedPipe[String,Iterable[(String,String)],Iterable[io.github.mandar2812.PlasmaML.omni.OmniOSA.DateSection]]", "kind" : "def"}, {"label" : "getStormTimeRanges", "tail" : "(offsetHours: Int): DataPipe[String, (String, String)]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.getStormTimeRanges", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#getStormTimeRanges(offsetHours:Int):io.github.mandar2812.dynaml.pipes.DataPipe[String,(String,String)]", "kind" : "def"}, {"label" : "dataPipeline", "tail" : "(): ComposedPipe[Iterable[DateSection], (Iterable[(DenseVector[Double], DenseVector[Double])], (GaussianScaler, GaussianScaler)), (Iterable[(Features, Double)], (GaussianScaler, GaussianScaler))]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.dataPipeline", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#dataPipeline:io.github.mandar2812.dynaml.pipes.ComposedPipe[Iterable[io.github.mandar2812.PlasmaML.omni.OmniOSA.DateSection],(Iterable[(breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double])],(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler)),(Iterable[(io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,Double)],(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler))]", "kind" : "def"}, {"label" : "meanFuncNarmax", "tail" : ": DataPipe[Features, Double]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.meanFuncNarmax", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#meanFuncNarmax:io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,Double]", "kind" : "val"}, {"label" : "meanFuncPersistence", "tail" : "(): DataPipe[Features, Double]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.meanFuncPersistence", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#meanFuncPersistence:io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,Double]", "kind" : "def"}, {"label" : "maxIterations", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.maxIterations", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#maxIterations:Int", "kind" : "var"}, {"label" : "useLogScale", "tail" : ": Boolean", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.useLogScale", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#useLogScale:Boolean", "kind" : "var"}, {"label" : "gridStep", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.gridStep", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#gridStep:Double", "kind" : "var"}, {"label" : "gridSize", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.gridSize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#gridSize:Int", "kind" : "var"}, {"label" : "globalOpt", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.globalOpt", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#globalOpt:String", "kind" : "var"}, {"label" : "postNormalisation", "tail" : ": IterableMapPipe[(Features, Features), (Features, Double)]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.postNormalisation", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#postNormalisation:io.github.mandar2812.dynaml.pipes.IterableMapPipe[(io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,io.github.mandar2812.PlasmaML.omni.OmniOSA.Features),(io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,Double)]", "kind" : "val"}, {"label" : "preNormalisation", "tail" : ": IterableMapPipe[(Features, Output), (Features, DenseVector[Output])]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.preNormalisation", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#preNormalisation:io.github.mandar2812.dynaml.pipes.IterableMapPipe[(io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,io.github.mandar2812.PlasmaML.omni.OmniOSA.Output),(io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,breeze.linalg.DenseVector[io.github.mandar2812.PlasmaML.omni.OmniOSA.Output])]", "kind" : "val"}, {"label" : "compileSegments", "tail" : "(): ComposedPipe[Iterable[DateSection], Iterable[Data], Stream[(Features, Output)]]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.compileSegments", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#compileSegments:io.github.mandar2812.dynaml.pipes.ComposedPipe[Iterable[io.github.mandar2812.PlasmaML.omni.OmniOSA.DateSection],Iterable[io.github.mandar2812.PlasmaML.omni.OmniOSA.Data],scala.collection.immutable.Stream[(io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,io.github.mandar2812.PlasmaML.omni.OmniOSA.Output)]]", "kind" : "def"}, {"label" : "processTimeSegment", "tail" : "(): DataPipe[DateSection, Data]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.processTimeSegment", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#processTimeSegment:io.github.mandar2812.dynaml.pipes.DataPipe[io.github.mandar2812.PlasmaML.omni.OmniOSA.DateSection,io.github.mandar2812.PlasmaML.omni.OmniOSA.Data]", "kind" : "def"}, {"label" : "prepareData", "tail" : "(start: String, end: String): DataPipe[Iterable[String], Data]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.prepareData", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#prepareData(start:String,end:String):io.github.mandar2812.dynaml.pipes.DataPipe[Iterable[String],io.github.mandar2812.PlasmaML.omni.OmniOSA.Data]", "kind" : "def"}, {"label" : "extractNarmaxFeatures", "tail" : ": IterableMapPipe[(TimeStamp, Features), (TimeStamp, DenseVector[Double])]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.extractNarmaxFeatures", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#extractNarmaxFeatures:io.github.mandar2812.dynaml.pipes.IterableMapPipe[(io.github.mandar2812.PlasmaML.omni.OmniOSA.TimeStamp,io.github.mandar2812.PlasmaML.omni.OmniOSA.Features),(io.github.mandar2812.PlasmaML.omni.OmniOSA.TimeStamp,breeze.linalg.DenseVector[Double])]", "kind" : "val"}, {"label" : "validationDataSections", "tail" : ": Stream[DateSection]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.validationDataSections", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#validationDataSections:Stream[io.github.mandar2812.PlasmaML.omni.OmniOSA.DateSection]", "kind" : "var"}, {"label" : "trainingDataSections", "tail" : ": Stream[DateSection]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.trainingDataSections", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#trainingDataSections:Stream[io.github.mandar2812.PlasmaML.omni.OmniOSA.DateSection]", "kind" : "var"}, {"label" : "clearExogenousVars", "tail" : "(): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.clearExogenousVars", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#clearExogenousVars():Unit", "kind" : "def"}, {"label" : "setExogenousVars", "tail" : "(cols: List[Int], orders: List[Int], changeModelType: Boolean): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.setExogenousVars", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#setExogenousVars(cols:List[Int],orders:List[Int],changeModelType:Boolean):Unit", "kind" : "def"}, {"label" : "setTarget", "tail" : "(col: Int, order: Int): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.setTarget", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#setTarget(col:Int,order:Int):Unit", "kind" : "def"}, {"label" : "input_dimensions", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.input_dimensions", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#input_dimensions:Int", "kind" : "def"}, {"label" : "modelOrders", "tail" : "(): (Int, List[Int])", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.modelOrders", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#modelOrders:(Int,List[Int])", "kind" : "def"}, {"label" : "modelType_", "tail" : "(m: String): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.modelType_", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#modelType_(m:String):Unit", "kind" : "def"}, {"label" : "_modelType", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA._modelType", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#_modelType:String", "kind" : "def"}, {"label" : "_targetColumn", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA._targetColumn", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#_targetColumn:Int", "kind" : "def"}, {"label" : "useVBz_", "tail" : "(v: Boolean): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.useVBz_", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#useVBz_(v:Boolean):Unit", "kind" : "def"}, {"label" : "_useVBz", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA._useVBz", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#_useVBz:Boolean", "kind" : "def"}, {"label" : "standardise", "tail" : ": Boolean", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.standardise", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#standardise:Boolean", "kind" : "var"}, {"label" : "stormsFile3", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.stormsFile3", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#stormsFile3:String", "kind" : "val"}, {"label" : "stormsFile2", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.stormsFile2", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#stormsFile2:String", "kind" : "val"}, {"label" : "stormsFileJi", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.stormsFileJi", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#stormsFileJi:String", "kind" : "val"}, {"label" : "dataDir", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.dataDir", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#dataDir:String", "kind" : "var"}, {"label" : "sessionData", "tail" : ": MutableList[Map[String, AnyVal]]", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.sessionData", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#sessionData:scala.collection.mutable.MutableList[Map[String,AnyVal]]", "kind" : "val"}, {"label" : "dayofYearformatter", "tail" : ": DateTimeFormatter", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.dayofYearformatter", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#dayofYearformatter:org.joda.time.format.DateTimeFormatter", "kind" : "val"}, {"label" : "formatter", "tail" : ": DateTimeFormatter", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.formatter", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#formatter:org.joda.time.format.DateTimeFormatter", "kind" : "val"}, {"label" : "SGP", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.SGP", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#SGP=io.github.mandar2812.dynaml.models.sgp.ESGPModel[io.github.mandar2812.PlasmaML.omni.OmniOSA.Data,io.github.mandar2812.PlasmaML.omni.OmniOSA.Features]", "kind" : "type"}, {"label" : "GP", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.GP", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#GP=io.github.mandar2812.dynaml.models.gp.AbstractGPRegressionModel[Seq[(io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,io.github.mandar2812.PlasmaML.omni.OmniOSA.Output)],io.github.mandar2812.PlasmaML.omni.OmniOSA.Features]", "kind" : "type"}, {"label" : "TimeStamp", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.TimeStamp", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#TimeStamp=Double", "kind" : "type"}, {"label" : "DateSection", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.DateSection", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#DateSection=(String,String)", "kind" : "type"}, {"label" : "VectorKernel", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.VectorKernel", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#VectorKernel=io.github.mandar2812.dynaml.kernels.LocalScalarKernel[io.github.mandar2812.PlasmaML.omni.OmniOSA.Features]", "kind" : "type"}, {"label" : "DataAndScales", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.DataAndScales", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#DataAndScales=(io.github.mandar2812.PlasmaML.omni.OmniOSA.Data,io.github.mandar2812.PlasmaML.omni.OmniOSA.Scales)", "kind" : "type"}, {"label" : "Scales", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.Scales", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#Scales=(io.github.mandar2812.dynaml.utils.GaussianScaler,io.github.mandar2812.dynaml.utils.GaussianScaler)", "kind" : "type"}, {"label" : "Data", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.Data", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#Data=Iterable[(io.github.mandar2812.PlasmaML.omni.OmniOSA.Features,io.github.mandar2812.PlasmaML.omni.OmniOSA.Output)]", "kind" : "type"}, {"label" : "Output", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.Output", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#Output=Double", "kind" : "type"}, {"label" : "Features", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.omni.OmniOSA.Features", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#Features=breeze.linalg.DenseVector[Double]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/OmniOSA$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.TestGPOmni", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html", "members_object" : [{"label" : "runExperiment", "tail" : "(year: Int, yeartest: Int, kernel: LocalScalarKernel[DenseVector[Double]], bandwidth: Double, noise: LocalScalarKernel[DenseVector[Double]], num_training: Int, num_test: Int, columns: List[Int], grid: Int, step: Double, globalOpt: String, randomSample: Boolean, opt: Map[String, String]): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.TestGPOmni.runExperiment", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#runExperiment(year:Int,yeartest:Int,kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],bandwidth:Double,noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],num_training:Int,num_test:Int,columns:List[Int],grid:Int,step:Double,globalOpt:String,randomSample:Boolean,opt:Map[String,String]):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(kernel: LocalScalarKernel[DenseVector[Double]], year: Int, yeartest: Int, bandwidth: Double, noise: LocalScalarKernel[DenseVector[Double]], num_training: Int, num_test: Int, columns: List[Int], grid: Int, step: Double, randomSample: Boolean, globalOpt: String, stepSize: Double, maxIt: Int): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.TestGPOmni.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#apply(kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],year:Int,yeartest:Int,bandwidth:Double,noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],num_training:Int,num_test:Int,columns:List[Int],grid:Int,step:Double,randomSample:Boolean,globalOpt:String,stepSize:Double,maxIt:Int):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestGPOmni$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.TestLSSVMOmni", "shortDescription" : "Created by mandar on 11\/2\/16.", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html", "members_object" : [{"label" : "runExperiment", "tail" : "(year: Int, yearTest: Int, kernel: LocalSVMKernel[DenseVector[Double]], deltaT: Int, timelag: Int, stepPred: Int, num_training: Int, num_test: Int, column: Int, opt: Map[String, String]): Seq[Seq[AnyVal]]", "member" : "io.github.mandar2812.PlasmaML.omni.TestLSSVMOmni.runExperiment", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#runExperiment(year:Int,yearTest:Int,kernel:io.github.mandar2812.dynaml.kernels.LocalSVMKernel[breeze.linalg.DenseVector[Double]],deltaT:Int,timelag:Int,stepPred:Int,num_training:Int,num_test:Int,column:Int,opt:Map[String,String]):Seq[Seq[AnyVal]]", "kind" : "def"}, {"label" : "apply", "tail" : "(year: Int, yeartest: Int, kern: LocalSVMKernel[DenseVector[Double]], delta: Int, timeLag: Int, stepAhead: Int, num_training: Int, num_test: Int, column: Int, regularization: Double): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.TestLSSVMOmni.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#apply(year:Int,yeartest:Int,kern:io.github.mandar2812.dynaml.kernels.LocalSVMKernel[breeze.linalg.DenseVector[Double]],delta:Int,timeLag:Int,stepAhead:Int,num_training:Int,num_test:Int,column:Int,regularization:Double):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestLSSVMOmni$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.TestNNOmni", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html", "members_object" : [{"label" : "runExperiment", "tail" : "(year: Int, yearTest: Int, hidden: Int, nCounts: List[Int], act: List[String], deltaT: Int, timelag: Int, stepPred: Int, num_training: Int, num_test: Int, column: Int, opt: Map[String, String]): Seq[Seq[AnyVal]]", "member" : "io.github.mandar2812.PlasmaML.omni.TestNNOmni.runExperiment", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#runExperiment(year:Int,yearTest:Int,hidden:Int,nCounts:List[Int],act:List[String],deltaT:Int,timelag:Int,stepPred:Int,num_training:Int,num_test:Int,column:Int,opt:Map[String,String]):Seq[Seq[AnyVal]]", "kind" : "def"}, {"label" : "apply", "tail" : "(year: Int, yeartest: Int, hidden: Int, nCounts: List[Int], acts: List[String], delta: Int, timeLag: Int, stepAhead: Int, num_training: Int, num_test: Int, column: Int, stepSize: Double, maxIt: Int, mini: Double, alpha: Double, regularization: Double): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.TestNNOmni.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#apply(year:Int,yeartest:Int,hidden:Int,nCounts:List[Int],acts:List[String],delta:Int,timeLag:Int,stepAhead:Int,num_training:Int,num_test:Int,column:Int,stepSize:Double,maxIt:Int,mini:Double,alpha:Double,regularization:Double):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestNNOmni$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.TestOmniAR", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html", "members_object" : [{"label" : "runExperiment", "tail" : "(trainstart: String, trainend: String, start: String, end: String, kernel: LocalScalarKernel[DenseVector[Double]], deltaT: Int, timelag: Int, stepPred: Int, noise: LocalScalarKernel[DenseVector[Double]], column: Int, grid: Int, step: Double, globalOpt: String, opt: Map[String, String], action: String): Seq[Seq[Double]]", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniAR.runExperiment", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#runExperiment(trainstart:String,trainend:String,start:String,end:String,kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],deltaT:Int,timelag:Int,stepPred:Int,noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],column:Int,grid:Int,step:Double,globalOpt:String,opt:Map[String,String],action:String):Seq[Seq[Double]]", "kind" : "def"}, {"label" : "apply", "tail" : "(trainstart: String, trainend: String, start: String, end: String, kernel: LocalScalarKernel[DenseVector[Double]], delta: Int, timeLag: Int, noise: LocalScalarKernel[DenseVector[Double]], column: Int, grid: Int, step: Double, globalOpt: String, stepSize: Double, maxIt: Int, action: String): Seq[Seq[Double]]", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniAR.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#apply(trainstart:String,trainend:String,start:String,end:String,kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],delta:Int,timeLag:Int,noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],column:Int,grid:Int,step:Double,globalOpt:String,stepSize:Double,maxIt:Int,action:String):Seq[Seq[Double]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniAR$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.TestOmniARX", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html", "members_object" : [{"label" : "runExperiment", "tail" : "(trainstart: String, trainend: String, start: String, end: String, kernel: LocalScalarKernel[DenseVector[Double]], deltaT: List[Int], stepPred: Int, noise: LocalScalarKernel[DenseVector[Double]], column: Int, ex: List[Int], grid: Int, step: Double, globalOpt: String, opt: Map[String, String], action: String): Seq[Seq[Double]]", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniARX.runExperiment", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#runExperiment(trainstart:String,trainend:String,start:String,end:String,kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],deltaT:List[Int],stepPred:Int,noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],column:Int,ex:List[Int],grid:Int,step:Double,globalOpt:String,opt:Map[String,String],action:String):Seq[Seq[Double]]", "kind" : "def"}, {"label" : "apply", "tail" : "(trainstart: String, trainend: String, start: String, end: String, kernel: LocalScalarKernel[DenseVector[Double]], delta: List[Int], noise: LocalScalarKernel[DenseVector[Double]], column: Int, exoInputColumns: List[Int], grid: Int, step: Double, globalOpt: String, stepSize: Double, maxIt: Int, action: String): Seq[Seq[Double]]", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniARX.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#apply(trainstart:String,trainend:String,start:String,end:String,kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],delta:List[Int],noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[breeze.linalg.DenseVector[Double]],column:Int,exoInputColumns:List[Int],grid:Int,step:Double,globalOpt:String,stepSize:Double,maxIt:Int,action:String):Seq[Seq[Double]]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniARX.logger", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniARX$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax", "shortDescription" : "Created by mandar on 8\/4\/16.", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html", "members_object" : [{"label" : "apply", "tail" : "(start: String, end: String, action: String): Seq[Seq[Double]]", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#apply(start:String,end:String,action:String):Seq[Seq[Double]]", "kind" : "def"}, {"label" : "NMVariantExp", "tail" : "(): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.NMVariantExp", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#NMVariantExp:Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(start: Int, end: Int): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#apply(start:Int,end:Int):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(start: String, end: String): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#apply(start:String,end:String):Unit", "kind" : "def"}, {"label" : "processOmni", "tail" : ": ComposedPipe[String, Iterable[(Double, DenseVector[Double])], Iterable[(Double, DenseVector[Double])]]", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.processOmni", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#processOmni:io.github.mandar2812.dynaml.pipes.ComposedPipe[String,Iterable[(Double,breeze.linalg.DenseVector[Double])],Iterable[(Double,breeze.linalg.DenseVector[Double])]]", "kind" : "val"}, {"label" : "couplingFunc_t_3", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.couplingFunc_t_3", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#couplingFunc_t_3:Double", "kind" : "var"}, {"label" : "couplingFunc_t_2", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.couplingFunc_t_2", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#couplingFunc_t_2:Double", "kind" : "var"}, {"label" : "couplingFunc_t_1", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.couplingFunc_t_1", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#couplingFunc_t_1:Double", "kind" : "var"}, {"label" : "dst_t_2", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.dst_t_2", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#dst_t_2:Double", "kind" : "var"}, {"label" : "dst_t_1", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.dst_t_1", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#dst_t_1:Double", "kind" : "var"}, {"label" : "dayofYearformat", "tail" : ": DateTimeFormatter", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.dayofYearformat", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#dayofYearformat:org.joda.time.format.DateTimeFormatter", "kind" : "val"}, {"label" : "formatter", "tail" : ": DateTimeFormatter", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.formatter", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#formatter:org.joda.time.format.DateTimeFormatter", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniNarmax.logger", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniNarmax$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.TestOmniPer", "shortDescription" : "Created by mandar on 29\/1\/16.", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html", "members_object" : [{"label" : "apply", "tail" : "(start: String, end: String, column: Int, action: String): Seq[Seq[Double]]", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniPer.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#apply(start:String,end:String,column:Int,action:String):Seq[Seq[Double]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniPer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.TestOmniTL", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html", "members_object" : [{"label" : "prepareTLFiles", "tail" : "(): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniTL.prepareTLFiles", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#prepareTLFiles():Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(start: String, end: String, action: String): Seq[Seq[Double]]", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniTL.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#apply(start:String,end:String,action:String):Seq[Seq[Double]]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniTL.logger", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTL$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.omni.TestOmniTS", "shortDescription" : "Created by mandar on 22\/11\/15.", "object" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html", "members_object" : [{"label" : "runExperiment", "tail" : "(year: Int, kernel: LocalScalarKernel[Double], bandwidth: Double, noise: LocalScalarKernel[Double], num_training: Int, num_test: Int, column: Int, grid: Int, step: Double, globalOpt: String, opt: Map[String, String]): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniTS.runExperiment", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#runExperiment(year:Int,kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Double],bandwidth:Double,noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Double],num_training:Int,num_test:Int,column:Int,grid:Int,step:Double,globalOpt:String,opt:Map[String,String]):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(year: Int, kernel: LocalScalarKernel[Double], bandwidth: Double, noise: LocalScalarKernel[Double], num_training: Int, num_test: Int, column: Int, grid: Int, step: Double, globalOpt: String, stepSize: Double, maxIt: Int): Unit", "member" : "io.github.mandar2812.PlasmaML.omni.TestOmniTS.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#apply(year:Int,kernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Double],bandwidth:Double,noise:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Double],num_training:Int,num_test:Int,column:Int,grid:Int,step:Double,globalOpt:String,stepSize:Double,maxIt:Int):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/omni\/TestOmniTS$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "buildinfo" : [{"name" : "buildinfo.BuildInfo", "shortDescription" : "This object was generated by sbt-buildinfo.", "object" : "buildinfo\/BuildInfo$.html", "members_object" : [{"label" : "toString", "tail" : ": String", "member" : "buildinfo.BuildInfo.toString", "link" : "buildinfo\/BuildInfo$.html#toString:String", "kind" : "val"}, {"label" : "sbtVersion", "tail" : ": String", "member" : "buildinfo.BuildInfo.sbtVersion", "link" : "buildinfo\/BuildInfo$.html#sbtVersion:String", "kind" : "val"}, {"label" : "scalaVersion", "tail" : ": String", "member" : "buildinfo.BuildInfo.scalaVersion", "link" : "buildinfo\/BuildInfo$.html#scalaVersion:String", "kind" : "val"}, {"label" : "version", "tail" : ": String", "member" : "buildinfo.BuildInfo.version", "link" : "buildinfo\/BuildInfo$.html#version:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "buildinfo.BuildInfo.name", "link" : "buildinfo\/BuildInfo$.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "buildinfo\/BuildInfo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "buildinfo\/BuildInfo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "buildinfo\/BuildInfo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "buildinfo\/BuildInfo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "buildinfo\/BuildInfo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "buildinfo\/BuildInfo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "buildinfo\/BuildInfo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "buildinfo\/BuildInfo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "buildinfo\/BuildInfo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "buildinfo\/BuildInfo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "buildinfo\/BuildInfo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "buildinfo\/BuildInfo$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "buildinfo\/BuildInfo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "buildinfo\/BuildInfo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "buildinfo\/BuildInfo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "buildinfo\/BuildInfo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "buildinfo\/BuildInfo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.github.mandar2812.PlasmaML" : [], "ammonite.ops" : [], "io.github" : [], "io.github.mandar2812" : [], "io" : [], "ammonite" : []};