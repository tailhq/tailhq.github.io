Index.PACKAGES = {"scala.collection" : [], "io.github.mandar2812.PlasmaML.dynamics" : [], "io.github.mandar2812.PlasmaML.cdf.record" : [{"name" : "io.github.mandar2812.PlasmaML.cdf.record.AttributeDescriptorRecord", "shortDescription" : "Field data for CDF record of type Attribute Descriptor Record.", "members_class" : [{"member" : "io.github.mandar2812.PlasmaML.cdf.record.AttributeDescriptorRecord#<init>", "error" : "unsupported entity"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeDescriptorRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.AttributeEntryDescriptorRecord", "shortDescription" : "Abstract superclass for CDF Attribute Entry Descriptor Records.", "members_class" : [{"label" : "getValueOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.AttributeEntryDescriptorRecord.getValueOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#getValueOffset():Long", "kind" : "def"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/AttributeEntryDescriptorRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf", "shortDescription" : "Abstract Buf implementation that divides the byte sequence into oneor more contiguous data banks.", "members_class" : [{"label" : "fillNewBuf", "tail" : "(count: Long, in: InputStream): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.fillNewBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#fillNewBuf(count:Long,in:java.io.InputStream):io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(offset: Long): InputStream", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.createInputStream", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#createInputStream(offset:Long):java.io.InputStream", "kind" : "def"}, {"label" : "readDataDoubles", "tail" : "(offset: Long, count: Int, array: Array[Double]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.readDataDoubles", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#readDataDoubles(offset:Long,count:Int,array:Array[Double]):Unit", "kind" : "def"}, {"label" : "readDataFloats", "tail" : "(offset: Long, count: Int, array: Array[Float]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.readDataFloats", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#readDataFloats(offset:Long,count:Int,array:Array[Float]):Unit", "kind" : "def"}, {"label" : "readDataLongs", "tail" : "(offset: Long, count: Int, array: Array[Long]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.readDataLongs", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#readDataLongs(offset:Long,count:Int,array:Array[Long]):Unit", "kind" : "def"}, {"label" : "readDataInts", "tail" : "(offset: Long, count: Int, array: Array[Int]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.readDataInts", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#readDataInts(offset:Long,count:Int,array:Array[Int]):Unit", "kind" : "def"}, {"label" : "readDataShorts", "tail" : "(offset: Long, count: Int, array: Array[Short]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.readDataShorts", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#readDataShorts(offset:Long,count:Int,array:Array[Short]):Unit", "kind" : "def"}, {"label" : "readDataBytes", "tail" : "(offset: Long, count: Int, array: Array[Byte]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.readDataBytes", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#readDataBytes(offset:Long,count:Int,array:Array[Byte]):Unit", "kind" : "def"}, {"label" : "isBigendian", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.isBigendian", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#isBigendian():Boolean", "kind" : "def"}, {"label" : "setEncoding", "tail" : "(bigend: Boolean): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.setEncoding", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#setEncoding(bigend:Boolean):Unit", "kind" : "def"}, {"label" : "isBit64", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.isBit64", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#isBit64():Boolean", "kind" : "def"}, {"label" : "setBit64", "tail" : "(isBit64: Boolean): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.setBit64", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#setBit64(isBit64:Boolean):Unit", "kind" : "def"}, {"label" : "readAsciiString", "tail" : "(ptr: Pointer, nbyte: Int): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.readAsciiString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#readAsciiString(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer,nbyte:Int):String", "kind" : "def"}, {"label" : "readOffset", "tail" : "(ptr: Pointer): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.readOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#readOffset(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Long", "kind" : "def"}, {"label" : "readInt", "tail" : "(ptr: Pointer): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.readInt", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#readInt(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Int", "kind" : "def"}, {"label" : "readUnsignedByte", "tail" : "(ptr: Pointer): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.readUnsignedByte", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#readUnsignedByte(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Int", "kind" : "def"}, {"label" : "getLength", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.getLength", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#getLength():Long", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getBankIterator", "tail" : "(offset: Long): Iterator[Bank]", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.getBankIterator", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#getBankIterator(offset:Long):java.util.Iterator[io.github.mandar2812.PlasmaML.cdf.record.BankBuf.Bank]", "kind" : "abstract def"}, {"label" : "getExistingBanks", "tail" : "(): List[Bank]", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.getExistingBanks", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#getExistingBanks():java.util.List[io.github.mandar2812.PlasmaML.cdf.record.BankBuf.Bank]", "kind" : "abstract def"}, {"label" : "getBank", "tail" : "(offset: Long, count: Int): Bank", "member" : "io.github.mandar2812.PlasmaML.cdf.record.BankBuf.getBank", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html#getBank(offset:Long,count:Int):io.github.mandar2812.PlasmaML.cdf.record.BankBuf.Bank", "kind" : "abstract def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/BankBuf.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.Bufs", "shortDescription" : "Factory and utility methods for use with Bufs.", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Bufs.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.CdfDescriptorRecord", "shortDescription" : "Field data for CDF record of type CDF Descriptor Record.", "members_class" : [{"member" : "io.github.mandar2812.PlasmaML.cdf.record.CdfDescriptorRecord#<init>", "error" : "unsupported entity"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CdfDescriptorRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.CompressedCdfRecord", "shortDescription" : "Field data for CDF record of type Compressed CDF Record.", "members_class" : [{"label" : "getDataOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.CompressedCdfRecord.getDataOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#getDataOffset():Long", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.CompressedCdfRecord#<init>", "error" : "unsupported entity"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedCdfRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.CompressedParametersRecord", "shortDescription" : "Field data for CDF record of type Compressed Parameters Record.", "members_class" : [{"member" : "io.github.mandar2812.PlasmaML.cdf.record.CompressedParametersRecord#<init>", "error" : "unsupported entity"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedParametersRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.CompressedVariableValuesRecord", "shortDescription" : "Field data for CDF record of type Compressed Variable Values Record.", "members_class" : [{"label" : "getDataOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.CompressedVariableValuesRecord.getDataOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#getDataOffset():Long", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.CompressedVariableValuesRecord#<init>", "error" : "unsupported entity"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/CompressedVariableValuesRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.Compression", "shortDescription" : "Defines a data compression type supported for compressing CDF data.", "members_class" : [{"label" : "getName", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Compression.getName", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#getName():String", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.Compression#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "uncompressStream", "tail" : "(in: InputStream): InputStream", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Compression.uncompressStream", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html#uncompressStream(in:java.io.InputStream):java.io.InputStream", "kind" : "abstract def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Compression.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.DataReader", "shortDescription" : "Reads items with a given data type from a buffer into an array.", "members_class" : [{"label" : "getRecordSize", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.DataReader.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#getRecordSize():Int", "kind" : "def"}, {"label" : "readValue", "tail" : "(buf: Buf, offset: Long, valueArray: Any): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.DataReader.readValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#readValue(buf:io.github.mandar2812.PlasmaML.cdf.Buf,offset:Long,valueArray:Any):Unit", "kind" : "def"}, {"label" : "createValueArray", "tail" : "(): AnyRef", "member" : "io.github.mandar2812.PlasmaML.cdf.record.DataReader.createValueArray", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#createValueArray():Object", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.DataReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/DataReader.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.GlobalDescriptorRecord", "shortDescription" : "Field data for CDF record of type Global Descriptor Record.", "members_class" : [{"member" : "io.github.mandar2812.PlasmaML.cdf.record.GlobalDescriptorRecord#<init>", "error" : "unsupported entity"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/GlobalDescriptorRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.Pointer", "shortDescription" : "Keeps track of a file offset.", "members_class" : [{"label" : "set", "tail" : "(value: Long): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Pointer.set", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#set(value:Long):Unit", "kind" : "def"}, {"label" : "getAndIncrement", "tail" : "(increment: Int): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Pointer.getAndIncrement", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#getAndIncrement(increment:Int):Long", "kind" : "def"}, {"label" : "get", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Pointer.get", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#get():Long", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.Pointer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Pointer.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.Record", "shortDescription" : "Abstract superclass for a CDF Record object.", "members_class" : [{"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#getRecordSize():Long", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.Record#<init>", "error" : "unsupported entity"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.Record#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Record.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.RecordFactory", "shortDescription" : "Turns bytes in a buffer into typed and populated CDF records.", "members_class" : [{"label" : "createRecord", "tail" : "(buf: Buf, offset: Long, clazz: Class[R]): R", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordFactory.createRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#createRecord[R<:io.github.mandar2812.PlasmaML.cdf.record.Record](buf:io.github.mandar2812.PlasmaML.cdf.Buf,offset:Long,clazz:Class[R]):R", "kind" : "def"}, {"label" : "createRecord", "tail" : "(buf: Buf, offset: Long): Record", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordFactory.createRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#createRecord(buf:io.github.mandar2812.PlasmaML.cdf.Buf,offset:Long):io.github.mandar2812.PlasmaML.cdf.record.Record", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordFactory#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordFactory.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.RecordMap", "shortDescription" : "Keeps track of where a variable's record data is stored.", "members_class" : [{"label" : "getFinalOffsetInEntry", "tail" : "(ient: Int): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordMap.getFinalOffsetInEntry", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#getFinalOffsetInEntry(ient:Int):Long", "kind" : "def"}, {"label" : "getOffset", "tail" : "(ient: Int, irec: Int): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordMap.getOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#getOffset(ient:Int,irec:Int):Long", "kind" : "def"}, {"label" : "getBuf", "tail" : "(ient: Int): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordMap.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#getBuf(ient:Int):io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getEntryIndex", "tail" : "(irec: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordMap.getEntryIndex", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#getEntryIndex(irec:Int):Int", "kind" : "def"}, {"label" : "getEntryCount", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordMap.getEntryCount", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#getEntryCount():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordMap.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.RecordPlan", "shortDescription" : "Records basic information about the position, extent and type ofa CDF record.", "members_class" : [{"label" : "getReadCount", "tail" : "(ptr: Pointer): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordPlan.getReadCount", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#getReadCount(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Long", "kind" : "def"}, {"label" : "createContentPointer", "tail" : "(): Pointer", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordPlan.createContentPointer", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#createContentPointer():io.github.mandar2812.PlasmaML.cdf.record.Pointer", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordPlan.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordPlan.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordPlan.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#getRecordSize():Long", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.RecordPlan#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/RecordPlan.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf", "shortDescription" : "Buf implementation based on a single NIO ByteBuffer.", "members_class" : [{"label" : "fillNewBuf", "tail" : "(count: Long, in: InputStream): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.fillNewBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#fillNewBuf(count:Long,in:java.io.InputStream):io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(offset: Long): InputStream", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.createInputStream", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#createInputStream(offset:Long):java.io.InputStream", "kind" : "def"}, {"label" : "readDataDoubles", "tail" : "(offset: Long, count: Int, array: Array[Double]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.readDataDoubles", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#readDataDoubles(offset:Long,count:Int,array:Array[Double]):Unit", "kind" : "def"}, {"label" : "readDataFloats", "tail" : "(offset: Long, count: Int, array: Array[Float]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.readDataFloats", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#readDataFloats(offset:Long,count:Int,array:Array[Float]):Unit", "kind" : "def"}, {"label" : "readDataLongs", "tail" : "(offset: Long, count: Int, array: Array[Long]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.readDataLongs", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#readDataLongs(offset:Long,count:Int,array:Array[Long]):Unit", "kind" : "def"}, {"label" : "readDataInts", "tail" : "(offset: Long, count: Int, array: Array[Int]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.readDataInts", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#readDataInts(offset:Long,count:Int,array:Array[Int]):Unit", "kind" : "def"}, {"label" : "readDataShorts", "tail" : "(offset: Long, count: Int, array: Array[Short]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.readDataShorts", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#readDataShorts(offset:Long,count:Int,array:Array[Short]):Unit", "kind" : "def"}, {"label" : "readDataBytes", "tail" : "(offset: Long, count: Int, array: Array[Byte]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.readDataBytes", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#readDataBytes(offset:Long,count:Int,array:Array[Byte]):Unit", "kind" : "def"}, {"label" : "isBit64", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.isBit64", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#isBit64():Boolean", "kind" : "def"}, {"label" : "isBigendian", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.isBigendian", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#isBigendian():Boolean", "kind" : "def"}, {"label" : "setEncoding", "tail" : "(bigend: Boolean): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.setEncoding", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#setEncoding(bigend:Boolean):Unit", "kind" : "def"}, {"label" : "setBit64", "tail" : "(isBit64: Boolean): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.setBit64", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#setBit64(isBit64:Boolean):Unit", "kind" : "def"}, {"label" : "readAsciiString", "tail" : "(ptr: Pointer, nbyte: Int): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.readAsciiString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#readAsciiString(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer,nbyte:Int):String", "kind" : "def"}, {"label" : "readOffset", "tail" : "(ptr: Pointer): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.readOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#readOffset(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Long", "kind" : "def"}, {"label" : "readInt", "tail" : "(ptr: Pointer): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.readInt", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#readInt(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Int", "kind" : "def"}, {"label" : "readUnsignedByte", "tail" : "(ptr: Pointer): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.readUnsignedByte", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#readUnsignedByte(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Int", "kind" : "def"}, {"label" : "getLength", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf.getLength", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#getLength():Long", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.SimpleNioBuf#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SimpleNioBuf.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.SparsenessParametersRecord", "shortDescription" : "Field data for CDF record of type Sparseness Parameters Record.", "members_class" : [{"member" : "io.github.mandar2812.PlasmaML.cdf.record.SparsenessParametersRecord#<init>", "error" : "unsupported entity"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/SparsenessParametersRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.UnusedInternalRecord", "shortDescription" : "Field data for CDF record of type Unused Internal Record.", "members_class" : [{"member" : "io.github.mandar2812.PlasmaML.cdf.record.UnusedInternalRecord#<init>", "error" : "unsupported entity"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/UnusedInternalRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.Variable", "shortDescription" : "Provides the metadata and record data for a CDF variable.", "members_class" : [{"label" : "readShapedRecord", "tail" : "(irec: Int, rowMajor: Boolean, rawValueArrayWorkspace: Any): AnyRef", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.readShapedRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#readShapedRecord(irec:Int,rowMajor:Boolean,rawValueArrayWorkspace:Any):Object", "kind" : "def"}, {"label" : "readRawRecord", "tail" : "(irec: Int, rawValueArray: Any): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.readRawRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#readRawRecord(irec:Int,rawValueArray:Any):Unit", "kind" : "def"}, {"label" : "hasRecord", "tail" : "(irec: Int): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.hasRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#hasRecord(irec:Int):Boolean", "kind" : "def"}, {"label" : "createRawValueArray", "tail" : "(): AnyRef", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.createRawValueArray", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#createRawValueArray():Object", "kind" : "def"}, {"label" : "getDescriptor", "tail" : "(): VariableDescriptorRecord", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.getDescriptor", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#getDescriptor():io.github.mandar2812.PlasmaML.cdf.record.VariableDescriptorRecord", "kind" : "def"}, {"label" : "getSummary", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.getSummary", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#getSummary():String", "kind" : "def"}, {"label" : "getRecordVariance", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.getRecordVariance", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#getRecordVariance():Boolean", "kind" : "def"}, {"label" : "getShaper", "tail" : "(): Shaper", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.getShaper", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#getShaper():io.github.mandar2812.PlasmaML.cdf.Shaper", "kind" : "def"}, {"label" : "getDataType", "tail" : "(): DataType", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.getDataType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#getDataType():io.github.mandar2812.PlasmaML.cdf.DataType", "kind" : "def"}, {"label" : "getRecordCount", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.getRecordCount", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#getRecordCount():Int", "kind" : "def"}, {"label" : "isZVariable", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.isZVariable", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#isZVariable():Boolean", "kind" : "def"}, {"label" : "getNum", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.getNum", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#getNum():Int", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable.getName", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#getName():String", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.Variable#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/Variable.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.VariableAttribute", "shortDescription" : "Provides the description and per-variable entry valuesfor a CDF attribute with variable scope.", "members_class" : [{"label" : "getEntry", "tail" : "(variable: Variable): AttributeEntry", "member" : "io.github.mandar2812.PlasmaML.cdf.record.VariableAttribute.getEntry", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#getEntry(variable:io.github.mandar2812.PlasmaML.cdf.record.Variable):io.github.mandar2812.PlasmaML.cdf.AttributeEntry", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.VariableAttribute.getName", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#getName():String", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.VariableAttribute#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableAttribute.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.VariableDescriptorRecord", "shortDescription" : "Abstract superclass for CDF Variable Descriptor Records.", "members_class" : [{"label" : "getPadValueSize", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.VariableDescriptorRecord.getPadValueSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#getPadValueSize():Int", "kind" : "def"}, {"label" : "getPadValueOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.VariableDescriptorRecord.getPadValueOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#getPadValueOffset():Long", "kind" : "def"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableDescriptorRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.VariableIndexRecord", "shortDescription" : "Field data for CDF record of type Variable Index Record.", "members_class" : [{"member" : "io.github.mandar2812.PlasmaML.cdf.record.VariableIndexRecord#<init>", "error" : "unsupported entity"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableIndexRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.VariableValuesRecord", "shortDescription" : "Field data for CDF record of type Variable Values Record.", "members_class" : [{"label" : "getRecordsOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.VariableValuesRecord.getRecordsOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#getRecordsOffset():Long", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.VariableValuesRecord#<init>", "error" : "unsupported entity"}, {"label" : "warnFormat", "tail" : "(msg: String): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.warnFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#warnFormat(msg:String):Unit", "kind" : "def"}, {"label" : "checkEndRecord", "tail" : "(ptr: Pointer): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkEndRecord", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#checkEndRecord(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Unit", "kind" : "def"}, {"label" : "checkIntValue", "tail" : "(actualValue: Int, fixedValue: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.checkIntValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#checkIntValue(actualValue:Int,fixedValue:Int):Int", "kind" : "def"}, {"label" : "getContentOffset", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getContentOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#getContentOffset():Long", "kind" : "def"}, {"label" : "getRecordTypeAbbreviation", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordTypeAbbreviation", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#getRecordTypeAbbreviation():String", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "getRecordType", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#getRecordType():Int", "kind" : "def"}, {"label" : "getRecordSize", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.Record.getRecordSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#getRecordSize():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/VariableValuesRecord.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf", "shortDescription" : "Buf implementation based on an existing Buf instance.", "members_class" : [{"label" : "fillNewBuf", "tail" : "(count: Long, in: InputStream): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.fillNewBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#fillNewBuf(count:Long,in:java.io.InputStream):io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(offset: Long): InputStream", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.createInputStream", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#createInputStream(offset:Long):java.io.InputStream", "kind" : "def"}, {"label" : "readDataDoubles", "tail" : "(offset: Long, count: Int, array: Array[Double]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.readDataDoubles", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#readDataDoubles(offset:Long,count:Int,array:Array[Double]):Unit", "kind" : "def"}, {"label" : "readDataFloats", "tail" : "(offset: Long, count: Int, array: Array[Float]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.readDataFloats", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#readDataFloats(offset:Long,count:Int,array:Array[Float]):Unit", "kind" : "def"}, {"label" : "readDataLongs", "tail" : "(offset: Long, count: Int, array: Array[Long]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.readDataLongs", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#readDataLongs(offset:Long,count:Int,array:Array[Long]):Unit", "kind" : "def"}, {"label" : "readDataInts", "tail" : "(offset: Long, count: Int, array: Array[Int]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.readDataInts", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#readDataInts(offset:Long,count:Int,array:Array[Int]):Unit", "kind" : "def"}, {"label" : "readDataShorts", "tail" : "(offset: Long, count: Int, array: Array[Short]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.readDataShorts", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#readDataShorts(offset:Long,count:Int,array:Array[Short]):Unit", "kind" : "def"}, {"label" : "readDataBytes", "tail" : "(offset: Long, count: Int, array: Array[Byte]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.readDataBytes", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#readDataBytes(offset:Long,count:Int,array:Array[Byte]):Unit", "kind" : "def"}, {"label" : "isBigendian", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.isBigendian", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#isBigendian():Boolean", "kind" : "def"}, {"label" : "setEncoding", "tail" : "(isBigendian: Boolean): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.setEncoding", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#setEncoding(isBigendian:Boolean):Unit", "kind" : "def"}, {"label" : "isBit64", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.isBit64", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#isBit64():Boolean", "kind" : "def"}, {"label" : "setBit64", "tail" : "(bit64: Boolean): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.setBit64", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#setBit64(bit64:Boolean):Unit", "kind" : "def"}, {"label" : "readAsciiString", "tail" : "(ptr: Pointer, nbyte: Int): String", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.readAsciiString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#readAsciiString(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer,nbyte:Int):String", "kind" : "def"}, {"label" : "readOffset", "tail" : "(ptr: Pointer): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.readOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#readOffset(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Long", "kind" : "def"}, {"label" : "readInt", "tail" : "(ptr: Pointer): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.readInt", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#readInt(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Int", "kind" : "def"}, {"label" : "readUnsignedByte", "tail" : "(ptr: Pointer): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.readUnsignedByte", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#readUnsignedByte(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Int", "kind" : "def"}, {"label" : "getLength", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf.getLength", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#getLength():Long", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.record.WrapperBuf#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/record\/WrapperBuf.html", "kind" : "class"}], "buildinfo" : [{"name" : "buildinfo.BuildInfo", "shortDescription" : "This object was generated by sbt-buildinfo.", "object" : "buildinfo\/BuildInfo$.html", "members_object" : [{"label" : "toString", "tail" : ": String", "member" : "buildinfo.BuildInfo.toString", "link" : "buildinfo\/BuildInfo$.html#toString:String", "kind" : "val"}, {"label" : "sbtVersion", "tail" : ": String", "member" : "buildinfo.BuildInfo.sbtVersion", "link" : "buildinfo\/BuildInfo$.html#sbtVersion:String", "kind" : "val"}, {"label" : "scalaVersion", "tail" : ": String", "member" : "buildinfo.BuildInfo.scalaVersion", "link" : "buildinfo\/BuildInfo$.html#scalaVersion:String", "kind" : "val"}, {"label" : "version", "tail" : ": String", "member" : "buildinfo.BuildInfo.version", "link" : "buildinfo\/BuildInfo$.html#version:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "buildinfo.BuildInfo.name", "link" : "buildinfo\/BuildInfo$.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "buildinfo\/BuildInfo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "buildinfo\/BuildInfo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "buildinfo\/BuildInfo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "buildinfo\/BuildInfo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "buildinfo\/BuildInfo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "buildinfo\/BuildInfo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "buildinfo\/BuildInfo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "buildinfo\/BuildInfo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "buildinfo\/BuildInfo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "buildinfo\/BuildInfo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "buildinfo\/BuildInfo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "buildinfo\/BuildInfo$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "buildinfo\/BuildInfo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "buildinfo\/BuildInfo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "buildinfo\/BuildInfo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "buildinfo\/BuildInfo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "buildinfo\/BuildInfo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.github.mandar2812.PlasmaML" : [{"name" : "io.github.mandar2812.PlasmaML.PlasmaMLSpark", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html", "members_object" : [{"label" : "sc", "tail" : ": SparkContext", "member" : "io.github.mandar2812.PlasmaML.PlasmaMLSpark.sc", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#sc:org.apache.spark.SparkContext", "kind" : "val"}, {"label" : "sparkHost", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.PlasmaMLSpark.sparkHost", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#sparkHost:String", "kind" : "val"}, {"label" : "sparkCores", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.PlasmaMLSpark.sparkCores", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#sparkCores:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/PlasmaMLSpark$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.SPDFData", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html", "members_object" : [{"label" : "nasa_spdf_baseurl", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.SPDFData.nasa_spdf_baseurl", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#nasa_spdf_baseurl:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/SPDFData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ammonite.ops" : [], "io.github.mandar2812.PlasmaML.cdf" : [{"name" : "io.github.mandar2812.PlasmaML.cdf.AttributeEntry", "shortDescription" : "Represents an entry in a global or variable attribute.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.AttributeEntry.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#toString():String", "kind" : "def"}, {"label" : "getItem", "tail" : "(itemIndex: Int): AnyRef", "member" : "io.github.mandar2812.PlasmaML.cdf.AttributeEntry.getItem", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#getItem(itemIndex:Int):Object", "kind" : "def"}, {"label" : "getItemCount", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.AttributeEntry.getItemCount", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#getItemCount():Int", "kind" : "def"}, {"label" : "getShapedValue", "tail" : "(): AnyRef", "member" : "io.github.mandar2812.PlasmaML.cdf.AttributeEntry.getShapedValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#getShapedValue():Object", "kind" : "def"}, {"label" : "getRawValue", "tail" : "(): AnyRef", "member" : "io.github.mandar2812.PlasmaML.cdf.AttributeEntry.getRawValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#getRawValue():Object", "kind" : "def"}, {"label" : "getDataType", "tail" : "(): DataType", "member" : "io.github.mandar2812.PlasmaML.cdf.AttributeEntry.getDataType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#getDataType():io.github.mandar2812.PlasmaML.cdf.DataType", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.AttributeEntry#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/AttributeEntry.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.BitExpandInputStream", "shortDescription" : "Abstract InputStream implementation suitable for implementingdecompression of a bit stream.", "members_class" : [{"label" : "readBits", "tail" : "(bitCount: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.BitExpandInputStream.readBits", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#readBits(bitCount:Int):Int", "kind" : "def"}, {"label" : "readBit", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.BitExpandInputStream.readBit", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#readBit():Boolean", "kind" : "def"}, {"label" : "read", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.BitExpandInputStream.read", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#read():Int", "kind" : "def"}, {"label" : "markSupported", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.BitExpandInputStream.markSupported", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#markSupported():Boolean", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.BitExpandInputStream.close", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#close():Unit", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.BitExpandInputStream#<init>", "error" : "unsupported entity"}, {"label" : "reset", "tail" : "(): Unit", "member" : "java.io.InputStream.reset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#reset():Unit", "kind" : "def"}, {"label" : "mark", "tail" : "(arg0: Int): Unit", "member" : "java.io.InputStream.mark", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#mark(x$1:Int):Unit", "kind" : "def"}, {"label" : "available", "tail" : "(): Int", "member" : "java.io.InputStream.available", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#available():Int", "kind" : "def"}, {"label" : "skip", "tail" : "(arg0: Long): Long", "member" : "java.io.InputStream.skip", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#skip(x$1:Long):Long", "kind" : "def"}, {"label" : "read", "tail" : "(arg0: Array[Byte], arg1: Int, arg2: Int): Int", "member" : "java.io.InputStream.read", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#read(x$1:Array[Byte],x$2:Int,x$3:Int):Int", "kind" : "def"}, {"label" : "read", "tail" : "(arg0: Array[Byte]): Int", "member" : "java.io.InputStream.read", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#read(x$1:Array[Byte]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "readToken", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.BitExpandInputStream.readToken", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html#readToken():Int", "kind" : "abstract def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/BitExpandInputStream.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.Buf", "members_trait" : [{"member" : "io.github.mandar2812.PlasmaML.cdf.Buf#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fillNewBuf", "tail" : "(count: Long, in: InputStream): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.fillNewBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#fillNewBuf(count:Long,in:java.io.InputStream):io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "abstract def"}, {"label" : "createInputStream", "tail" : "(offset: Long): InputStream", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.createInputStream", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#createInputStream(offset:Long):java.io.InputStream", "kind" : "abstract def"}, {"label" : "readDataDoubles", "tail" : "(offset: Long, count: Int, array: Array[Double]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.readDataDoubles", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#readDataDoubles(offset:Long,count:Int,array:Array[Double]):Unit", "kind" : "abstract def"}, {"label" : "readDataFloats", "tail" : "(offset: Long, count: Int, array: Array[Float]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.readDataFloats", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#readDataFloats(offset:Long,count:Int,array:Array[Float]):Unit", "kind" : "abstract def"}, {"label" : "readDataLongs", "tail" : "(offset: Long, count: Int, array: Array[Long]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.readDataLongs", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#readDataLongs(offset:Long,count:Int,array:Array[Long]):Unit", "kind" : "abstract def"}, {"label" : "readDataInts", "tail" : "(offset: Long, count: Int, array: Array[Int]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.readDataInts", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#readDataInts(offset:Long,count:Int,array:Array[Int]):Unit", "kind" : "abstract def"}, {"label" : "readDataShorts", "tail" : "(offset: Long, count: Int, array: Array[Short]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.readDataShorts", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#readDataShorts(offset:Long,count:Int,array:Array[Short]):Unit", "kind" : "abstract def"}, {"label" : "readDataBytes", "tail" : "(offset: Long, count: Int, array: Array[Byte]): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.readDataBytes", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#readDataBytes(offset:Long,count:Int,array:Array[Byte]):Unit", "kind" : "abstract def"}, {"label" : "isBigendian", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.isBigendian", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#isBigendian():Boolean", "kind" : "abstract def"}, {"label" : "setEncoding", "tail" : "(isBigendian: Boolean): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.setEncoding", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#setEncoding(isBigendian:Boolean):Unit", "kind" : "abstract def"}, {"label" : "isBit64", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.isBit64", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#isBit64():Boolean", "kind" : "abstract def"}, {"label" : "setBit64", "tail" : "(isBit64: Boolean): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.setBit64", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#setBit64(isBit64:Boolean):Unit", "kind" : "abstract def"}, {"label" : "readAsciiString", "tail" : "(ptr: Pointer, nbyte: Int): String", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.readAsciiString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#readAsciiString(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer,nbyte:Int):String", "kind" : "abstract def"}, {"label" : "readOffset", "tail" : "(ptr: Pointer): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.readOffset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#readOffset(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Long", "kind" : "abstract def"}, {"label" : "readInt", "tail" : "(ptr: Pointer): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.readInt", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#readInt(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Int", "kind" : "abstract def"}, {"label" : "readUnsignedByte", "tail" : "(ptr: Pointer): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.readUnsignedByte", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#readUnsignedByte(ptr:io.github.mandar2812.PlasmaML.cdf.record.Pointer):Int", "kind" : "abstract def"}, {"label" : "getLength", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.Buf.getLength", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html#getLength():Long", "kind" : "abstract def"}], "shortDescription" : "Represents a sequence of bytes along with operations to readprimitive values from it.", "trait" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Buf.html", "kind" : "trait"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.CdfContent", "shortDescription" : "Provides all the data and metadata in a CDF file in a high-levelread-only easy to use form.", "members_class" : [{"label" : "getCdfInfo", "tail" : "(): CdfInfo", "member" : "io.github.mandar2812.PlasmaML.cdf.CdfContent.getCdfInfo", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#getCdfInfo():io.github.mandar2812.PlasmaML.cdf.CdfInfo", "kind" : "def"}, {"label" : "getVariables", "tail" : "(): Array[Variable]", "member" : "io.github.mandar2812.PlasmaML.cdf.CdfContent.getVariables", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#getVariables():Array[io.github.mandar2812.PlasmaML.cdf.record.Variable]", "kind" : "def"}, {"label" : "getVariableAttributes", "tail" : "(): Array[VariableAttribute]", "member" : "io.github.mandar2812.PlasmaML.cdf.CdfContent.getVariableAttributes", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#getVariableAttributes():Array[io.github.mandar2812.PlasmaML.cdf.record.VariableAttribute]", "kind" : "def"}, {"label" : "getGlobalAttributes", "tail" : "(): Array[GlobalAttribute]", "member" : "io.github.mandar2812.PlasmaML.cdf.CdfContent.getGlobalAttributes", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#getGlobalAttributes():Array[io.github.mandar2812.PlasmaML.cdf.GlobalAttribute]", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.CdfContent#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfContent.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.CdfField", "shortDescription" : "", "members_class" : [{"member" : "io.github.mandar2812.PlasmaML.cdf.CdfField#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "annotationType", "tail" : "(): Class[_ <: Annotation]", "member" : "java.lang.annotation.Annotation.annotationType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html#annotationType():Class[_<:java.lang.annotation.Annotation]", "kind" : "abstract def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfField.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.CdfFormatException", "shortDescription" : "Exception thrown during CDF parsing when the data stream appears eitherto be in contravention of the CDF format, or uses some feature ofthe CDF format which is unsupported by the current implementation.", "members_class" : [{"member" : "io.github.mandar2812.PlasmaML.cdf.CdfFormatException#<init>", "error" : "unsupported entity"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.CdfFormatException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfFormatException.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.CdfInfo", "shortDescription" : "Encapsulates some global information about a CDF file.", "members_class" : [{"label" : "getLeapSecondLastUpdated", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.CdfInfo.getLeapSecondLastUpdated", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#getLeapSecondLastUpdated():Int", "kind" : "def"}, {"label" : "getRDimSizes", "tail" : "(): Array[Int]", "member" : "io.github.mandar2812.PlasmaML.cdf.CdfInfo.getRDimSizes", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#getRDimSizes():Array[Int]", "kind" : "def"}, {"label" : "getRowMajor", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.CdfInfo.getRowMajor", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#getRowMajor():Boolean", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.CdfInfo#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfInfo.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.CdfReader", "shortDescription" : "Examines a CDF file and provides methods to access its records.", "members_class" : [{"label" : "getCdr", "tail" : "(): CdfDescriptorRecord", "member" : "io.github.mandar2812.PlasmaML.cdf.CdfReader.getCdr", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#getCdr():io.github.mandar2812.PlasmaML.cdf.record.CdfDescriptorRecord", "kind" : "def"}, {"label" : "getRecordFactory", "tail" : "(): RecordFactory", "member" : "io.github.mandar2812.PlasmaML.cdf.CdfReader.getRecordFactory", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#getRecordFactory():io.github.mandar2812.PlasmaML.cdf.record.RecordFactory", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): Buf", "member" : "io.github.mandar2812.PlasmaML.cdf.CdfReader.getBuf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#getBuf():io.github.mandar2812.PlasmaML.cdf.Buf", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.CdfReader#<init>", "error" : "unsupported entity"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.CdfReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CdfReader.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html", "members_object" : [{"label" : "processEpochs", "tail" : "(position: Int): DataPipe[RDD[Seq[String]], RDD[Seq[String]]]", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.processEpochs", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#processEpochs(position:Int):io.github.mandar2812.dynaml.pipes.DataPipe[org.apache.spark.rdd.RDD[Seq[String]],org.apache.spark.rdd.RDD[Seq[String]]]", "kind" : "def"}, {"label" : "cdfToStream", "tail" : "(columns: Seq[String], missingValueKey: String): DataPipe[(CdfContent, Map[String, Map[String, String]]), (Stream[Seq[AnyRef]], Map[String, Map[String, String]])]", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.cdfToStream", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#cdfToStream(columns:Seq[String],missingValueKey:String):io.github.mandar2812.dynaml.pipes.DataPipe[(io.github.mandar2812.PlasmaML.cdf.CdfContent,Map[String,Map[String,String]]),(scala.collection.immutable.Stream[Seq[Object]],scala.collection.immutable.Map[String,Map[String,String]])]", "kind" : "def"}, {"label" : "cdfToRDD", "tail" : "(columns: Seq[String], missingValueKey: String): DataPipe[(CdfContent, Map[String, Map[String, String]]), (RDD[Seq[AnyRef]], Map[String, Map[String, String]])]", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.cdfToRDD", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#cdfToRDD(columns:Seq[String],missingValueKey:String):io.github.mandar2812.dynaml.pipes.DataPipe[(io.github.mandar2812.PlasmaML.cdf.CdfContent,Map[String,Map[String,String]]),(org.apache.spark.rdd.RDD[Seq[Object]],scala.collection.immutable.Map[String,Map[String,String]])]", "kind" : "def"}, {"label" : "readCDF", "tail" : "(): DataPipe[String, (CdfContent, Map[String, Map[String, String]])]", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.readCDF", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#readCDF:io.github.mandar2812.dynaml.pipes.DataPipe[String,(io.github.mandar2812.PlasmaML.cdf.CdfContent,scala.collection.immutable.Map[String,scala.collection.immutable.Map[String,String]])]", "kind" : "def"}, {"label" : "cdfAttributes", "tail" : "(file: String): Map[String, Map[String, String]]", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.cdfAttributes", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#cdfAttributes(file:String):scala.collection.immutable.Map[String,scala.collection.immutable.Map[String,String]]", "kind" : "def"}, {"label" : "anyRefToDecimal", "tail" : "(obj: Any): Any", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.anyRefToDecimal", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#anyRefToDecimal(obj:Any):Any", "kind" : "def"}, {"label" : "anyRefToArray", "tail" : "(obj: Any): Array[_]", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.anyRefToArray", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#anyRefToArray(obj:Any):Array[_]", "kind" : "def"}, {"label" : "getVariableAttributes", "tail" : "(cdf: CdfContent): Map[String, Map[String, String]]", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.getVariableAttributes", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#getVariableAttributes(cdf:io.github.mandar2812.PlasmaML.cdf.CdfContent):scala.collection.immutable.Map[String,scala.collection.immutable.Map[String,String]]", "kind" : "def"}, {"label" : "epochProcessor", "tail" : "(): (Long) ⇒ String", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.epochProcessor", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#epochProcessor:Long=>String", "kind" : "def"}, {"label" : "epochFormat", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.epochFormat", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#epochFormat:String", "kind" : "var"}, {"label" : "cdfBufferSize", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.cdfBufferSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#cdfBufferSize:Int", "kind" : "var"}, {"label" : "leapSecondsFile", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.leapSecondsFile", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#leapSecondsFile:String", "kind" : "var"}, {"label" : "dataDir", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.cdf.CDFUtils.dataDir", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#dataDir:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/CDFUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.DataType", "shortDescription" : "Enumerates the data types supported by the CDF format.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#toString():String", "kind" : "def"}, {"label" : "formatArrayValue", "tail" : "(array: Any, arrayIndex: Int): String", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.formatArrayValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#formatArrayValue(array:Any,arrayIndex:Int):String", "kind" : "def"}, {"label" : "formatScalarValue", "tail" : "(value: Any): String", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.formatScalarValue", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#formatScalarValue(value:Any):String", "kind" : "def"}, {"label" : "getDefaultPadValueArray", "tail" : "(): AnyRef", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.getDefaultPadValueArray", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#getDefaultPadValueArray():Object", "kind" : "def"}, {"label" : "hasMultipleElementsPerItem", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.hasMultipleElementsPerItem", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#hasMultipleElementsPerItem():Boolean", "kind" : "def"}, {"label" : "getArrayIndex", "tail" : "(itemIndex: Int): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.getArrayIndex", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#getArrayIndex(itemIndex:Int):Int", "kind" : "def"}, {"label" : "getGroupSize", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.getGroupSize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#getGroupSize():Int", "kind" : "def"}, {"label" : "getScalarClass", "tail" : "(): Class[_]", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.getScalarClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#getScalarClass():Class[_]", "kind" : "def"}, {"label" : "getArrayElementClass", "tail" : "(): Class[_]", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.getArrayElementClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#getArrayElementClass():Class[_]", "kind" : "def"}, {"label" : "getByteCount", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.getByteCount", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#getByteCount():Int", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.getName", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#getName():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getScalar", "tail" : "(valueArray: Any, arrayIndex: Int): AnyRef", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.getScalar", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#getScalar(valueArray:Any,arrayIndex:Int):Object", "kind" : "abstract def"}, {"label" : "readValues", "tail" : "(buf: Buf, offset: Long, nelPerItem: Int, valueArray: Any, count: Int): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.DataType.readValues", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html#readValues(buf:io.github.mandar2812.PlasmaML.cdf.Buf,offset:Long,nelPerItem:Int,valueArray:Any,count:Int):Unit", "kind" : "abstract def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/DataType.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.EpochFormatter", "shortDescription" : "Does string formatting of epoch values in various representations.", "members_class" : [{"label" : "formatTimeTt2000", "tail" : "(timeTt2k: Long): String", "member" : "io.github.mandar2812.PlasmaML.cdf.EpochFormatter.formatTimeTt2000", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#formatTimeTt2000(timeTt2k:Long):String", "kind" : "def"}, {"label" : "formatEpoch16", "tail" : "(epoch1: Double, epoch2: Double): String", "member" : "io.github.mandar2812.PlasmaML.cdf.EpochFormatter.formatEpoch16", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#formatEpoch16(epoch1:Double,epoch2:Double):String", "kind" : "def"}, {"label" : "formatEpoch", "tail" : "(epoch: Double): String", "member" : "io.github.mandar2812.PlasmaML.cdf.EpochFormatter.formatEpoch", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#formatEpoch(epoch:Double):String", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.EpochFormatter#<init>", "error" : "unsupported entity"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.EpochFormatter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/EpochFormatter.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.ExampleTest", "shortDescription" : "Tests the contents of two of the example files(example1.cdf and example2.cdf) from the samples directory of theCDF distribution.", "members_class" : [{"label" : "testTest", "tail" : "(testFile: File): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.ExampleTest.testTest", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#testTest(testFile:java.io.File):Unit", "kind" : "def"}, {"label" : "testExample2", "tail" : "(ex2file: File): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.ExampleTest.testExample2", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#testExample2(ex2file:java.io.File):Unit", "kind" : "def"}, {"label" : "testExample1", "tail" : "(ex1file: File): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.ExampleTest.testExample1", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#testExample1(ex1file:java.io.File):Unit", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.ExampleTest#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/ExampleTest.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.GlobalAttribute", "shortDescription" : "Provides the description and entry valuesfor CDF attribute with global scope.", "members_class" : [{"label" : "getEntries", "tail" : "(): Array[AttributeEntry]", "member" : "io.github.mandar2812.PlasmaML.cdf.GlobalAttribute.getEntries", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#getEntries():Array[io.github.mandar2812.PlasmaML.cdf.AttributeEntry]", "kind" : "def"}, {"label" : "getName", "tail" : "(): String", "member" : "io.github.mandar2812.PlasmaML.cdf.GlobalAttribute.getName", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#getName():String", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.GlobalAttribute#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/GlobalAttribute.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.NumericEncoding", "shortDescription" : "Enumeration of numeric encoding values supported by CDF.", "members_class" : [{"label" : "isBigendian", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.NumericEncoding.isBigendian", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#isBigendian():Boolean", "kind" : "def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[NumericEncoding]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: NumericEncoding): Int", "member" : "java.lang.Enum.compareTo", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/NumericEncoding.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.OffsetField", "shortDescription" : "", "members_class" : [{"member" : "io.github.mandar2812.PlasmaML.cdf.OffsetField#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "annotationType", "tail" : "(): Class[_ <: Annotation]", "member" : "java.lang.annotation.Annotation.annotationType", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html#annotationType():Class[_<:java.lang.annotation.Annotation]", "kind" : "abstract def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OffsetField.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.OtherTest", "shortDescription" : "", "members_class" : [{"label" : "testTtFormatter", "tail" : "(): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.OtherTest.testTtFormatter", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#testTtFormatter():Unit", "kind" : "def"}, {"label" : "testTtScaler", "tail" : "(): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.OtherTest.testTtScaler", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#testTtScaler():Unit", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.OtherTest#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/OtherTest.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.RunLengthInputStream", "shortDescription" : "Decompression stream for CDF's version of Run Length Encoding.", "members_class" : [{"label" : "markSupported", "tail" : "(): Boolean", "member" : "io.github.mandar2812.PlasmaML.cdf.RunLengthInputStream.markSupported", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#markSupported():Boolean", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.RunLengthInputStream.close", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#close():Unit", "kind" : "def"}, {"label" : "available", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.RunLengthInputStream.available", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#available():Int", "kind" : "def"}, {"label" : "read", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.RunLengthInputStream.read", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#read():Int", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.RunLengthInputStream#<init>", "error" : "unsupported entity"}, {"label" : "reset", "tail" : "(): Unit", "member" : "java.io.InputStream.reset", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#reset():Unit", "kind" : "def"}, {"label" : "mark", "tail" : "(arg0: Int): Unit", "member" : "java.io.InputStream.mark", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#mark(x$1:Int):Unit", "kind" : "def"}, {"label" : "skip", "tail" : "(arg0: Long): Long", "member" : "java.io.InputStream.skip", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#skip(x$1:Long):Long", "kind" : "def"}, {"label" : "read", "tail" : "(arg0: Array[Byte], arg1: Int, arg2: Int): Int", "member" : "java.io.InputStream.read", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#read(x$1:Array[Byte],x$2:Int,x$3:Int):Int", "kind" : "def"}, {"label" : "read", "tail" : "(arg0: Array[Byte]): Int", "member" : "java.io.InputStream.read", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#read(x$1:Array[Byte]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/RunLengthInputStream.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.SameTest", "shortDescription" : "Tests that multiple specified CDF files identical CDF content.", "members_class" : [{"label" : "getErrorCount", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.SameTest.getErrorCount", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#getErrorCount():Int", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.SameTest.run", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#run():Unit", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.SameTest#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/SameTest.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.Shaper", "shortDescription" : "Takes care of turning raw variable record values into shapedrecord values.", "members_class" : [{"label" : "getDimVarys", "tail" : "(): Array[Boolean]", "member" : "io.github.mandar2812.PlasmaML.cdf.Shaper.getDimVarys", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#getDimVarys():Array[Boolean]", "kind" : "def"}, {"label" : "getDimSizes", "tail" : "(): Array[Int]", "member" : "io.github.mandar2812.PlasmaML.cdf.Shaper.getDimSizes", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#getDimSizes():Array[Int]", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.Shaper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getArrayIndex", "tail" : "(coords: Array[Int]): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.Shaper.getArrayIndex", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#getArrayIndex(coords:Array[Int]):Int", "kind" : "abstract def"}, {"label" : "shape", "tail" : "(rawValue: Any, rowMajor: Boolean): AnyRef", "member" : "io.github.mandar2812.PlasmaML.cdf.Shaper.shape", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#shape(rawValue:Any,rowMajor:Boolean):Object", "kind" : "abstract def"}, {"label" : "getShapeClass", "tail" : "(): Class[_]", "member" : "io.github.mandar2812.PlasmaML.cdf.Shaper.getShapeClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#getShapeClass():Class[_]", "kind" : "abstract def"}, {"label" : "getShapedItemCount", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.Shaper.getShapedItemCount", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#getShapedItemCount():Int", "kind" : "abstract def"}, {"label" : "getRawItemCount", "tail" : "(): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.Shaper.getRawItemCount", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html#getRawItemCount():Int", "kind" : "abstract def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/Shaper.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.TtScaler", "shortDescription" : "Handles conversions between TT_TIME2000 (TT since J2000.0)and Unix (UTC since 1970-01-01) times.", "members_class" : [{"label" : "compareTt2kMillis", "tail" : "(tt2kMillis: Long): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.TtScaler.compareTt2kMillis", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#compareTt2kMillis(tt2kMillis:Long):Int", "kind" : "def"}, {"label" : "getToTt2kMillis", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.TtScaler.getToTt2kMillis", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#getToTt2kMillis():Long", "kind" : "def"}, {"label" : "getFromTt2kMillis", "tail" : "(): Long", "member" : "io.github.mandar2812.PlasmaML.cdf.TtScaler.getFromTt2kMillis", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#getFromTt2kMillis():Long", "kind" : "def"}, {"label" : "tt2kToUnixMillis", "tail" : "(tt2kMillis: Long): Double", "member" : "io.github.mandar2812.PlasmaML.cdf.TtScaler.tt2kToUnixMillis", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#tt2kToUnixMillis(tt2kMillis:Long):Double", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.TtScaler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "millisIntoLeapSecond", "tail" : "(tt2kMillis: Long): Int", "member" : "io.github.mandar2812.PlasmaML.cdf.TtScaler.millisIntoLeapSecond", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html#millisIntoLeapSecond(tt2kMillis:Long):Int", "kind" : "abstract def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/TtScaler.html", "kind" : "class"}], "io.github.mandar2812.PlasmaML.dynamics.diffusion" : [{"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel", "shortDescription" : "Inverse inference over plasma radial diffusion parameters.", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html", "members_class" : [{"label" : "energy", "tail" : "(h: Map[String, Double], options: Map[String, String]): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.energy", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#energy(h:Map[String,Double],options:Map[String,String]):Double", "kind" : "def"}, {"label" : "getGalerkinParams", "tail" : "(h: Map[String, Double]): (DenseVector[Double], DenseMatrix[Double])", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.getGalerkinParams", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#getGalerkinParams(h:Map[String,Double]):(breeze.linalg.DenseVector[Double],breeze.linalg.DenseMatrix[Double])", "kind" : "def"}, {"label" : "getBasisParams", "tail" : "(h: Map[String, Double]): DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.getBasisParams", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#getBasisParams(h:Map[String,Double]):breeze.linalg.DenseVector[Double]", "kind" : "def"}, {"label" : "setState", "tail" : "(h: Map[String, Double]): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.setState", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#setState(h:Map[String,Double]):Unit", "kind" : "def"}, {"label" : "effective_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.effective_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#effective_state:Map[String,Double]", "kind" : "def"}, {"label" : "effective_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.effective_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#effective_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "block_++", "tail" : "(h: String*): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.block_++", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#block_++(h:String*):Unit", "kind" : "def"}, {"label" : "block", "tail" : "(hyp: String*): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.block", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#block(hyp:String*):Unit", "kind" : "def"}, {"label" : "regCol", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.regCol", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#regCol:Double", "kind" : "var"}, {"label" : "regObs", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.regObs", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#regObs:Double", "kind" : "var"}, {"label" : "reg", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.reg", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#reg:Double", "kind" : "var"}, {"label" : "blocked_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.blocked_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#blocked_hyper_parameters:List[String]", "kind" : "var"}, {"label" : "current_state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.current_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#current_state:Map[String,Double]", "kind" : "var"}, {"label" : "hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#hyper_parameters:List[String]", "kind" : "var"}, {"label" : "operator_state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.operator_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#operator_state:Map[String,Double]", "kind" : "var"}, {"label" : "operator_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#operator_hyper_parameters:List[String]", "kind" : "val"}, {"label" : "_operator_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel._operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#_operator_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "phi", "tail" : ": DenseMatrix[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.phi", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#phi:breeze.linalg.DenseMatrix[Double]", "kind" : "lazy val"}, {"label" : "psd_std", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.psd_std", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#psd_std:Double", "kind" : "val"}, {"label" : "psd_mean", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.psd_mean", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#psd_mean:Double", "kind" : "val"}, {"label" : "num_colocation_points", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.num_colocation_points", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#num_colocation_points:Int", "kind" : "val"}, {"label" : "num_observations", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.num_observations", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#num_observations:Int", "kind" : "val"}, {"label" : "injection_process", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.injection_process", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#injection_process:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "lossTimeScale", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.lossTimeScale", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#lossTimeScale:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "diffusionField", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.diffusionField", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#diffusionField:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "baseNoiseID", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.baseNoiseID", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#baseNoiseID:String", "kind" : "val"}, {"label" : "baseCovID", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.baseCovID", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#baseCovID:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.logger", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel#<init>", "error" : "unsupported entity"}, {"label" : "basis", "tail" : ": PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#basis:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "val"}, {"label" : "ghost_points", "tail" : ": Stream[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.ghost_points", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#ghost_points:Stream[(Double,Double)]", "kind" : "val"}, {"label" : "psd_data", "tail" : ": Stream[((Double, Double), Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.psd_data", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#psd_data:Stream[((Double,Double),Double)]", "kind" : "val"}, {"label" : "noise_psd", "tail" : ": DiracTuple2Kernel", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.noise_psd", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#noise_psd:io.github.mandar2812.PlasmaML.utils.DiracTuple2Kernel", "kind" : "val"}, {"label" : "covariance", "tail" : ": LocalScalarKernel[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.covariance", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#covariance:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(Double,Double)]", "kind" : "val"}, {"label" : "Kp", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.Kp", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : "persist", "tail" : "(state: Map[String, Double]): Unit", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable.persist", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#persist(state:Map[String,Double]):Unit", "kind" : "def"}, {"label" : "_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable._hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "_current_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable._current_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#_current_state:Map[String,Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "loadCachedResults", "tail" : "(lambda_alpha: Double, lambda_beta: Double, lambda_a: Double, lambda_b: Double)(file: String): Stream[DenseVector[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.loadCachedResults", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#loadCachedResults(lambda_alpha:Double,lambda_beta:Double,lambda_a:Double,lambda_b:Double)(file:String):Stream[breeze.linalg.DenseVector[Double]]", "kind" : "def"}, {"label" : "metaDesignMatFlow", "tail" : ": MetaPipe[Basis[(Double, Double)], Stream[(Double, Double)], DenseMatrix[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.metaDesignMatFlow", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#metaDesignMatFlow:io.github.mandar2812.dynaml.pipes.MetaPipe[io.github.mandar2812.dynaml.pipes.Basis[(Double,Double)],Stream[(Double,Double)],breeze.linalg.DenseMatrix[Double]]", "kind" : "val"}, {"label" : "stateEncoder", "tail" : "(prefix: String): Encoder[Map[String, Double], Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BasisFuncRadialDiffusionModel.stateEncoder", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#stateEncoder(prefix:String):io.github.mandar2812.dynaml.pipes.Encoder[Map[String,Double],Map[String,Double]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BasisFuncRadialDiffusionModel.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BoundaryInjection", "shortDescription" : "", "members_case class" : [{"label" : "grad", "tail" : "(): Seq[MAGProcess[Map[String, Double]]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BoundaryInjection.grad", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#grad:Seq[io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGProcess[Map[String,Double]]]", "kind" : "def"}, {"label" : "gradL", "tail" : "(): MAGProcess[Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BoundaryInjection.gradL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#gradL:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGProcess[Map[String,Double]]", "kind" : "def"}, {"label" : "run", "tail" : "(data: Map[String, Double]): DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BoundaryInjection.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#run(data:Map[String,Double]):io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]", "kind" : "def"}, {"label" : "transform", "tail" : ": MagConfigEncoding", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BoundaryInjection.transform", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#transform:io.github.mandar2812.PlasmaML.utils.MagConfigEncoding", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BoundaryInjection#<init>", "error" : "unsupported entity"}, {"label" : "prefix", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BoundaryInjection.prefix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#prefix:String", "kind" : "val"}, {"label" : "l0", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BoundaryInjection.l0", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#l0:Double", "kind" : "val"}, {"label" : "Kp", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.BoundaryInjection.Kp", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : ">>", "tail" : "(next: DataPipe[Double, Further]): MetaPipe[Map[String, Double], (Double, Double), Further]", "member" : "io.github.mandar2812.dynaml.pipes.MetaPipe.>>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#>>[Further](next:io.github.mandar2812.dynaml.pipes.DataPipe[Destination,Further]):io.github.mandar2812.dynaml.pipes.MetaPipe[Source,Intermediate,Further]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): (Map[String, Double]) ⇒ DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[Map[String, Double], OtherSource, (DataPipe[(Double, Double), Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[Map[String, Double], DataPipe[(Double, Double), Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DataPipe[(Double, Double), Double]]): Basis[Map[String, Double]]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DataPipe[(Double, Double), Double], Further]): ComposedPipe[Map[String, Double], DataPipe[(Double, Double), Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: Map[String, Double]): DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/BoundaryInjection.html", "kind" : "case class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.ConstantMagProcess", "shortDescription" : "", "members_case class" : [{"label" : "grad", "tail" : "(): Seq[MAGProcess[Map[String, Double]]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.ConstantMagProcess.grad", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#grad:Seq[io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGProcess[Map[String,Double]]]", "kind" : "def"}, {"label" : "gradL", "tail" : "(): MAGProcess[Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.ConstantMagProcess.gradL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#gradL:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGProcess[Map[String,Double]]", "kind" : "def"}, {"label" : "run", "tail" : "(data: Map[String, Double]): DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.ConstantMagProcess.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#run(data:Map[String,Double]):io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.ConstantMagProcess#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.ConstantMagProcess.value", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#value:Double", "kind" : "val"}, {"label" : "prefix", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.ConstantMagProcess.prefix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#prefix:String", "kind" : "val"}, {"label" : "transform", "tail" : ": MagConfigEncoding", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend.transform", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#transform:io.github.mandar2812.PlasmaML.utils.MagConfigEncoding", "kind" : "val"}, {"label" : "Kp", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend.Kp", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : ">>", "tail" : "(next: DataPipe[Double, Further]): MetaPipe[Map[String, Double], (Double, Double), Further]", "member" : "io.github.mandar2812.dynaml.pipes.MetaPipe.>>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#>>[Further](next:io.github.mandar2812.dynaml.pipes.DataPipe[Destination,Further]):io.github.mandar2812.dynaml.pipes.MetaPipe[Source,Intermediate,Further]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): (Map[String, Double]) ⇒ DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[Map[String, Double], OtherSource, (DataPipe[(Double, Double), Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[Map[String, Double], DataPipe[(Double, Double), Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DataPipe[(Double, Double), Double]]): Basis[Map[String, Double]]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DataPipe[(Double, Double), Double], Further]): ComposedPipe[Map[String, Double], DataPipe[(Double, Double), Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: Map[String, Double]): DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/ConstantMagProcess.html", "kind" : "case class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.DiffusionPrior", "shortDescription" : "Extension of io.github.mandar2812.dynaml.models.bayes.CoRegGPPrior, adaptedfor the plasma diffusion scheme.", "members_class" : [{"label" : "meanFunctionPipe", "tail" : ": MagnetosphericProcessTrend[Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.DiffusionPrior.meanFunctionPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#meanFunctionPipe:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend[Map[String,Double]]", "kind" : "val"}, {"label" : "meanFuncParams_", "tail" : "(p: Map[String, Double]): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.DiffusionPrior.meanFuncParams_", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#meanFuncParams_(p:Map[String,Double]):Unit", "kind" : "def"}, {"label" : "_meanFuncParams", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.DiffusionPrior._meanFuncParams", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#_meanFuncParams:Map[String,Double]", "kind" : "def"}, {"label" : "parameters", "tail" : ": (Double, Double, Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.DiffusionPrior.parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#parameters:(Double,Double,Double,Double)", "kind" : "var"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.DiffusionPrior#<init>", "error" : "unsupported entity"}, {"label" : "noise", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.DiffusionPrior.noise", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#noise:Double", "kind" : "val"}, {"label" : "covarianceTime", "tail" : ": LocalScalarKernel[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.DiffusionPrior.covarianceTime", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#covarianceTime:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Double]", "kind" : "val"}, {"label" : "covarianceSpace", "tail" : ": LocalScalarKernel[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.DiffusionPrior.covarianceSpace", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#covarianceSpace:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Double]", "kind" : "val"}, {"label" : "trend", "tail" : ": MagnetosphericProcessTrend[Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.DiffusionPrior.trend", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#trend:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend[Map[String,Double]]", "kind" : "val"}, {"label" : "*", "tail" : "(scalingFunc: ParallelPipe[Double, Double, Double, Double]): CoRegGPPrior[Double, Double, Map[String, Double]]", "member" : "io.github.mandar2812.dynaml.models.bayes.CoRegGPPrior.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#*(scalingFunc:io.github.mandar2812.dynaml.pipes.ParallelPipe[I,Double,J,Double]):io.github.mandar2812.dynaml.models.bayes.CoRegGPPrior[I,J,MeanFuncParams]", "kind" : "def"}, {"label" : "priorDistribution", "tail" : "(d1: U, d2: V): MatrixNormalRV", "member" : "io.github.mandar2812.dynaml.models.bayes.CoRegGPPrior.priorDistribution", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#priorDistribution[U<:Seq[I],V<:Seq[J]](d1:U,d2:V):io.github.mandar2812.dynaml.probability.MatrixNormalRV", "kind" : "def"}, {"label" : "trendParamsEncoder", "tail" : ": Encoder[Map[String, Double], Map[String, Double]]", "member" : "io.github.mandar2812.dynaml.models.bayes.CoRegGPPrior.trendParamsEncoder", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#trendParamsEncoder:io.github.mandar2812.dynaml.pipes.Encoder[MeanFuncParams,Map[String,Double]]", "kind" : "val"}, {"label" : "*", "tail" : "(scalingFunc: DataPipe[(Double, Double), Double]): GaussianProcessPrior[(Double, Double), Map[String, Double]]", "member" : "io.github.mandar2812.dynaml.models.bayes.GaussianProcessPrior.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#*(scalingFunc:io.github.mandar2812.dynaml.pipes.DataPipe[I,Double]):io.github.mandar2812.dynaml.models.bayes.GaussianProcessPrior[I,MeanFuncParams]", "kind" : "def"}, {"label" : "priorDistribution", "tail" : "(d: U): MultGaussianPRV", "member" : "io.github.mandar2812.dynaml.models.bayes.GaussianProcessPrior.priorDistribution", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#priorDistribution[U<:Seq[I]](d:U):io.github.mandar2812.dynaml.probability.MultGaussianPRV", "kind" : "def"}, {"label" : "posteriorModel", "tail" : "(data: Seq[((Double, Double), Double)]): GPModel", "member" : "io.github.mandar2812.dynaml.models.bayes.GaussianProcessPrior.posteriorModel", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#posteriorModel(data:Seq[(I,Double)]):GaussianProcessPrior.this.GPModel", "kind" : "def"}, {"label" : "posteriorModelPipe", "tail" : "(): DataPipe2[Seq[((Double, Double), Double)], DataPipe[(Double, Double), Double], GPModel]", "member" : "io.github.mandar2812.dynaml.models.bayes.GaussianProcessPrior.posteriorModelPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#posteriorModelPipe:io.github.mandar2812.dynaml.pipes.DataPipe2[Seq[(I,Double)],io.github.mandar2812.dynaml.pipes.DataPipe[I,Double],GaussianProcessPrior.this.GPModel]", "kind" : "def"}, {"label" : "globalOptConfig_", "tail" : "(conf: Map[String, String]): Unit", "member" : "io.github.mandar2812.dynaml.models.bayes.GaussianProcessPrior.globalOptConfig_", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#globalOptConfig_(conf:Map[String,String]):Unit", "kind" : "def"}, {"label" : "initial_covariance_state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.dynaml.models.bayes.GaussianProcessPrior.initial_covariance_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#initial_covariance_state:Map[String,Double]", "kind" : "val"}, {"label" : "GPModel", "tail" : "", "member" : "io.github.mandar2812.dynaml.models.bayes.GaussianProcessPrior.GPModel", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#GPModel=io.github.mandar2812.dynaml.models.gp.AbstractGPRegressionModel[Seq[(I,Double)],I]", "kind" : "type"}, {"label" : "noiseCovariance", "tail" : ": LocalScalarKernel[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.models.bayes.GaussianProcessPrior.noiseCovariance", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#noiseCovariance:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[I]", "kind" : "val"}, {"label" : "covariance", "tail" : ": LocalScalarKernel[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.models.bayes.GaussianProcessPrior.covariance", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#covariance:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[I]", "kind" : "val"}, {"label" : "posteriorRV", "tail" : "(data: Seq[((Double, Double), Double)])(test: U): MultGaussianPRV", "member" : "io.github.mandar2812.dynaml.models.bayes.StochasticProcessPrior.posteriorRV", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#posteriorRV[U<:Seq[I]](data:Seq[(I,Y)])(test:U):W", "kind" : "def"}, {"label" : "hyperPrior_", "tail" : "(h: Map[String, ContinuousRVWithDistr[Double, ContinuousDistr[Double]]]): Unit", "member" : "io.github.mandar2812.dynaml.models.bayes.StochasticProcessPrior.hyperPrior_", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#hyperPrior_(h:Map[String,io.github.mandar2812.dynaml.probability.ContinuousRVWithDistr[Double,breeze.stats.distributions.ContinuousDistr[Double]]]):Unit", "kind" : "def"}, {"label" : "hyperPrior", "tail" : ": Map[String, ContinuousRVWithDistr[Double, ContinuousDistr[Double]]]", "member" : "io.github.mandar2812.dynaml.models.bayes.StochasticProcessPrior.hyperPrior", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#hyperPrior:Map[String,io.github.mandar2812.dynaml.probability.ContinuousRVWithDistr[Double,breeze.stats.distributions.ContinuousDistr[Double]]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/DiffusionPrior.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel", "shortDescription" : "", "members_class" : [{"label" : "get_design_mat", "tail" : "(g: DenseMatrix[Double], h: DenseMatrix[Double]): DenseMatrix[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.get_design_mat", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#get_design_mat(g:breeze.linalg.DenseMatrix[Double],h:breeze.linalg.DenseMatrix[Double]):breeze.linalg.DenseMatrix[Double]", "kind" : "def"}, {"label" : "getParams", "tail" : "(h: Map[String, Double]): (DenseVector[Double], DenseMatrix[Double])", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.getParams", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#getParams(h:Map[String,Double]):(breeze.linalg.DenseVector[Double],breeze.linalg.DenseMatrix[Double])", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel#<init>", "error" : "unsupported entity"}, {"label" : "basisCovFlag", "tail" : ": Boolean", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.basisCovFlag", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#basisCovFlag:Boolean", "kind" : "val"}, {"label" : "hyper_param_basis", "tail" : ": Map[String, MagParamBasis]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.hyper_param_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#hyper_param_basis:Map[String,io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis]", "kind" : "val"}, {"label" : "quadrature_t", "tail" : ": QuadratureRule", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.quadrature_t", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#quadrature_t:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.QuadratureRule", "kind" : "val"}, {"label" : "quadrature_l", "tail" : ": QuadratureRule", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.quadrature_l", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#quadrature_l:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.QuadratureRule", "kind" : "val"}, {"label" : "timeDomain", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.timeDomain", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#timeDomain:(Double,Double)", "kind" : "val"}, {"label" : "lShellDomain", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.lShellDomain", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#lShellDomain:(Double,Double)", "kind" : "val"}, {"label" : "basis", "tail" : ": PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#basis:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "val"}, {"label" : "psd_data", "tail" : ": Stream[((Double, Double), Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.psd_data", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#psd_data:Stream[((Double,Double),Double)]", "kind" : "val"}, {"label" : "noise_psd", "tail" : ": DiracTuple2Kernel", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.noise_psd", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#noise_psd:io.github.mandar2812.PlasmaML.utils.DiracTuple2Kernel", "kind" : "val"}, {"label" : "covariance", "tail" : ": LocalScalarKernel[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.covariance", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#covariance:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(Double,Double)]", "kind" : "val"}, {"label" : "Kp", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GalerkinRDModel.Kp", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : "energy", "tail" : "(h: Map[String, Double], options: Map[String, String]): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.energy", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#energy(h:Map[String,Double],options:Map[String,String]):Double", "kind" : "def"}, {"label" : "get_surrogate", "tail" : "(h: Map[String, Double]): DataPipe[Iterable[(Double, Double)], Iterable[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.get_surrogate", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#get_surrogate(h:Map[String,Double]):io.github.mandar2812.dynaml.pipes.DataPipe[Iterable[(Double,Double)],Iterable[Double]]", "kind" : "def"}, {"label" : "setState", "tail" : "(h: Map[String, Double]): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.setState", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#setState(h:Map[String,Double]):Unit", "kind" : "def"}, {"label" : "effective_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.effective_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#effective_state:Map[String,Double]", "kind" : "def"}, {"label" : "effective_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.effective_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#effective_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "block_++", "tail" : "(h: String*): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.block_++", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#block_++(h:String*):Unit", "kind" : "def"}, {"label" : "block", "tail" : "(hyp: String*): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.block", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#block(hyp:String*):Unit", "kind" : "def"}, {"label" : "regCol", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.regCol", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#regCol:Double", "kind" : "var"}, {"label" : "regObs", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.regObs", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#regObs:Double", "kind" : "var"}, {"label" : "reg", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.reg", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#reg:Double", "kind" : "var"}, {"label" : "blocked_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.blocked_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#blocked_hyper_parameters:List[String]", "kind" : "var"}, {"label" : "current_state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.current_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#current_state:Map[String,Double]", "kind" : "var"}, {"label" : "hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#hyper_parameters:List[String]", "kind" : "var"}, {"label" : "operator_state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.operator_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#operator_state:Map[String,Double]", "kind" : "var"}, {"label" : "operator_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#operator_hyper_parameters:List[String]", "kind" : "val"}, {"label" : "_operator_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel._operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#_operator_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "phi", "tail" : ": DenseMatrix[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.phi", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#phi:breeze.linalg.DenseMatrix[Double]", "kind" : "lazy val"}, {"label" : "psd_std", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.psd_std", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#psd_std:Double", "kind" : "val"}, {"label" : "psd_mean", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.psd_mean", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#psd_mean:Double", "kind" : "val"}, {"label" : "num_colocation_points", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.num_colocation_points", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#num_colocation_points:Int", "kind" : "val"}, {"label" : "num_observations", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.num_observations", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#num_observations:Int", "kind" : "val"}, {"label" : "quadrature_weight_matrix", "tail" : ": DenseMatrix[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.quadrature_weight_matrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#quadrature_weight_matrix:breeze.linalg.DenseMatrix[Double]", "kind" : "val"}, {"label" : "ghost_points", "tail" : ": Stream[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.ghost_points", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#ghost_points:Stream[(Double,Double)]", "kind" : "val"}, {"label" : "injection_process", "tail" : ": BoundaryInjection", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.injection_process", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#injection_process:io.github.mandar2812.PlasmaML.dynamics.diffusion.BoundaryInjection", "kind" : "val"}, {"label" : "lossRate", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.lossRate", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#lossRate:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "diffusionField", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.diffusionField", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#diffusionField:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.logger", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "persist", "tail" : "(state: Map[String, Double]): Unit", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable.persist", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#persist(state:Map[String,Double]):Unit", "kind" : "def"}, {"label" : "_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable._hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "_current_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable._current_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#_current_state:Map[String,Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GalerkinRDModel.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GaussianPSDBasis", "shortDescription" : "Implements a gaussian radial basis expansion for the phase space densitywith nodes placed on a regular space time mesh.", "members_class" : [{"label" : "f_t", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GaussianPSDBasis.f_t", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#f_t:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f_ll", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GaussianPSDBasis.f_ll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#f_ll:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f_l", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GaussianPSDBasis.f_l", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#f_l:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GaussianPSDBasis.f", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#f:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "productBasis", "tail" : ": Basis[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GaussianPSDBasis.productBasis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#productBasis:io.github.mandar2812.dynaml.pipes.Basis[(Double,Double)]", "kind" : "val"}, {"label" : "basisT", "tail" : ": RadialBasis[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GaussianPSDBasis.basisT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#basisT:io.github.mandar2812.dynaml.analysis.RadialBasis[Double]", "kind" : "val"}, {"label" : "basisL", "tail" : ": RadialBasis[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GaussianPSDBasis.basisL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#basisL:io.github.mandar2812.dynaml.analysis.RadialBasis[Double]", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GaussianPSDBasis#<init>", "error" : "unsupported entity"}, {"label" : "indexEncoder", "tail" : ": Encoder[(Int, Int), Int]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.indexEncoder", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#indexEncoder:io.github.mandar2812.dynaml.pipes.Encoder[(Int,Int),Int]", "kind" : "val"}, {"label" : "dimensionT", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimensionT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#dimensionT:Int", "kind" : "val"}, {"label" : "dimensionL", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimensionL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#dimensionL:Int", "kind" : "val"}, {"label" : "dimension", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimension", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#dimension:Int", "kind" : "val"}, {"label" : "_centers", "tail" : "(): Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis._centers", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#_centers:Seq[(Double,Double)]", "kind" : "def"}, {"label" : "scales", "tail" : "(): Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scales", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#scales:Seq[(Double,Double)]", "kind" : "def"}, {"label" : "centers", "tail" : ": Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.centers", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#centers:Seq[(Double,Double)]", "kind" : "val"}, {"label" : "tupleListEnc", "tail" : ": Encoder[(Int, Int), List[Int]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.tupleListEnc", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#tupleListEnc:io.github.mandar2812.dynaml.pipes.Encoder[(Int,Int),List[Int]]", "kind" : "val"}, {"label" : "scalesT", "tail" : "(): Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scalesT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#scalesT:Seq[Double]", "kind" : "def"}, {"label" : "scalesL", "tail" : "(): Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scalesL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#scalesL:Seq[Double]", "kind" : "def"}, {"label" : "deltaT", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.deltaT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#deltaT:Double", "kind" : "val"}, {"label" : "deltaL", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.deltaL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#deltaL:Double", "kind" : "val"}, {"label" : "tSeq", "tail" : ": Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.tSeq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#tSeq:Seq[Double]", "kind" : "val"}, {"label" : "lSeq", "tail" : ": Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.lSeq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#lSeq:Seq[Double]", "kind" : "val"}, {"label" : "mult", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.mult", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#mult:Double", "kind" : "var"}, {"label" : "logScaleFlags", "tail" : ": (Boolean, Boolean)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.logScaleFlags", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#logScaleFlags:(Boolean,Boolean)", "kind" : "val"}, {"label" : "nT", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.nT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#nT:Int", "kind" : "val"}, {"label" : "timeLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.timeLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#timeLimits:(Double,Double)", "kind" : "val"}, {"label" : "nL", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.nL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#nL:Int", "kind" : "val"}, {"label" : "lShellLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.lShellLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#lShellLimits:(Double,Double)", "kind" : "val"}, {"label" : "::", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.::", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#::(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "+", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#+(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "operator_basis", "tail" : "(diffusionField: DataPipe[(Double, Double), Double], diffusionFieldGradL: DataPipe[(Double, Double), Double], lossTimeScale: DataPipe[(Double, Double), Double]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.operator_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#operator_basis(diffusionField:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],diffusionFieldGradL:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],lossTimeScale:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]):io.github.mandar2812.dynaml.pipes.Basis[(Double,Double)]", "kind" : "def"}, {"label" : "*", "tail" : "(other: Basis[J]): Basis[((Double, Double), J)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#*[J](other:io.github.mandar2812.dynaml.pipes.Basis[J]):io.github.mandar2812.dynaml.pipes.Basis[(I,J)]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipe[DenseVector[Double], DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#>(other:io.github.mandar2812.dynaml.pipes.DataPipe[breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]]):io.github.mandar2812.dynaml.pipes.Basis[I]", "kind" : "def"}, {"label" : "run", "tail" : "(x: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#run(x:I):breeze.linalg.DenseVector[Double]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[(Double, Double), OtherSource, (DenseVector[Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[(Double, Double), DenseVector[Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DenseVector[Double], Further]): ComposedPipe[(Double, Double), DenseVector[Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GaussianPSDBasis.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel", "shortDescription" : "Exponential Family Radial Diffusion Kernel", "members_class" : [{"label" : "gradientAt", "tail" : "(config: Map[String, Double])(x: (Double, Double), x_tilda: (Double, Double)): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.gradientAt", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#gradientAt(config:Map[String,Double])(x:(Double,Double),x_tilda:(Double,Double)):scala.collection.immutable.Map[String,Double]", "kind" : "def"}, {"label" : "evaluateAt", "tail" : "(config: Map[String, Double])(x: (Double, Double), x_tilda: (Double, Double)): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.evaluateAt", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#evaluateAt(config:Map[String,Double])(x:(Double,Double),x_tilda:(Double,Double)):Double", "kind" : "def"}, {"label" : "invOperatorKernel", "tail" : "(): (exIndexSet, exIndexSet) ⇒ Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.invOperatorKernel", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#invOperatorKernel:(GenExpDiffusionKernel.this.exIndexSet,GenExpDiffusionKernel.this.exIndexSet)=>Double", "kind" : "def"}, {"label" : "operator_state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.operator_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#operator_state:Map[String,Double]", "kind" : "var"}, {"label" : "hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#hyper_parameters:List[String]", "kind" : "val"}, {"label" : "operator_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#operator_hyper_parameters:List[String]", "kind" : "val"}, {"label" : "_operator_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel._operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#_operator_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "baseID", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.baseID", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#baseID:String", "kind" : "val"}, {"label" : "gradDByLSq", "tail" : ": MetaPipe[Map[String, Double], (Double, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.gradDByLSq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#gradDByLSq:io.github.mandar2812.dynaml.pipes.MetaPipe[Map[String,Double],(Double,Double),Double]", "kind" : "val"}, {"label" : "diffusionFieldGradL", "tail" : ": MetaPipe[Map[String, Double], (Double, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.diffusionFieldGradL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#diffusionFieldGradL:io.github.mandar2812.dynaml.pipes.MetaPipe[Map[String,Double],(Double,Double),Double]", "kind" : "val"}, {"label" : "lossTimeScale", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.lossTimeScale", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#lossTimeScale:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "diffusionField", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.diffusionField", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#diffusionField:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "baseKernel", "tail" : ": GenExpSpaceTimeKernel[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.baseKernel", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#baseKernel:io.github.mandar2812.dynaml.kernels.GenExpSpaceTimeKernel[Double]", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel#<init>", "error" : "unsupported entity"}, {"label" : "Kp", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenExpDiffusionKernel.Kp", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : "block", "tail" : "(h: String*): Unit", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel.block", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#block(h:String*):Unit", "kind" : "def"}, {"label" : "setHyperParameters", "tail" : "(h: Map[String, Double]): GenExpDiffusionKernel.this.type", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel.setHyperParameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#setHyperParameters(h:Map[String,Double]):LinearPDEKernel.this.type", "kind" : "def"}, {"label" : "exIndexSet", "tail" : "", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel.exIndexSet", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#exIndexSet=(I,Double)", "kind" : "type"}, {"label" : "asPipe", "tail" : "(): DataPipe[Map[String, Double], LocalScalarKernel[(Double, Double)]]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.asPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#asPipe:io.github.mandar2812.dynaml.pipes.DataPipe[Map[String,Double],io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]]", "kind" : "def"}, {"label" : "buildBlockedCrossKernelMatrix", "tail" : "(dataset1: S, dataset2: S): PartitionedMatrix", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildBlockedCrossKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#buildBlockedCrossKernelMatrix[S<:Seq[Index]](dataset1:S,dataset2:S):io.github.mandar2812.dynaml.algebra.PartitionedMatrix", "kind" : "def"}, {"label" : "buildBlockedKernelMatrix", "tail" : "(mappedData: S, length: Long): PartitionedPSDMatrix", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildBlockedKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#buildBlockedKernelMatrix[S<:Seq[Index]](mappedData:S,length:Long):io.github.mandar2812.dynaml.algebra.PartitionedPSDMatrix", "kind" : "def"}, {"label" : "buildCrossKernelMatrix", "tail" : "(dataset1: S, dataset2: S): DenseMatrix[Double]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildCrossKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#buildCrossKernelMatrix[S<:Seq[Index]](dataset1:S,dataset2:S):breeze.linalg.DenseMatrix[Double]", "kind" : "def"}, {"label" : "buildKernelMatrix", "tail" : "(mappedData: S, length: Int): KernelMatrix[DenseMatrix[Double]]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#buildKernelMatrix[S<:Seq[Index]](mappedData:S,length:Int):io.github.mandar2812.dynaml.kernels.KernelMatrix[breeze.linalg.DenseMatrix[Double]]", "kind" : "def"}, {"label" : ":+", "tail" : "(otherKernel: LocalScalarKernel[T1]): CompositeCovariance[((Double, Double), T1)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.:+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#:+[T1](otherKernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[T1]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[(Index,T1)]", "kind" : "def"}, {"label" : ":*", "tail" : "(otherKernel: LocalScalarKernel[T1]): KroneckerProductKernel[(Double, Double), T1]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.:*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#:*[T1](otherKernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[T1]):io.github.mandar2812.dynaml.kernels.KroneckerProductKernel[Index,T1]", "kind" : "def"}, {"label" : ">", "tail" : "(otherKernel: K): CompositeCovariance[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#>[K<:io.github.mandar2812.dynaml.kernels.GenericRBFKernel[Index]](otherKernel:K):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "*", "tail" : "(c: Double): LocalScalarKernel[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#*(c:Double):io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]", "kind" : "def"}, {"label" : "*", "tail" : "(otherKernel: T)(ev: ClassTag[(Double, Double)]): CompositeCovariance[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#*[T<:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]](otherKernel:T)(implicitev:scala.reflect.ClassTag[Index]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "+", "tail" : "(otherKernel: T)(ev: ClassTag[(Double, Double)]): CompositeCovariance[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#+[T<:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]](otherKernel:T)(implicitev:scala.reflect.ClassTag[Index]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "setBlockSizes", "tail" : "(s: (Int, Int)): Unit", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.setBlockSizes", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#setBlockSizes(s:(Int,Int)):Unit", "kind" : "def"}, {"label" : "colBlocking", "tail" : ": Int", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.colBlocking", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#colBlocking:Int", "kind" : "val"}, {"label" : "rowBlocking", "tail" : ": Int", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.rowBlocking", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#rowBlocking:Int", "kind" : "val"}, {"label" : "gradient", "tail" : "(x: (Double, Double), y: (Double, Double)): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.gradient", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#gradient(x:T,y:T):Map[String,V]", "kind" : "def"}, {"label" : "evaluate", "tail" : "(x: (Double, Double), y: (Double, Double)): Double", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.evaluate", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#evaluate(x:T,y:T):V", "kind" : "def"}, {"label" : "effective_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.effective_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#effective_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "effective_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.effective_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#effective_state:Map[String,Double]", "kind" : "def"}, {"label" : "block_all_hyper_parameters", "tail" : "(): Unit", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.block_all_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#block_all_hyper_parameters:Unit", "kind" : "def"}, {"label" : "state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#state:Map[String,Double]", "kind" : "var"}, {"label" : "blocked_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.blocked_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#blocked_hyper_parameters:List[String]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenExpDiffusionKernel.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenRadialDiffusionKernel", "members_trait" : [{"label" : "block", "tail" : "(h: String*): Unit", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel.block", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#block(h:String*):Unit", "kind" : "def"}, {"label" : "setHyperParameters", "tail" : "(h: Map[String, Double]): GenRadialDiffusionKernel.this.type", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel.setHyperParameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#setHyperParameters(h:Map[String,Double]):LinearPDEKernel.this.type", "kind" : "def"}, {"label" : "exIndexSet", "tail" : "", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel.exIndexSet", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#exIndexSet=(I,Double)", "kind" : "type"}, {"label" : "asPipe", "tail" : "(): DataPipe[Map[String, Double], LocalScalarKernel[(I, Double)]]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.asPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#asPipe:io.github.mandar2812.dynaml.pipes.DataPipe[Map[String,Double],io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]]", "kind" : "def"}, {"label" : "buildBlockedCrossKernelMatrix", "tail" : "(dataset1: S, dataset2: S): PartitionedMatrix", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildBlockedCrossKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#buildBlockedCrossKernelMatrix[S<:Seq[Index]](dataset1:S,dataset2:S):io.github.mandar2812.dynaml.algebra.PartitionedMatrix", "kind" : "def"}, {"label" : "buildBlockedKernelMatrix", "tail" : "(mappedData: S, length: Long): PartitionedPSDMatrix", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildBlockedKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#buildBlockedKernelMatrix[S<:Seq[Index]](mappedData:S,length:Long):io.github.mandar2812.dynaml.algebra.PartitionedPSDMatrix", "kind" : "def"}, {"label" : "buildCrossKernelMatrix", "tail" : "(dataset1: S, dataset2: S): DenseMatrix[Double]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildCrossKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#buildCrossKernelMatrix[S<:Seq[Index]](dataset1:S,dataset2:S):breeze.linalg.DenseMatrix[Double]", "kind" : "def"}, {"label" : "buildKernelMatrix", "tail" : "(mappedData: S, length: Int): KernelMatrix[DenseMatrix[Double]]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#buildKernelMatrix[S<:Seq[Index]](mappedData:S,length:Int):io.github.mandar2812.dynaml.kernels.KernelMatrix[breeze.linalg.DenseMatrix[Double]]", "kind" : "def"}, {"label" : ":+", "tail" : "(otherKernel: LocalScalarKernel[T1]): CompositeCovariance[((I, Double), T1)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.:+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#:+[T1](otherKernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[T1]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[(Index,T1)]", "kind" : "def"}, {"label" : ":*", "tail" : "(otherKernel: LocalScalarKernel[T1]): KroneckerProductKernel[(I, Double), T1]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.:*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#:*[T1](otherKernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[T1]):io.github.mandar2812.dynaml.kernels.KroneckerProductKernel[Index,T1]", "kind" : "def"}, {"label" : ">", "tail" : "(otherKernel: K): CompositeCovariance[(I, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#>[K<:io.github.mandar2812.dynaml.kernels.GenericRBFKernel[Index]](otherKernel:K):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "*", "tail" : "(c: Double): LocalScalarKernel[(I, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#*(c:Double):io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]", "kind" : "def"}, {"label" : "*", "tail" : "(otherKernel: T)(ev: ClassTag[(I, Double)]): CompositeCovariance[(I, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#*[T<:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]](otherKernel:T)(implicitev:scala.reflect.ClassTag[Index]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "+", "tail" : "(otherKernel: T)(ev: ClassTag[(I, Double)]): CompositeCovariance[(I, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#+[T<:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]](otherKernel:T)(implicitev:scala.reflect.ClassTag[Index]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "setBlockSizes", "tail" : "(s: (Int, Int)): Unit", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.setBlockSizes", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#setBlockSizes(s:(Int,Int)):Unit", "kind" : "def"}, {"label" : "colBlocking", "tail" : ": Int", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.colBlocking", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#colBlocking:Int", "kind" : "val"}, {"label" : "rowBlocking", "tail" : ": Int", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.rowBlocking", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#rowBlocking:Int", "kind" : "val"}, {"label" : "gradient", "tail" : "(x: (I, Double), y: (I, Double)): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.gradient", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#gradient(x:T,y:T):Map[String,V]", "kind" : "def"}, {"label" : "evaluate", "tail" : "(x: (I, Double), y: (I, Double)): Double", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.evaluate", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#evaluate(x:T,y:T):V", "kind" : "def"}, {"label" : "effective_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.effective_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#effective_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "effective_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.effective_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#effective_state:Map[String,Double]", "kind" : "def"}, {"label" : "block_all_hyper_parameters", "tail" : "(): Unit", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.block_all_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#block_all_hyper_parameters:Unit", "kind" : "def"}, {"label" : "state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#state:Map[String,Double]", "kind" : "var"}, {"label" : "blocked_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.blocked_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#blocked_hyper_parameters:List[String]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "gradDByLSq", "tail" : ": MetaPipe[Map[String, Double], (I, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenRadialDiffusionKernel.gradDByLSq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#gradDByLSq:io.github.mandar2812.dynaml.pipes.MetaPipe[Map[String,Double],(I,Double),Double]", "kind" : "abstract val"}, {"label" : "diffusionFieldGradL", "tail" : ": MetaPipe[Map[String, Double], (I, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenRadialDiffusionKernel.diffusionFieldGradL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#diffusionFieldGradL:io.github.mandar2812.dynaml.pipes.MetaPipe[Map[String,Double],(I,Double),Double]", "kind" : "abstract val"}, {"label" : "lossTimeScale", "tail" : ": MetaPipe[Map[String, Double], (I, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenRadialDiffusionKernel.lossTimeScale", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#lossTimeScale:io.github.mandar2812.dynaml.pipes.MetaPipe[Map[String,Double],(I,Double),Double]", "kind" : "abstract val"}, {"label" : "diffusionField", "tail" : ": MetaPipe[Map[String, Double], (I, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenRadialDiffusionKernel.diffusionField", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#diffusionField:io.github.mandar2812.dynaml.pipes.MetaPipe[Map[String,Double],(I,Double),Double]", "kind" : "abstract val"}, {"label" : "baseKernel", "tail" : ": GenExpSpaceTimeKernel[I]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.GenRadialDiffusionKernel.baseKernel", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#baseKernel:io.github.mandar2812.dynaml.kernels.GenExpSpaceTimeKernel[I]", "kind" : "abstract val"}, {"label" : "_operator_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel._operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#_operator_hyper_parameters:List[String]", "kind" : "abstract def"}, {"label" : "baseID", "tail" : ": String", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel.baseID", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#baseID:String", "kind" : "abstract val"}, {"label" : "invOperatorKernel", "tail" : "(): (exIndexSet, exIndexSet) ⇒ Double", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel.invOperatorKernel", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#invOperatorKernel:(LinearPDEKernel.this.exIndexSet,LinearPDEKernel.this.exIndexSet)=>Double", "kind" : "abstract def"}, {"label" : "gradientAt", "tail" : "(config: Map[String, Double])(x: (I, Double), y: (I, Double)): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.gradientAt", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#gradientAt(config:Map[String,Double])(x:T,y:T):Map[String,V]", "kind" : "abstract def"}, {"label" : "evaluateAt", "tail" : "(config: Map[String, Double])(x: (I, Double), y: (I, Double)): Double", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.evaluateAt", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#evaluateAt(config:Map[String,Double])(x:T,y:T):V", "kind" : "abstract def"}, {"label" : "hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html#hyper_parameters:List[String]", "kind" : "abstract val"}], "shortDescription" : "Radial Diffusion Kernel", "trait" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/GenRadialDiffusionKernel.html", "kind" : "trait"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridMQPSDBasis", "shortDescription" : "Implements a multi-quadric radial basis expansion for the spatial componentand a inverse multi-quadric radial basis expansion for the temporal component of thephase space density with nodes placed on a regular space time mesh.", "members_class" : [{"label" : "f_t", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridMQPSDBasis.f_t", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#f_t:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f_ll", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridMQPSDBasis.f_ll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#f_ll:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f_l", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridMQPSDBasis.f_l", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#f_l:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridMQPSDBasis.f", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#f:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "temporal_field", "tail" : ": innerProdDouble.type", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridMQPSDBasis.temporal_field", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#temporal_field:io.github.mandar2812.dynaml.analysis.implicits.innerProdDouble.type", "kind" : "val"}, {"label" : "spatial_field", "tail" : ": innerProdDouble.type", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridMQPSDBasis.spatial_field", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#spatial_field:io.github.mandar2812.dynaml.analysis.implicits.innerProdDouble.type", "kind" : "val"}, {"label" : "temporal_activation", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridMQPSDBasis.temporal_activation", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#temporal_activation:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : "spatial_activation", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridMQPSDBasis.spatial_activation", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#spatial_activation:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridMQPSDBasis#<init>", "error" : "unsupported entity"}, {"label" : "indexEncoder", "tail" : ": Encoder[(Int, Int), Int]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.indexEncoder", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#indexEncoder:io.github.mandar2812.dynaml.pipes.Encoder[(Int,Int),Int]", "kind" : "val"}, {"label" : "dimensionT", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimensionT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#dimensionT:Int", "kind" : "val"}, {"label" : "dimensionL", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimensionL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#dimensionL:Int", "kind" : "val"}, {"label" : "dimension", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimension", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#dimension:Int", "kind" : "val"}, {"label" : "_centers", "tail" : "(): Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis._centers", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#_centers:Seq[(Double,Double)]", "kind" : "def"}, {"label" : "scales", "tail" : "(): Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scales", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#scales:Seq[(Double,Double)]", "kind" : "def"}, {"label" : "centers", "tail" : ": Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.centers", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#centers:Seq[(Double,Double)]", "kind" : "val"}, {"label" : "tupleListEnc", "tail" : ": Encoder[(Int, Int), List[Int]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.tupleListEnc", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#tupleListEnc:io.github.mandar2812.dynaml.pipes.Encoder[(Int,Int),List[Int]]", "kind" : "val"}, {"label" : "scalesT", "tail" : "(): Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scalesT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#scalesT:Seq[Double]", "kind" : "def"}, {"label" : "scalesL", "tail" : "(): Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scalesL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#scalesL:Seq[Double]", "kind" : "def"}, {"label" : "deltaT", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.deltaT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#deltaT:Double", "kind" : "val"}, {"label" : "deltaL", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.deltaL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#deltaL:Double", "kind" : "val"}, {"label" : "tSeq", "tail" : ": Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.tSeq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#tSeq:Seq[Double]", "kind" : "val"}, {"label" : "lSeq", "tail" : ": Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.lSeq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#lSeq:Seq[Double]", "kind" : "val"}, {"label" : "mult", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.mult", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#mult:Double", "kind" : "var"}, {"label" : "logScaleFlags", "tail" : ": (Boolean, Boolean)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.logScaleFlags", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#logScaleFlags:(Boolean,Boolean)", "kind" : "val"}, {"label" : "nT", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.nT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#nT:Int", "kind" : "val"}, {"label" : "timeLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.timeLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#timeLimits:(Double,Double)", "kind" : "val"}, {"label" : "nL", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.nL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#nL:Int", "kind" : "val"}, {"label" : "lShellLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.lShellLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#lShellLimits:(Double,Double)", "kind" : "val"}, {"label" : "::", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.::", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#::(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "+", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#+(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "operator_basis", "tail" : "(diffusionField: DataPipe[(Double, Double), Double], diffusionFieldGradL: DataPipe[(Double, Double), Double], lossTimeScale: DataPipe[(Double, Double), Double]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.operator_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#operator_basis(diffusionField:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],diffusionFieldGradL:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],lossTimeScale:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]):io.github.mandar2812.dynaml.pipes.Basis[(Double,Double)]", "kind" : "def"}, {"label" : "*", "tail" : "(other: Basis[J]): Basis[((Double, Double), J)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#*[J](other:io.github.mandar2812.dynaml.pipes.Basis[J]):io.github.mandar2812.dynaml.pipes.Basis[(I,J)]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipe[DenseVector[Double], DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#>(other:io.github.mandar2812.dynaml.pipes.DataPipe[breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]]):io.github.mandar2812.dynaml.pipes.Basis[I]", "kind" : "def"}, {"label" : "run", "tail" : "(x: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#run(x:I):breeze.linalg.DenseVector[Double]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[(Double, Double), OtherSource, (DenseVector[Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[(Double, Double), DenseVector[Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DenseVector[Double], Further]): ComposedPipe[(Double, Double), DenseVector[Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridMQPSDBasis.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis", "shortDescription" : "A general basis expansion for the Phase Space Density.", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html", "members_class" : [{"label" : "f_t", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis.f_t", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#f_t:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f_ll", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis.f_ll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#f_ll:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f_l", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis.f_l", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#f_l:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis.f", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#f:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis#<init>", "error" : "unsupported entity"}, {"label" : "::", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.::", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#::(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "+", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#+(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "operator_basis", "tail" : "(diffusionField: DataPipe[(Double, Double), Double], diffusionFieldGradL: DataPipe[(Double, Double), Double], lossTimeScale: DataPipe[(Double, Double), Double]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.operator_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#operator_basis(diffusionField:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],diffusionFieldGradL:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],lossTimeScale:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]):io.github.mandar2812.dynaml.pipes.Basis[(Double,Double)]", "kind" : "def"}, {"label" : "*", "tail" : "(other: Basis[J]): Basis[((Double, Double), J)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#*[J](other:io.github.mandar2812.dynaml.pipes.Basis[J]):io.github.mandar2812.dynaml.pipes.Basis[(I,J)]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipe[DenseVector[Double], DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#>(other:io.github.mandar2812.dynaml.pipes.DataPipe[breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]]):io.github.mandar2812.dynaml.pipes.Basis[I]", "kind" : "def"}, {"label" : "run", "tail" : "(x: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#run(x:I):breeze.linalg.DenseVector[Double]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[(Double, Double), OtherSource, (DenseVector[Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[(Double, Double), DenseVector[Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DenseVector[Double], Further]): ComposedPipe[(Double, Double), DenseVector[Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dimension_t", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis.dimension_t", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#dimension_t:Int", "kind" : "abstract val"}, {"label" : "dimension_l", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis.dimension_l", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#dimension_l:Int", "kind" : "abstract val"}, {"label" : "dimension", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.dimension", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html#dimension:Int", "kind" : "abstract val"}], "members_object" : [{"label" : "chebyshev_laguerre_basis", "tail" : "(lShellLimits: (Double, Double), nL: Int, timeLimits: (Double, Double), nT: Int, alpha: Double, biasFlag: Boolean, kind: Int): HybridPSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis.chebyshev_laguerre_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#chebyshev_laguerre_basis(lShellLimits:(Double,Double),nL:Int,timeLimits:(Double,Double),nT:Int,alpha:Double,biasFlag:Boolean,kind:Int):io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis", "kind" : "def"}, {"label" : "chebyshev_hermite_basis", "tail" : "(lShellLimits: (Double, Double), nL: Int, timeLimits: (Double, Double), nT: Int, logScale: Boolean, biasFlag: Boolean, kind: Int): HybridPSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis.chebyshev_hermite_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#chebyshev_hermite_basis(lShellLimits:(Double,Double),nL:Int,timeLimits:(Double,Double),nT:Int,logScale:Boolean,biasFlag:Boolean,kind:Int):io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis", "kind" : "def"}, {"label" : "chebyshev_space_time_basis", "tail" : "(lShellLimits: (Double, Double), nL: Int, timeLimits: (Double, Double), nT: Int, logScale: Boolean, biasFlag: Boolean, kind: (Int, Int)): HybridPSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis.chebyshev_space_time_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#chebyshev_space_time_basis(lShellLimits:(Double,Double),nL:Int,timeLimits:(Double,Double),nT:Int,logScale:Boolean,biasFlag:Boolean,kind:(Int,Int)):io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis", "kind" : "def"}, {"label" : "chebyshev_imq_basis", "tail" : "(beta_t: Double, lShellLimits: (Double, Double), nL: Int, timeLimits: (Double, Double), nT: Int, logScale: Boolean, biasFlag: Boolean, kind: Int): HybridPSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis.chebyshev_imq_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#chebyshev_imq_basis(beta_t:Double,lShellLimits:(Double,Double),nL:Int,timeLimits:(Double,Double),nT:Int,logScale:Boolean,biasFlag:Boolean,kind:Int):io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis", "kind" : "def"}, {"label" : "chebyshev_basis", "tail" : "(domainLimits: (Double, Double), maxDegree: Int, biasFlag: Boolean, kind: Int): (Basis[Double], Basis[Double], Basis[Double])", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.HybridPSDBasis.chebyshev_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#chebyshev_basis(domainLimits:(Double,Double),maxDegree:Int,biasFlag:Boolean,kind:Int):(io.github.mandar2812.dynaml.pipes.Basis[Double],io.github.mandar2812.dynaml.pipes.Basis[Double],io.github.mandar2812.dynaml.pipes.Basis[Double])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/HybridPSDBasis.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.implicits", "shortDescription" : "Defines implicit transformations commonly used inradial diffusion analysis.", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html", "members_object" : [{"label" : "paramsEncMap", "tail" : "(prefix: String): Encoder[Map[String, Double], (Double, Double, Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.implicits.paramsEncMap", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#paramsEncMap(prefix:String):io.github.mandar2812.dynaml.pipes.Encoder[Map[String,Double],(Double,Double,Double,Double)]", "kind" : "def"}, {"label" : "paramsEncMap", "tail" : ": Encoder[Map[String, Double], (Double, Double, Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.implicits.paramsEncMap", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#paramsEncMap:io.github.mandar2812.dynaml.pipes.Encoder[Map[String,Double],(Double,Double,Double,Double)]", "kind" : "implicit val"}, {"label" : "paramsEncArr", "tail" : ": Encoder[Array[Double], (Double, Double, Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.implicits.paramsEncArr", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#paramsEncArr:io.github.mandar2812.dynaml.pipes.Encoder[Array[Double],(Double,Double,Double,Double)]", "kind" : "implicit val"}, {"label" : "paramsEncList", "tail" : ": Encoder[List[Double], (Double, Double, Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.implicits.paramsEncList", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#paramsEncList:io.github.mandar2812.dynaml.pipes.Encoder[List[Double],(Double,Double,Double,Double)]", "kind" : "implicit val"}, {"label" : "paramsEncSeq", "tail" : ": Encoder[Seq[Double], (Double, Double, Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.implicits.paramsEncSeq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#paramsEncSeq:io.github.mandar2812.dynaml.pipes.Encoder[Seq[Double],(Double,Double,Double,Double)]", "kind" : "implicit val"}, {"label" : "paramsEncBDV", "tail" : ": Encoder[DenseVector[Double], (Double, Double, Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.implicits.paramsEncBDV", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#paramsEncBDV:io.github.mandar2812.dynaml.pipes.Encoder[breeze.linalg.DenseVector[Double],(Double,Double,Double,Double)]", "kind" : "implicit val"}, {"label" : "praramsEncTuple4", "tail" : ": Encoder[(Double, Double, Double, Double), (Double, Double, Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.implicits.praramsEncTuple4", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#praramsEncTuple4:io.github.mandar2812.dynaml.pipes.Encoder[(Double,Double,Double,Double),(Double,Double,Double,Double)]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/implicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.InverseMQPSDBasis", "shortDescription" : "Implements a inverse multi-quadric radial basis expansionfor the phase space density with nodes placed on a regularspace time mesh.", "members_class" : [{"label" : "f_t", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.InverseMQPSDBasis.f_t", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#f_t:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f_ll", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.InverseMQPSDBasis.f_ll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#f_ll:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f_l", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.InverseMQPSDBasis.f_l", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#f_l:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.InverseMQPSDBasis.f", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#f:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "field", "tail" : ": InnerProductSpace[(Double, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.InverseMQPSDBasis.field", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#field:spire.algebra.InnerProductSpace[(Double,Double),Double]", "kind" : "val"}, {"label" : "activation", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.InverseMQPSDBasis.activation", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#activation:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.InverseMQPSDBasis#<init>", "error" : "unsupported entity"}, {"label" : "indexEncoder", "tail" : ": Encoder[(Int, Int), Int]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.indexEncoder", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#indexEncoder:io.github.mandar2812.dynaml.pipes.Encoder[(Int,Int),Int]", "kind" : "val"}, {"label" : "dimensionT", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimensionT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#dimensionT:Int", "kind" : "val"}, {"label" : "dimensionL", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimensionL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#dimensionL:Int", "kind" : "val"}, {"label" : "dimension", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimension", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#dimension:Int", "kind" : "val"}, {"label" : "_centers", "tail" : "(): Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis._centers", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#_centers:Seq[(Double,Double)]", "kind" : "def"}, {"label" : "scales", "tail" : "(): Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scales", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#scales:Seq[(Double,Double)]", "kind" : "def"}, {"label" : "centers", "tail" : ": Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.centers", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#centers:Seq[(Double,Double)]", "kind" : "val"}, {"label" : "tupleListEnc", "tail" : ": Encoder[(Int, Int), List[Int]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.tupleListEnc", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#tupleListEnc:io.github.mandar2812.dynaml.pipes.Encoder[(Int,Int),List[Int]]", "kind" : "val"}, {"label" : "scalesT", "tail" : "(): Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scalesT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#scalesT:Seq[Double]", "kind" : "def"}, {"label" : "scalesL", "tail" : "(): Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scalesL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#scalesL:Seq[Double]", "kind" : "def"}, {"label" : "deltaT", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.deltaT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#deltaT:Double", "kind" : "val"}, {"label" : "deltaL", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.deltaL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#deltaL:Double", "kind" : "val"}, {"label" : "tSeq", "tail" : ": Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.tSeq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#tSeq:Seq[Double]", "kind" : "val"}, {"label" : "lSeq", "tail" : ": Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.lSeq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#lSeq:Seq[Double]", "kind" : "val"}, {"label" : "mult", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.mult", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#mult:Double", "kind" : "var"}, {"label" : "logScaleFlags", "tail" : ": (Boolean, Boolean)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.logScaleFlags", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#logScaleFlags:(Boolean,Boolean)", "kind" : "val"}, {"label" : "nT", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.nT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#nT:Int", "kind" : "val"}, {"label" : "timeLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.timeLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#timeLimits:(Double,Double)", "kind" : "val"}, {"label" : "nL", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.nL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#nL:Int", "kind" : "val"}, {"label" : "lShellLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.lShellLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#lShellLimits:(Double,Double)", "kind" : "val"}, {"label" : "::", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.::", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#::(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "+", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#+(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "operator_basis", "tail" : "(diffusionField: DataPipe[(Double, Double), Double], diffusionFieldGradL: DataPipe[(Double, Double), Double], lossTimeScale: DataPipe[(Double, Double), Double]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.operator_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#operator_basis(diffusionField:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],diffusionFieldGradL:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],lossTimeScale:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]):io.github.mandar2812.dynaml.pipes.Basis[(Double,Double)]", "kind" : "def"}, {"label" : "*", "tail" : "(other: Basis[J]): Basis[((Double, Double), J)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#*[J](other:io.github.mandar2812.dynaml.pipes.Basis[J]):io.github.mandar2812.dynaml.pipes.Basis[(I,J)]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipe[DenseVector[Double], DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#>(other:io.github.mandar2812.dynaml.pipes.DataPipe[breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]]):io.github.mandar2812.dynaml.pipes.Basis[I]", "kind" : "def"}, {"label" : "run", "tail" : "(x: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#run(x:I):breeze.linalg.DenseVector[Double]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[(Double, Double), OtherSource, (DenseVector[Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[(Double, Double), DenseVector[Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DenseVector[Double], Further]): ComposedPipe[(Double, Double), DenseVector[Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/InverseMQPSDBasis.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel", "shortDescription" : "Inverse inference over plasma radial diffusion parameters.", "members_class" : [{"label" : "energy", "tail" : "(h: Map[String, Double], options: Map[String, String]): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.energy", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#energy(h:Map[String,Double],options:Map[String,String]):Double", "kind" : "def"}, {"label" : "getGalerkinParams", "tail" : "(h: Map[String, Double]): (DenseVector[Double], DenseMatrix[Double], DenseMatrix[Double])", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.getGalerkinParams", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#getGalerkinParams(h:Map[String,Double]):(breeze.linalg.DenseVector[Double],breeze.linalg.DenseMatrix[Double],breeze.linalg.DenseMatrix[Double])", "kind" : "def"}, {"label" : "setState", "tail" : "(h: Map[String, Double]): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.setState", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#setState(h:Map[String,Double]):Unit", "kind" : "def"}, {"label" : "effective_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.effective_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#effective_state:Map[String,Double]", "kind" : "def"}, {"label" : "effective_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.effective_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#effective_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "block_++", "tail" : "(h: String*): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.block_++", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#block_++(h:String*):Unit", "kind" : "def"}, {"label" : "block", "tail" : "(hyp: String*): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.block", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#block(hyp:String*):Unit", "kind" : "def"}, {"label" : "blocked_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.blocked_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#blocked_hyper_parameters:List[String]", "kind" : "var"}, {"label" : "current_state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.current_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#current_state:Map[String,Double]", "kind" : "var"}, {"label" : "hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#hyper_parameters:List[String]", "kind" : "var"}, {"label" : "operator_state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.operator_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#operator_state:Map[String,Double]", "kind" : "var"}, {"label" : "_operator_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel._operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#_operator_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "operator_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#operator_hyper_parameters:List[String]", "kind" : "val"}, {"label" : "covariance", "tail" : ": SE1dExtRadDiffusionKernel", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.covariance", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#covariance:io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel", "kind" : "val"}, {"label" : "psd_mean", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.psd_mean", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#psd_mean:Double", "kind" : "val"}, {"label" : "num_colocation_points", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.num_colocation_points", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#num_colocation_points:Int", "kind" : "val"}, {"label" : "num_observations", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.num_observations", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#num_observations:Int", "kind" : "val"}, {"label" : "injection_process", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.injection_process", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#injection_process:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "baseInjNoiseID", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.baseInjNoiseID", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#baseInjNoiseID:String", "kind" : "val"}, {"label" : "baseNoiseID", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.baseNoiseID", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#baseNoiseID:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.logger", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel#<init>", "error" : "unsupported entity"}, {"label" : "colocation_points", "tail" : ": Stream[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.colocation_points", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#colocation_points:Stream[(Double,Double)]", "kind" : "val"}, {"label" : "psd_data", "tail" : ": Stream[((Double, Double), Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.psd_data", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#psd_data:Stream[((Double,Double),Double)]", "kind" : "val"}, {"label" : "noise_injection", "tail" : ": LocalScalarKernel[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.noise_injection", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#noise_injection:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(Double,Double)]", "kind" : "val"}, {"label" : "noise_psd", "tail" : ": LocalScalarKernel[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.noise_psd", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#noise_psd:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(Double,Double)]", "kind" : "val"}, {"label" : "Kp", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.KernelRadialDiffusionModel.Kp", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : "persist", "tail" : "(state: Map[String, Double]): Unit", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable.persist", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#persist(state:Map[String,Double]):Unit", "kind" : "def"}, {"label" : "_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable._hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "_current_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable._current_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#_current_state:Map[String,Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/KernelRadialDiffusionModel.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend", "shortDescription" : "Specifies a Brautingham &amp; Albert typetrend function for radial diffusion priors.", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html", "members_class" : [{"label" : "grad", "tail" : "(): Seq[MAGProcess[T]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.grad", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#grad:Seq[io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGProcess[T]]", "kind" : "def"}, {"label" : "gradL", "tail" : "(): MAGProcess[T]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.gradL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#gradL:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGProcess[T]", "kind" : "def"}, {"label" : "run", "tail" : "(data: T): DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#run(data:T):io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend#<init>", "error" : "unsupported entity"}, {"label" : "transform", "tail" : ": Encoder[T, (Double, Double, Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.transform", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#transform:io.github.mandar2812.dynaml.pipes.Encoder[T,(Double,Double,Double,Double)]", "kind" : "val"}, {"label" : "Kp", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.Kp", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : ">>", "tail" : "(next: DataPipe[Double, Further]): MetaPipe[T, (Double, Double), Further]", "member" : "io.github.mandar2812.dynaml.pipes.MetaPipe.>>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#>>[Further](next:io.github.mandar2812.dynaml.pipes.DataPipe[Destination,Further]):io.github.mandar2812.dynaml.pipes.MetaPipe[Source,Intermediate,Further]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): (T) ⇒ DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[T, OtherSource, (DataPipe[(Double, Double), Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[T, DataPipe[(Double, Double), Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DataPipe[(Double, Double), Double]]): Basis[T]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DataPipe[(Double, Double), Double], Further]): ComposedPipe[T, DataPipe[(Double, Double), Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getEncoder", "tail" : "(prefix: String): MagConfigEncoding", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.getEncoder", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#getEncoder(prefix:String):io.github.mandar2812.PlasmaML.utils.MagConfigEncoding", "kind" : "def"}, {"label" : "MAGParams", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGParams", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#MAGParams=(Double,Double,Double,Double)", "kind" : "type"}, {"label" : "MAGProcess", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGProcess", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#MAGProcess[T]=io.github.mandar2812.dynaml.pipes.MetaPipe[T,(Double,Double),Double]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagnetosphericProcessTrend.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html", "members_class" : [{"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis#<init>", "error" : "unsupported entity"}, {"label" : "*", "tail" : "(other: Basis[J]): Basis[(Double, J)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#*[J](other:io.github.mandar2812.dynaml.pipes.Basis[J]):io.github.mandar2812.dynaml.pipes.Basis[(I,J)]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipe[DenseVector[Double], DenseVector[Double]]): Basis[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#>(other:io.github.mandar2812.dynaml.pipes.DataPipe[breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]]):io.github.mandar2812.dynaml.pipes.Basis[I]", "kind" : "def"}, {"label" : "run", "tail" : "(x: Double): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#run(x:I):breeze.linalg.DenseVector[Double]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): (Double) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[Double, OtherSource, (DenseVector[Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[Double, DenseVector[Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DenseVector[Double]]): Basis[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DenseVector[Double], Further]): ComposedPipe[Double, DenseVector[Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: Double): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "J", "tail" : "(x: Double): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.analysis.DifferentiableMap.J", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#J(x:S):J", "kind" : "abstract def"}, {"label" : "f", "tail" : ": (Double) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.f", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html#f:I=>breeze.linalg.DenseVector[Double]", "kind" : "abstract val"}], "members_object" : [{"label" : "laguerre_basis", "tail" : ": (Int, Double) ⇒ MagParamBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis.laguerre_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#laguerre_basis:(Int,Double)=>io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis", "kind" : "val"}, {"label" : "hermite_basis", "tail" : ": (Int) ⇒ MagParamBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis.hermite_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#hermite_basis:Int=>io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis", "kind" : "val"}, {"label" : "chebyshev_basis", "tail" : ": (Int) ⇒ MagParamBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis.chebyshev_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#chebyshev_basis:Int=>io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis", "kind" : "val"}, {"label" : "polynomial_basis", "tail" : ": (Int) ⇒ MagParamBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis.polynomial_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#polynomial_basis:Int=>io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis", "kind" : "val"}, {"label" : "apply", "tail" : "(func: (Double) ⇒ DenseVector[Double], grad_func: (Double) ⇒ DenseVector[Double]): MagParamBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#apply(func:Double=>breeze.linalg.DenseVector[Double],grad_func:Double=>breeze.linalg.DenseVector[Double]):io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagParamBasis.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion", "shortDescription" : "Implementation of a discrete radial diffusion system,parameterised by magnetospheric processes.", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html", "members_class" : [{"label" : "sensitivity", "tail" : "(parameter: Parameter)(diffusion_params: T, loss_params: T, injection_params: T)(f0: (Double) ⇒ Double): Map[String, Stream[DenseVector[Double]]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.sensitivity", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#sensitivity(parameter:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.Parameter)(diffusion_params:T,loss_params:T,injection_params:T)(f0:Double=>Double):Map[String,Stream[breeze.linalg.DenseVector[Double]]]", "kind" : "def"}, {"label" : "sensitivity", "tail" : "(parameter: Parameter, diffusion_params: T, loss_params: T, injection_params: T, f0: DenseVector[Double]): Map[String, Stream[DenseVector[Double]]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.sensitivity", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#sensitivity(parameter:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.Parameter,diffusion_params:T,loss_params:T,injection_params:T,f0:breeze.linalg.DenseVector[Double]):Map[String,Stream[breeze.linalg.DenseVector[Double]]]", "kind" : "def"}, {"label" : "solve", "tail" : "(diffusion_params: T, loss_params: T, injection_params: T)(f0: (Double) ⇒ Double): Stream[DenseVector[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.solve", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#solve(diffusion_params:T,loss_params:T,injection_params:T)(f0:Double=>Double):Stream[breeze.linalg.DenseVector[Double]]", "kind" : "def"}, {"label" : "solve", "tail" : "(diffusion_params: T, loss_params: T, injection_params: T, f0: DenseVector[Double]): Stream[DenseVector[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.solve", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#solve(diffusion_params:T,loss_params:T,injection_params:T,f0:breeze.linalg.DenseVector[Double]):Stream[breeze.linalg.DenseVector[Double]]", "kind" : "def"}, {"label" : "stencil", "tail" : ": (Seq[Double], Seq[Double])", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.stencil", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#stencil:(Seq[Double],Seq[Double])", "kind" : "lazy val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(diffusion: MagnetosphericProcessTrend[T], lossRate: MagnetosphericProcessTrend[T], injection: MagnetosphericProcessTrend[T])(lShellLimits: (Double, Double), timeLimits: (Double, Double), nL: Int, nT: Int): MagRadialDiffusion[T]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#apply[T](diffusion:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend[T],lossRate:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend[T],injection:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend[T])(lShellLimits:(Double,Double),timeLimits:(Double,Double),nL:Int,nT:Int):io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion[T]", "kind" : "def"}, {"label" : "DiffusionField", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.DiffusionField", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#DiffusionFieldextendsMagRadialDiffusion.ParameterwithProductwithSerializable", "kind" : "case class"}, {"label" : "LossRate", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.LossRate", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#LossRateextendsMagRadialDiffusion.ParameterwithProductwithSerializable", "kind" : "case class"}, {"label" : "Injection", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.Injection", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#InjectionextendsMagRadialDiffusion.ParameterwithProductwithSerializable", "kind" : "case class"}, {"label" : "Parameter", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagRadialDiffusion.Parameter", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#ParameterextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagRadialDiffusion.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html", "members_class" : [{"label" : "transform", "tail" : ": MagConfigEncoding", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend.transform", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#transform:io.github.mandar2812.PlasmaML.utils.MagConfigEncoding", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend#<init>", "error" : "unsupported entity"}, {"label" : "prefix", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend.prefix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#prefix:String", "kind" : "val"}, {"label" : "Kp", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend.Kp", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : "grad", "tail" : "(): Seq[MAGProcess[Map[String, Double]]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.grad", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#grad:Seq[io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGProcess[T]]", "kind" : "def"}, {"label" : "gradL", "tail" : "(): MAGProcess[Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.gradL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#gradL:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGProcess[T]", "kind" : "def"}, {"label" : "run", "tail" : "(data: Map[String, Double]): DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#run(data:T):io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]", "kind" : "def"}, {"label" : ">>", "tail" : "(next: DataPipe[Double, Further]): MetaPipe[Map[String, Double], (Double, Double), Further]", "member" : "io.github.mandar2812.dynaml.pipes.MetaPipe.>>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#>>[Further](next:io.github.mandar2812.dynaml.pipes.DataPipe[Destination,Further]):io.github.mandar2812.dynaml.pipes.MetaPipe[Source,Intermediate,Further]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): (Map[String, Double]) ⇒ DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[Map[String, Double], OtherSource, (DataPipe[(Double, Double), Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[Map[String, Double], DataPipe[(Double, Double), Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DataPipe[(Double, Double), Double]]): Basis[Map[String, Double]]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DataPipe[(Double, Double), Double], Further]): ComposedPipe[Map[String, Double], DataPipe[(Double, Double), Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: Map[String, Double]): DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(Kp: DataPipe[Double, Double], prefix: String): MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#apply(Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double],prefix:String):io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MagTrend.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MQPSDBasis", "shortDescription" : "Implements a multi-quadric radial basis expansionfor the phase space density with nodes placed on aregular space time mesh.", "members_class" : [{"label" : "f_t", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MQPSDBasis.f_t", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#f_t:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f_ll", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MQPSDBasis.f_ll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#f_ll:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f_l", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MQPSDBasis.f_l", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#f_l:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "f", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MQPSDBasis.f", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#f:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "val"}, {"label" : "field", "tail" : ": InnerProductSpace[(Double, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MQPSDBasis.field", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#field:spire.algebra.InnerProductSpace[(Double,Double),Double]", "kind" : "val"}, {"label" : "activation", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MQPSDBasis.activation", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#activation:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MQPSDBasis#<init>", "error" : "unsupported entity"}, {"label" : "indexEncoder", "tail" : ": Encoder[(Int, Int), Int]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.indexEncoder", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#indexEncoder:io.github.mandar2812.dynaml.pipes.Encoder[(Int,Int),Int]", "kind" : "val"}, {"label" : "dimensionT", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimensionT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#dimensionT:Int", "kind" : "val"}, {"label" : "dimensionL", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimensionL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#dimensionL:Int", "kind" : "val"}, {"label" : "dimension", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimension", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#dimension:Int", "kind" : "val"}, {"label" : "_centers", "tail" : "(): Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis._centers", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#_centers:Seq[(Double,Double)]", "kind" : "def"}, {"label" : "scales", "tail" : "(): Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scales", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#scales:Seq[(Double,Double)]", "kind" : "def"}, {"label" : "centers", "tail" : ": Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.centers", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#centers:Seq[(Double,Double)]", "kind" : "val"}, {"label" : "tupleListEnc", "tail" : ": Encoder[(Int, Int), List[Int]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.tupleListEnc", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#tupleListEnc:io.github.mandar2812.dynaml.pipes.Encoder[(Int,Int),List[Int]]", "kind" : "val"}, {"label" : "scalesT", "tail" : "(): Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scalesT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#scalesT:Seq[Double]", "kind" : "def"}, {"label" : "scalesL", "tail" : "(): Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scalesL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#scalesL:Seq[Double]", "kind" : "def"}, {"label" : "deltaT", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.deltaT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#deltaT:Double", "kind" : "val"}, {"label" : "deltaL", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.deltaL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#deltaL:Double", "kind" : "val"}, {"label" : "tSeq", "tail" : ": Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.tSeq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#tSeq:Seq[Double]", "kind" : "val"}, {"label" : "lSeq", "tail" : ": Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.lSeq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#lSeq:Seq[Double]", "kind" : "val"}, {"label" : "mult", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.mult", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#mult:Double", "kind" : "var"}, {"label" : "logScaleFlags", "tail" : ": (Boolean, Boolean)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.logScaleFlags", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#logScaleFlags:(Boolean,Boolean)", "kind" : "val"}, {"label" : "nT", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.nT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#nT:Int", "kind" : "val"}, {"label" : "timeLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.timeLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#timeLimits:(Double,Double)", "kind" : "val"}, {"label" : "nL", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.nL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#nL:Int", "kind" : "val"}, {"label" : "lShellLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.lShellLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#lShellLimits:(Double,Double)", "kind" : "val"}, {"label" : "::", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.::", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#::(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "+", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#+(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "operator_basis", "tail" : "(diffusionField: DataPipe[(Double, Double), Double], diffusionFieldGradL: DataPipe[(Double, Double), Double], lossTimeScale: DataPipe[(Double, Double), Double]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.operator_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#operator_basis(diffusionField:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],diffusionFieldGradL:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],lossTimeScale:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]):io.github.mandar2812.dynaml.pipes.Basis[(Double,Double)]", "kind" : "def"}, {"label" : "*", "tail" : "(other: Basis[J]): Basis[((Double, Double), J)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#*[J](other:io.github.mandar2812.dynaml.pipes.Basis[J]):io.github.mandar2812.dynaml.pipes.Basis[(I,J)]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipe[DenseVector[Double], DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#>(other:io.github.mandar2812.dynaml.pipes.DataPipe[breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]]):io.github.mandar2812.dynaml.pipes.Basis[I]", "kind" : "def"}, {"label" : "run", "tail" : "(x: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#run(x:I):breeze.linalg.DenseVector[Double]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[(Double, Double), OtherSource, (DenseVector[Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[(Double, Double), DenseVector[Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DenseVector[Double], Further]): ComposedPipe[(Double, Double), DenseVector[Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/MQPSDBasis.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "shortDescription" : "A basis function expansion (&phi;) of the plasmaPhase Space Density (&fnof;) in the radial diffusionsystem.", "members_class" : [{"label" : "::", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.::", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#::(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "+", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#+(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "operator_basis", "tail" : "(diffusionField: DataPipe[(Double, Double), Double], diffusionFieldGradL: DataPipe[(Double, Double), Double], lossTimeScale: DataPipe[(Double, Double), Double]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.operator_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#operator_basis(diffusionField:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],diffusionFieldGradL:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],lossTimeScale:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]):io.github.mandar2812.dynaml.pipes.Basis[(Double,Double)]", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis#<init>", "error" : "unsupported entity"}, {"label" : "*", "tail" : "(other: Basis[J]): Basis[((Double, Double), J)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#*[J](other:io.github.mandar2812.dynaml.pipes.Basis[J]):io.github.mandar2812.dynaml.pipes.Basis[(I,J)]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipe[DenseVector[Double], DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#>(other:io.github.mandar2812.dynaml.pipes.DataPipe[breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]]):io.github.mandar2812.dynaml.pipes.Basis[I]", "kind" : "def"}, {"label" : "run", "tail" : "(x: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#run(x:I):breeze.linalg.DenseVector[Double]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[(Double, Double), OtherSource, (DenseVector[Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[(Double, Double), DenseVector[Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DenseVector[Double], Further]): ComposedPipe[(Double, Double), DenseVector[Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "f_t", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.f_t", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#f_t:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "abstract val"}, {"label" : "f_ll", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.f_ll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#f_ll:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "abstract val"}, {"label" : "f_l", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.f_l", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#f_l:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "abstract val"}, {"label" : "dimension", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.dimension", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#dimension:Int", "kind" : "abstract val"}, {"label" : "f", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.f", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html#f:I=>breeze.linalg.DenseVector[Double]", "kind" : "abstract val"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDBasis.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis", "shortDescription" : "A top level class that can be extended to implementvarious radial basis function based PSD expansions.", "members_class" : [{"label" : "indexEncoder", "tail" : ": Encoder[(Int, Int), Int]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.indexEncoder", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#indexEncoder:io.github.mandar2812.dynaml.pipes.Encoder[(Int,Int),Int]", "kind" : "val"}, {"label" : "dimensionT", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimensionT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#dimensionT:Int", "kind" : "val"}, {"label" : "dimensionL", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimensionL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#dimensionL:Int", "kind" : "val"}, {"label" : "dimension", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.dimension", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#dimension:Int", "kind" : "val"}, {"label" : "_centers", "tail" : "(): Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis._centers", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#_centers:Seq[(Double,Double)]", "kind" : "def"}, {"label" : "scales", "tail" : "(): Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scales", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#scales:Seq[(Double,Double)]", "kind" : "def"}, {"label" : "centers", "tail" : ": Seq[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.centers", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#centers:Seq[(Double,Double)]", "kind" : "val"}, {"label" : "tupleListEnc", "tail" : ": Encoder[(Int, Int), List[Int]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.tupleListEnc", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#tupleListEnc:io.github.mandar2812.dynaml.pipes.Encoder[(Int,Int),List[Int]]", "kind" : "val"}, {"label" : "scalesT", "tail" : "(): Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scalesT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#scalesT:Seq[Double]", "kind" : "def"}, {"label" : "scalesL", "tail" : "(): Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.scalesL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#scalesL:Seq[Double]", "kind" : "def"}, {"label" : "deltaT", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.deltaT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#deltaT:Double", "kind" : "val"}, {"label" : "deltaL", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.deltaL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#deltaL:Double", "kind" : "val"}, {"label" : "tSeq", "tail" : ": Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.tSeq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#tSeq:Seq[Double]", "kind" : "val"}, {"label" : "lSeq", "tail" : ": Seq[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.lSeq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#lSeq:Seq[Double]", "kind" : "val"}, {"label" : "mult", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.mult", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#mult:Double", "kind" : "var"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis#<init>", "error" : "unsupported entity"}, {"label" : "logScaleFlags", "tail" : ": (Boolean, Boolean)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.logScaleFlags", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#logScaleFlags:(Boolean,Boolean)", "kind" : "val"}, {"label" : "nT", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.nT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#nT:Int", "kind" : "val"}, {"label" : "timeLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.timeLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#timeLimits:(Double,Double)", "kind" : "val"}, {"label" : "nL", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.nL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#nL:Int", "kind" : "val"}, {"label" : "lShellLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDRadialBasis.lShellLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#lShellLimits:(Double,Double)", "kind" : "val"}, {"label" : "::", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.::", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#::(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "+", "tail" : "(other: PSDBasis): PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#+(other:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis):io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "def"}, {"label" : "operator_basis", "tail" : "(diffusionField: DataPipe[(Double, Double), Double], diffusionFieldGradL: DataPipe[(Double, Double), Double], lossTimeScale: DataPipe[(Double, Double), Double]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.operator_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#operator_basis(diffusionField:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],diffusionFieldGradL:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double],lossTimeScale:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]):io.github.mandar2812.dynaml.pipes.Basis[(Double,Double)]", "kind" : "def"}, {"label" : "*", "tail" : "(other: Basis[J]): Basis[((Double, Double), J)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#*[J](other:io.github.mandar2812.dynaml.pipes.Basis[J]):io.github.mandar2812.dynaml.pipes.Basis[(I,J)]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipe[DenseVector[Double], DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#>(other:io.github.mandar2812.dynaml.pipes.DataPipe[breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]]):io.github.mandar2812.dynaml.pipes.Basis[I]", "kind" : "def"}, {"label" : "run", "tail" : "(x: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#run(x:I):breeze.linalg.DenseVector[Double]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[(Double, Double), OtherSource, (DenseVector[Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[(Double, Double), DenseVector[Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DenseVector[Double]]): Basis[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DenseVector[Double], Further]): ComposedPipe[(Double, Double), DenseVector[Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: (Double, Double)): DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "f_t", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.f_t", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#f_t:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "abstract val"}, {"label" : "f_ll", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.f_ll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#f_ll:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "abstract val"}, {"label" : "f_l", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis.f_l", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#f_l:((Double,Double))=>breeze.linalg.DenseVector[Double]", "kind" : "abstract val"}, {"label" : "f", "tail" : ": ((Double, Double)) ⇒ DenseVector[Double]", "member" : "io.github.mandar2812.dynaml.pipes.Basis.f", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html#f:I=>breeze.linalg.DenseVector[Double]", "kind" : "abstract val"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/PSDRadialBasis.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion", "shortDescription" : "Implementation of a discrete radial diffusion system.", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html", "members_object" : [{"label" : "to_input_output_pairs", "tail" : "(lShellLimits: (Double, Double), timeLimits: (Double, Double), nL: Int, nT: Int)(solution: Stream[DenseVector[Double]]): Seq[((Double, Double), Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.to_input_output_pairs", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#to_input_output_pairs(lShellLimits:(Double,Double),timeLimits:(Double,Double),nL:Int,nT:Int)(solution:Stream[breeze.linalg.DenseVector[Double]]):Seq[((Double,Double),Double)]", "kind" : "def"}, {"label" : "error", "tail" : "(referenceSolution: Seq[DenseVector[Double]])(computedSolution: Seq[DenseVector[Double]]): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.error", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#error(referenceSolution:Seq[breeze.linalg.DenseVector[Double]])(computedSolution:Seq[breeze.linalg.DenseVector[Double]]):Double", "kind" : "def"}, {"label" : "error", "tail" : "(referenceSolution: DenseMatrix[Double])(computedSolution: DenseMatrix[Double]): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.error", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#error(referenceSolution:breeze.linalg.DenseMatrix[Double])(computedSolution:breeze.linalg.DenseMatrix[Double]):Double", "kind" : "def"}, {"label" : "getModelStackParams", "tail" : "(lShellLimits: (Double, Double), timeLimits: (Double, Double), nL: Int, nT: Int)(injectionProfile: DenseMatrix[Double], diffusionProfile: DenseMatrix[Double], lossProfile: DenseMatrix[Double]): StackParameters", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.getModelStackParams", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#getModelStackParams(lShellLimits:(Double,Double),timeLimits:(Double,Double),nL:Int,nT:Int)(injectionProfile:breeze.linalg.DenseMatrix[Double],diffusionProfile:breeze.linalg.DenseMatrix[Double],lossProfile:breeze.linalg.DenseMatrix[Double]):io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.StackParameters", "kind" : "def"}, {"label" : "conv", "tail" : "(filter: (Int, Int) ⇒ Double)(data: DenseMatrix[Double]): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.conv", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#conv(filter:(Int,Int)=>Double)(data:breeze.linalg.DenseMatrix[Double]):Double", "kind" : "def"}, {"label" : "forwardConvLossProfile", "tail" : "(center_i: Int, center_j: Int)(i: Int, j: Int): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.forwardConvLossProfile", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#forwardConvLossProfile(center_i:Int,center_j:Int)(i:Int,j:Int):Double", "kind" : "def"}, {"label" : "forwardConvBoundaryFlux", "tail" : "(center_i: Int, center_j: Int)(i: Int, j: Int): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.forwardConvBoundaryFlux", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#forwardConvBoundaryFlux(center_i:Int,center_j:Int)(i:Int,j:Int):Double", "kind" : "def"}, {"label" : "backwardConvDiff", "tail" : "(center_i: Int, center_j: Int)(i: Int, j: Int): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.backwardConvDiff", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#backwardConvDiff(center_i:Int,center_j:Int)(i:Int,j:Int):Double", "kind" : "def"}, {"label" : "forwardConvDiff", "tail" : "(center_i: Int, center_j: Int)(i: Int, j: Int): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.forwardConvDiff", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#forwardConvDiff(center_i:Int,center_j:Int)(i:Int,j:Int):Double", "kind" : "def"}, {"label" : "haar1dFilter", "tail" : "(center: Int)(i: Int): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.haar1dFilter", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#haar1dFilter(center:Int)(i:Int):Double", "kind" : "def"}, {"label" : "backward1dFilter", "tail" : "(center_i: Int)(i: Int): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.backward1dFilter", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#backward1dFilter(center_i:Int)(i:Int):Double", "kind" : "def"}, {"label" : "filter1d", "tail" : "(center_i: Int)(i: Int): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.filter1d", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#filter1d(center_i:Int)(i:Int):Double", "kind" : "def"}, {"label" : "buildStencil", "tail" : "(lShellLimits: (Double, Double), nL: Int, timeLimits: (Double, Double), nT: Int, logScaleFlags: (Boolean, Boolean)): (Seq[Double], Seq[Double])", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.buildStencil", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#buildStencil(lShellLimits:(Double,Double),nL:Int,timeLimits:(Double,Double),nT:Int,logScaleFlags:(Boolean,Boolean)):(Seq[Double],Seq[Double])", "kind" : "def"}, {"label" : "StackParameters", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.StackParameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#StackParameters=Stream[(Seq[Seq[Double]],Seq[Seq[Double]],breeze.linalg.DenseVector[Double])]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "solve", "tail" : "(injection: (Double, Double) ⇒ Double, diffusionField: (Double, Double) ⇒ Double, loss: (Double, Double) ⇒ Double)(f0: (Double) ⇒ Double): Stream[DenseVector[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.solve", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#solve(injection:(Double,Double)=>Double,diffusionField:(Double,Double)=>Double,loss:(Double,Double)=>Double)(f0:Double=>Double):Stream[breeze.linalg.DenseVector[Double]]", "kind" : "def"}, {"label" : "solve", "tail" : "(injectionProfile: DenseMatrix[Double], diffusionProfile: DenseMatrix[Double], lossProfile: DenseMatrix[Double])(f0: DenseVector[Double]): Stream[DenseVector[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.solve", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#solve(injectionProfile:breeze.linalg.DenseMatrix[Double],diffusionProfile:breeze.linalg.DenseMatrix[Double],lossProfile:breeze.linalg.DenseMatrix[Double])(f0:breeze.linalg.DenseVector[Double]):Stream[breeze.linalg.DenseVector[Double]]", "kind" : "def"}, {"label" : "getComputationStack", "tail" : "(): DataPipe3[DenseMatrix[Double], DenseMatrix[Double], DenseMatrix[Double], LazyNeuralStack[(Seq[Seq[Double]], Seq[Seq[Double]], DenseVector[Double]), DenseVector[Double]]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.getComputationStack", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#getComputationStack:io.github.mandar2812.dynaml.pipes.DataPipe3[breeze.linalg.DenseMatrix[Double],breeze.linalg.DenseMatrix[Double],breeze.linalg.DenseMatrix[Double],io.github.mandar2812.dynaml.models.neuralnets.LazyNeuralStack[(Seq[Seq[Double]],Seq[Seq[Double]],breeze.linalg.DenseVector[Double]),breeze.linalg.DenseVector[Double]]]", "kind" : "def"}, {"label" : "computeStackParameters", "tail" : ": DataPipe3[DenseMatrix[Double], DenseMatrix[Double], DenseMatrix[Double], StackParameters]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.computeStackParameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#computeStackParameters:io.github.mandar2812.dynaml.pipes.DataPipe3[breeze.linalg.DenseMatrix[Double],breeze.linalg.DenseMatrix[Double],breeze.linalg.DenseMatrix[Double],io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.StackParameters]", "kind" : "val"}, {"label" : "stackFactory", "tail" : ": DataPipe[Stream[(Seq[Seq[Double]], Seq[Seq[Double]], DenseVector[Double])], LazyNeuralStack[(Seq[Seq[Double]], Seq[Seq[Double]], DenseVector[Double]), DenseVector[Double]]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.stackFactory", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#stackFactory:io.github.mandar2812.dynaml.pipes.DataPipe[Stream[(Seq[Seq[Double]],Seq[Seq[Double]],breeze.linalg.DenseVector[Double])],io.github.mandar2812.dynaml.models.neuralnets.LazyNeuralStack[(Seq[Seq[Double]],Seq[Seq[Double]],breeze.linalg.DenseVector[Double]),breeze.linalg.DenseVector[Double]]]", "kind" : "val"}, {"label" : "stencil", "tail" : "(): (Seq[Double], Seq[Double])", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.stencil", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#stencil:(Seq[Double],Seq[Double])", "kind" : "def"}, {"label" : "deltaT", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.deltaT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#deltaT:Double", "kind" : "val"}, {"label" : "deltaL", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.deltaL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#deltaL:Double", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion#<init>", "error" : "unsupported entity"}, {"label" : "nT", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.nT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#nT:Int", "kind" : "val"}, {"label" : "nL", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.nL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#nL:Int", "kind" : "val"}, {"label" : "timeLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.timeLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#timeLimits:(Double,Double)", "kind" : "val"}, {"label" : "lShellLimits", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion.lShellLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#lShellLimits:(Double,Double)", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusion.html", "kind" : "case class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusionLayer", "shortDescription" : "Represents a Radial Diffusion forward propagation computation.", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html", "members_class" : [{"label" : "forward", "tail" : ": ComposedPipe[DenseVector[Double], DenseVector[Double], DenseVector[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusionLayer.forward", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#forward:io.github.mandar2812.dynaml.pipes.ComposedPipe[breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]]", "kind" : "val"}, {"label" : "activationFunc", "tail" : ": VectorLinear.type", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusionLayer.activationFunc", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#activationFunc:io.github.mandar2812.dynaml.models.neuralnets.VectorLinear.type", "kind" : "val"}, {"label" : "localField", "tail" : ": DataPipe[DenseVector[Double], DenseVector[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusionLayer.localField", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#localField:io.github.mandar2812.dynaml.pipes.DataPipe[breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]]", "kind" : "val"}, {"label" : "parameters", "tail" : ": (Seq[Seq[Double]], Seq[Seq[Double]], DenseVector[Double])", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusionLayer.parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#parameters:(Seq[Seq[Double]],Seq[Seq[Double]],breeze.linalg.DenseVector[Double])", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusionLayer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(alpha: Seq[Seq[Double]], beta: Seq[Seq[Double]], gamma: DenseVector[Double]): RadialDiffusionLayer", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusionLayer.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#apply(alpha:Seq[Seq[Double]],beta:Seq[Seq[Double]],gamma:breeze.linalg.DenseVector[Double]):io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusionLayer", "kind" : "def"}, {"label" : "forwardPropagate", "tail" : ": MetaPipe[(Seq[Seq[Double]], Seq[Seq[Double]], DenseVector[Double]), DenseVector[Double], DenseVector[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusionLayer.forwardPropagate", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#forwardPropagate:io.github.mandar2812.dynaml.pipes.MetaPipe[(Seq[Seq[Double]],Seq[Seq[Double]],breeze.linalg.DenseVector[Double]),breeze.linalg.DenseVector[Double],breeze.linalg.DenseVector[Double]]", "kind" : "val"}, {"label" : "triDiagSolve", "tail" : "(a: Seq[Seq[Double]], b: Seq[Double]): Array[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusionLayer.triDiagSolve", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#triDiagSolve(a:Seq[Seq[Double]],b:Seq[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RadialDiffusionLayer.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment", "shortDescription" : "A set of convenient work-flows and functions for settingup inference routines in the radial diffusion setting.", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html", "members_object" : [{"label" : "loadCachedResults", "tail" : "(resultsPath: Path): (RDDomain, MagParams, MagParams, MagParams, GaussianRV, Iterable[DenseVector[Double]], (Iterable[((Double, Double), Double)], Iterable[((Double, Double), Double)]), Iterable[(Double, Double)], Iterable[Map[String, Double]], (String, (Int, Int)))", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.loadCachedResults", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#loadCachedResults(resultsPath:ammonite.ops.Path):(io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.RDDomain,io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.MagParams,io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.MagParams,io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.MagParams,io.github.mandar2812.dynaml.probability.GaussianRV,Iterable[breeze.linalg.DenseVector[Double]],(Iterable[((Double,Double),Double)],Iterable[((Double,Double),Double)]),Iterable[(Double,Double)],Iterable[scala.collection.immutable.Map[String,Double]],(String,(Int,Int)))", "kind" : "def"}, {"label" : "readAsMap", "tail" : "(h: Seq[String]): ComposedPipe[Path, Iterable[Array[Double]], Iterable[Map[String, Double]]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.readAsMap", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#readAsMap(h:Seq[String]):io.github.mandar2812.dynaml.pipes.ComposedPipe[ammonite.ops.Path,Iterable[Array[Double]],Iterable[scala.collection.immutable.Map[String,Double]]]", "kind" : "def"}, {"label" : "readColocation", "tail" : ": ComposedPipe[Path, Iterable[Array[Double]], Iterable[(Double, Double)]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.readColocation", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#readColocation:io.github.mandar2812.dynaml.pipes.ComposedPipe[ammonite.ops.Path,Iterable[Array[Double]],Iterable[(Double,Double)]]", "kind" : "val"}, {"label" : "readObservations", "tail" : ": ComposedPipe[Path, Iterable[Array[Double]], Iterable[((Double, Double), Double)]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.readObservations", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#readObservations:io.github.mandar2812.dynaml.pipes.ComposedPipe[ammonite.ops.Path,Iterable[Array[Double]],Iterable[((Double,Double),Double)]]", "kind" : "val"}, {"label" : "processLines", "tail" : ": IterableMapPipe[String, Array[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.processLines", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#processLines:io.github.mandar2812.dynaml.pipes.IterableMapPipe[String,Array[Double]]", "kind" : "val"}, {"label" : "readFile", "tail" : ": DataPipe[Path, Stream[String]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.readFile", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#readFile:io.github.mandar2812.dynaml.pipes.DataPipe[ammonite.ops.Path,scala.collection.immutable.Stream[String]]", "kind" : "val"}, {"label" : "plot_surrogate", "tail" : "(exp_result: ResultSynthetic[M]): (Stream[((Double, Double), Double, Double)], RegressionMetrics, DelauneySurface, DelauneySurface, DelauneySurface)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.plot_surrogate", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#plot_surrogate[M<:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel](exp_result:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.ResultSynthetic[M]):(scala.collection.immutable.Stream[((Double,Double),Double,Double)],io.github.mandar2812.dynaml.evaluation.RegressionMetrics,io.github.mandar2812.dynaml.graphics.plot3d.DelauneySurface,io.github.mandar2812.dynaml.graphics.plot3d.DelauneySurface,io.github.mandar2812.dynaml.graphics.plot3d.DelauneySurface)", "kind" : "def"}, {"label" : "writeResults", "tail" : "(rd_domain: RDDomain, Kp: DataPipe[Double, Double], bulk_data: Stream[((Double, Double), Double)], colocation_points: Stream[(Double, Double)], hyper_prior: Map[String, ContinuousDistr[Double]], samples: Stream[Map[String, Double]], basisSize: (Int, Int), basisType: String, reg: (Double, Double)): Path", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.writeResults", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#writeResults(rd_domain:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.RDDomain,Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double],bulk_data:Stream[((Double,Double),Double)],colocation_points:Stream[(Double,Double)],hyper_prior:Map[String,breeze.stats.distributions.ContinuousDistr[Double]],samples:Stream[Map[String,Double]],basisSize:(Int,Int),basisType:String,reg:(Double,Double)):ammonite.ops.Path", "kind" : "def"}, {"label" : "writeResults", "tail" : "(config: DataConfig, solution: Stream[DenseVector[Double]], boundary_data: Stream[((Double, Double), Double)], bulk_data: Stream[((Double, Double), Double)], colocation_points: Stream[(Double, Double)], hyper_prior: Map[String, ContinuousDistr[Double]], samples: Stream[Map[String, Double]], basisSize: (Int, Int), basisType: String, reg: (Double, Double)): Path", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.writeResults", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#writeResults(config:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.DataConfig,solution:Stream[breeze.linalg.DenseVector[Double]],boundary_data:Stream[((Double,Double),Double)],bulk_data:Stream[((Double,Double),Double)],colocation_points:Stream[(Double,Double)],hyper_prior:Map[String,breeze.stats.distributions.ContinuousDistr[Double]],samples:Stream[Map[String,Double]],basisSize:(Int,Int),basisType:String,reg:(Double,Double)):ammonite.ops.Path", "kind" : "def"}, {"label" : "visualiseResultsInjection", "tail" : "(samples: Stream[Map[String, Double]], gt: Map[String, Double], hyper_prior: Map[String, ContinuousDistr[Double]]): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.visualiseResultsInjection", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#visualiseResultsInjection(samples:Stream[Map[String,Double]],gt:Map[String,Double],hyper_prior:Map[String,breeze.stats.distributions.ContinuousDistr[Double]]):Unit", "kind" : "def"}, {"label" : "visualiseResultsLoss", "tail" : "(samples: Stream[Map[String, Double]], gt: Map[String, Double], hyper_prior: Map[String, ContinuousDistr[Double]]): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.visualiseResultsLoss", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#visualiseResultsLoss(samples:Stream[Map[String,Double]],gt:Map[String,Double],hyper_prior:Map[String,breeze.stats.distributions.ContinuousDistr[Double]]):Unit", "kind" : "def"}, {"label" : "visualisePSD", "tail" : "(domain: RDDomain, initialPSD: (Double) ⇒ Double, solution: Stream[DenseVector[Double]], Kp: DataPipe[Double, Double]): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.visualisePSD", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#visualisePSD(domain:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.RDDomain,initialPSD:Double=>Double,solution:Stream[breeze.linalg.DenseVector[Double]],Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]):Unit", "kind" : "def"}, {"label" : "samplingReport", "tail" : "(samples: Stream[Map[String, Double]], quantities: Map[String, Char], gt: Map[String, Double], acceptanceRate: Double, inferred_quantity: String): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.samplingReport", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#samplingReport(samples:Stream[Map[String,Double]],quantities:Map[String,Char],gt:Map[String,Double],acceptanceRate:Double,inferred_quantity:String):Unit", "kind" : "def"}, {"label" : "hyper_prior", "tail" : "(hyp: List[String]): Map[String, ContinuousDistr[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.hyper_prior", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#hyper_prior(hyp:List[String]):Map[String,breeze.stats.distributions.ContinuousDistr[Double]]", "kind" : "def"}, {"label" : "generateData", "tail" : "(rds: RadialDiffusion, dll: (Double, Double) ⇒ Double, lambda: (Double, Double) ⇒ Double, q: (Double, Double) ⇒ Double, initialPSD: (Double) ⇒ Double)(noise: RandomVariable[Double], num_boundary_points: Int, num_bulk_points: Int, num_colocation_points: Int): (Stream[DenseVector[Double]], (Stream[((Double, Double), Double)], Stream[((Double, Double), Double)]), Stream[(Double, Double)])", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.generateData", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#generateData(rds:io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion,dll:(Double,Double)=>Double,lambda:(Double,Double)=>Double,q:(Double,Double)=>Double,initialPSD:Double=>Double)(noise:io.github.mandar2812.dynaml.probability.RandomVariable[Double],num_boundary_points:Int,num_bulk_points:Int,num_colocation_points:Int):(Stream[breeze.linalg.DenseVector[Double]],(scala.collection.immutable.Stream[((Double,Double),Double)],scala.collection.immutable.Stream[((Double,Double),Double)]),Stream[(Double,Double)])", "kind" : "def"}, {"label" : "solver", "tail" : "(domain: RDDomain): RadialDiffusion", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.solver", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#solver(domain:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.RDDomain):io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion", "kind" : "def"}, {"label" : "Result", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.Result", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#Result[T<:io.github.mandar2812.dynaml.optimization.GloballyOptimizable]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "ResultSynthetic", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDExperiment.ResultSynthetic", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#ResultSynthetic[T<:io.github.mandar2812.dynaml.optimization.GloballyOptimizable]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDExperiment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings", "shortDescription" : "", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html", "members_object" : [{"label" : "initialPSD", "tail" : "(rd_domain: RDDomain)(l: Double): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.initialPSD", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#initialPSD(rd_domain:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.RDDomain)(l:Double):Double", "kind" : "def"}, {"label" : "omega", "tail" : "(rd_domain: RDDomain): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.omega", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#omega(rd_domain:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.RDDomain):Double", "kind" : "def"}, {"label" : "lambda", "tail" : "(lambda_params: MagParams, Kp: DataPipe[Double, Double])(l: Double, t: Double): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.lambda", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#lambda(lambda_params:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.MagParams,Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double])(l:Double,t:Double):Double", "kind" : "def"}, {"label" : "Q", "tail" : "(q_params: MagParams, Kp: DataPipe[Double, Double], rd_domain: RDDomain)(l: Double, t: Double): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.Q", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#Q(q_params:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.MagParams,Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double],rd_domain:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.RDDomain)(l:Double,t:Double):Double", "kind" : "def"}, {"label" : "dll", "tail" : "(dll_params: MagParams, Kp: DataPipe[Double, Double])(l: Double, t: Double): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.dll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#dll(dll_params:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.MagParams,Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double])(l:Double,t:Double):Double", "kind" : "def"}, {"label" : "gt", "tail" : "(dll_params: MagParams, lambda_params: MagParams, q_params: MagParams): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.gt", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#gt(dll_params:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.MagParams,lambda_params:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.MagParams,q_params:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.MagParams):scala.collection.immutable.Map[String,Double]", "kind" : "def"}, {"label" : "diffusion_quantities", "tail" : ": Map[String, Char]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.diffusion_quantities", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#diffusion_quantities:scala.collection.immutable.Map[String,Char]", "kind" : "val"}, {"label" : "quantities_injection", "tail" : ": Map[String, Char]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.quantities_injection", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#quantities_injection:scala.collection.immutable.Map[String,Char]", "kind" : "val"}, {"label" : "quantities_loss", "tail" : ": Map[String, Char]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.quantities_loss", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#quantities_loss:scala.collection.immutable.Map[String,Char]", "kind" : "val"}, {"label" : "deltaT", "tail" : "(rd_domain: RDDomain): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.deltaT", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#deltaT(rd_domain:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.RDDomain):Double", "kind" : "def"}, {"label" : "deltaL", "tail" : "(rd_domain: RDDomain): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.deltaL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#deltaL(rd_domain:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.RDDomain):Double", "kind" : "def"}, {"label" : "domainSpec", "tail" : "(rd_domain: RDDomain): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.domainSpec", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#domainSpec(rd_domain:io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.RDDomain):Map[String,Double]", "kind" : "def"}, {"label" : "defaults", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.defaults", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#defaults", "kind" : "object"}, {"label" : "DataConfig", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.DataConfig", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#DataConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "MagParams", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.MagParams", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#MagParamsextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "RDDomain", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.RDDomain", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#RDDomainextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Domain", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.RDSettings.Domain", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#DomainextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/RDSettings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel", "shortDescription" : "", "members_class" : [{"label" : "gradientAt", "tail" : "(config: Map[String, Double])(x: (Double, Double), x_tilda: (Double, Double)): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.gradientAt", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#gradientAt(config:Map[String,Double])(x:(Double,Double),x_tilda:(Double,Double)):Map[String,Double]", "kind" : "def"}, {"label" : "evaluateAt", "tail" : "(config: Map[String, Double])(x: (Double, Double), x_tilda: (Double, Double)): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.evaluateAt", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#evaluateAt(config:Map[String,Double])(x:(Double,Double),x_tilda:(Double,Double)):Double", "kind" : "def"}, {"label" : "invOperatorKernel", "tail" : "(): (exIndexSet, exIndexSet) ⇒ Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.invOperatorKernel", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#invOperatorKernel:(SE1dExtRadDiffusionKernel.this.exIndexSet,SE1dExtRadDiffusionKernel.this.exIndexSet)=>Double", "kind" : "def"}, {"label" : "_base_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel._base_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#_base_state:Map[String,Double]", "kind" : "def"}, {"label" : "_operator_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel._operator_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#_operator_state:Map[String,Double]", "kind" : "def"}, {"label" : "operator_state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.operator_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#operator_state:Map[String,Double]", "kind" : "var"}, {"label" : "gradDByLSq", "tail" : ": MetaPipe[Map[String, Double], exIndexSet, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.gradDByLSq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#gradDByLSq:io.github.mandar2812.dynaml.pipes.MetaPipe[Map[String,Double],SE1dExtRadDiffusionKernel.this.exIndexSet,Double]", "kind" : "val"}, {"label" : "diffusionFieldGradL", "tail" : ": MetaPipe[Map[String, Double], exIndexSet, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.diffusionFieldGradL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#diffusionFieldGradL:io.github.mandar2812.dynaml.pipes.MetaPipe[Map[String,Double],SE1dExtRadDiffusionKernel.this.exIndexSet,Double]", "kind" : "val"}, {"label" : "_base_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel._base_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#_base_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "_operator_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel._operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#_operator_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#hyper_parameters:List[String]", "kind" : "val"}, {"label" : "operator_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#operator_hyper_parameters:List[String]", "kind" : "val"}, {"label" : "baseID", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.baseID", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#baseID:String", "kind" : "val"}, {"label" : "lossTimeScale", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.lossTimeScale", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#lossTimeScale:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "diffusionField", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.diffusionField", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#diffusionField:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "baseKernel", "tail" : ": GenExpSpaceTimeKernel[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.baseKernel", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#baseKernel:io.github.mandar2812.dynaml.kernels.GenExpSpaceTimeKernel[Double]", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel#<init>", "error" : "unsupported entity"}, {"label" : "Kp", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SE1dExtRadDiffusionKernel.Kp", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : "block", "tail" : "(h: String*): Unit", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel.block", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#block(h:String*):Unit", "kind" : "def"}, {"label" : "setHyperParameters", "tail" : "(h: Map[String, Double]): SE1dExtRadDiffusionKernel.this.type", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel.setHyperParameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#setHyperParameters(h:Map[String,Double]):LinearPDEKernel.this.type", "kind" : "def"}, {"label" : "exIndexSet", "tail" : "", "member" : "io.github.mandar2812.dynaml.kernels.LinearPDEKernel.exIndexSet", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#exIndexSet=(I,Double)", "kind" : "type"}, {"label" : "asPipe", "tail" : "(): DataPipe[Map[String, Double], LocalScalarKernel[(Double, Double)]]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.asPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#asPipe:io.github.mandar2812.dynaml.pipes.DataPipe[Map[String,Double],io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]]", "kind" : "def"}, {"label" : "buildBlockedCrossKernelMatrix", "tail" : "(dataset1: S, dataset2: S): PartitionedMatrix", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildBlockedCrossKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#buildBlockedCrossKernelMatrix[S<:Seq[Index]](dataset1:S,dataset2:S):io.github.mandar2812.dynaml.algebra.PartitionedMatrix", "kind" : "def"}, {"label" : "buildBlockedKernelMatrix", "tail" : "(mappedData: S, length: Long): PartitionedPSDMatrix", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildBlockedKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#buildBlockedKernelMatrix[S<:Seq[Index]](mappedData:S,length:Long):io.github.mandar2812.dynaml.algebra.PartitionedPSDMatrix", "kind" : "def"}, {"label" : "buildCrossKernelMatrix", "tail" : "(dataset1: S, dataset2: S): DenseMatrix[Double]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildCrossKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#buildCrossKernelMatrix[S<:Seq[Index]](dataset1:S,dataset2:S):breeze.linalg.DenseMatrix[Double]", "kind" : "def"}, {"label" : "buildKernelMatrix", "tail" : "(mappedData: S, length: Int): KernelMatrix[DenseMatrix[Double]]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#buildKernelMatrix[S<:Seq[Index]](mappedData:S,length:Int):io.github.mandar2812.dynaml.kernels.KernelMatrix[breeze.linalg.DenseMatrix[Double]]", "kind" : "def"}, {"label" : ":+", "tail" : "(otherKernel: LocalScalarKernel[T1]): CompositeCovariance[((Double, Double), T1)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.:+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#:+[T1](otherKernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[T1]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[(Index,T1)]", "kind" : "def"}, {"label" : ":*", "tail" : "(otherKernel: LocalScalarKernel[T1]): KroneckerProductKernel[(Double, Double), T1]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.:*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#:*[T1](otherKernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[T1]):io.github.mandar2812.dynaml.kernels.KroneckerProductKernel[Index,T1]", "kind" : "def"}, {"label" : ">", "tail" : "(otherKernel: K): CompositeCovariance[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#>[K<:io.github.mandar2812.dynaml.kernels.GenericRBFKernel[Index]](otherKernel:K):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "*", "tail" : "(c: Double): LocalScalarKernel[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#*(c:Double):io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]", "kind" : "def"}, {"label" : "*", "tail" : "(otherKernel: T)(ev: ClassTag[(Double, Double)]): CompositeCovariance[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#*[T<:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]](otherKernel:T)(implicitev:scala.reflect.ClassTag[Index]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "+", "tail" : "(otherKernel: T)(ev: ClassTag[(Double, Double)]): CompositeCovariance[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.+", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#+[T<:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]](otherKernel:T)(implicitev:scala.reflect.ClassTag[Index]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "setBlockSizes", "tail" : "(s: (Int, Int)): Unit", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.setBlockSizes", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#setBlockSizes(s:(Int,Int)):Unit", "kind" : "def"}, {"label" : "colBlocking", "tail" : ": Int", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.colBlocking", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#colBlocking:Int", "kind" : "val"}, {"label" : "rowBlocking", "tail" : ": Int", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.rowBlocking", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#rowBlocking:Int", "kind" : "val"}, {"label" : "gradient", "tail" : "(x: (Double, Double), y: (Double, Double)): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.gradient", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#gradient(x:T,y:T):Map[String,V]", "kind" : "def"}, {"label" : "evaluate", "tail" : "(x: (Double, Double), y: (Double, Double)): Double", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.evaluate", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#evaluate(x:T,y:T):V", "kind" : "def"}, {"label" : "effective_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.effective_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#effective_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "effective_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.effective_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#effective_state:Map[String,Double]", "kind" : "def"}, {"label" : "block_all_hyper_parameters", "tail" : "(): Unit", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.block_all_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#block_all_hyper_parameters:Unit", "kind" : "def"}, {"label" : "state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#state:Map[String,Double]", "kind" : "var"}, {"label" : "blocked_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.blocked_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#blocked_hyper_parameters:List[String]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SE1dExtRadDiffusionKernel.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel", "shortDescription" : "Inverse inference over plasma radial diffusion parameters.", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html", "members_class" : [{"label" : "energy", "tail" : "(h: Map[String, Double], options: Map[String, String]): Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.energy", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#energy(h:Map[String,Double],options:Map[String,String]):Double", "kind" : "def"}, {"label" : "get_surrogate", "tail" : "(h: Map[String, Double]): DataPipe[Iterable[(Double, Double)], Iterable[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.get_surrogate", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#get_surrogate(h:Map[String,Double]):io.github.mandar2812.dynaml.pipes.DataPipe[Iterable[(Double,Double)],Iterable[Double]]", "kind" : "def"}, {"label" : "get_design_mat", "tail" : "(g: DenseMatrix[Double], h: DenseMatrix[Double]): DenseMatrix[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.get_design_mat", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#get_design_mat(g:breeze.linalg.DenseMatrix[Double],h:breeze.linalg.DenseMatrix[Double]):breeze.linalg.DenseMatrix[Double]", "kind" : "def"}, {"label" : "getParams", "tail" : "(h: Map[String, Double]): (DenseVector[Double], DenseMatrix[Double])", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.getParams", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#getParams(h:Map[String,Double]):(breeze.linalg.DenseVector[Double],breeze.linalg.DenseMatrix[Double])", "kind" : "def"}, {"label" : "setState", "tail" : "(h: Map[String, Double]): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.setState", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#setState(h:Map[String,Double]):Unit", "kind" : "def"}, {"label" : "effective_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.effective_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#effective_state:Map[String,Double]", "kind" : "def"}, {"label" : "effective_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.effective_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#effective_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "block_++", "tail" : "(h: String*): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.block_++", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#block_++(h:String*):Unit", "kind" : "def"}, {"label" : "block", "tail" : "(hyp: String*): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.block", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#block(hyp:String*):Unit", "kind" : "def"}, {"label" : "regCol", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.regCol", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#regCol:Double", "kind" : "var"}, {"label" : "regObs", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.regObs", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#regObs:Double", "kind" : "var"}, {"label" : "reg", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.reg", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#reg:Double", "kind" : "var"}, {"label" : "blocked_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.blocked_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#blocked_hyper_parameters:List[String]", "kind" : "var"}, {"label" : "current_state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.current_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#current_state:Map[String,Double]", "kind" : "var"}, {"label" : "hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#hyper_parameters:List[String]", "kind" : "var"}, {"label" : "operator_state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.operator_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#operator_state:Map[String,Double]", "kind" : "var"}, {"label" : "operator_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#operator_hyper_parameters:List[String]", "kind" : "val"}, {"label" : "_operator_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel._operator_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#_operator_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "phi", "tail" : ": DenseMatrix[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.phi", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#phi:breeze.linalg.DenseMatrix[Double]", "kind" : "lazy val"}, {"label" : "psd_std", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.psd_std", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#psd_std:Double", "kind" : "val"}, {"label" : "psd_mean", "tail" : ": Double", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.psd_mean", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#psd_mean:Double", "kind" : "val"}, {"label" : "num_colocation_points", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.num_colocation_points", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#num_colocation_points:Int", "kind" : "val"}, {"label" : "num_observations", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.num_observations", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#num_observations:Int", "kind" : "val"}, {"label" : "quadrature_weight_matrix", "tail" : ": DenseMatrix[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.quadrature_weight_matrix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#quadrature_weight_matrix:breeze.linalg.DenseMatrix[Double]", "kind" : "val"}, {"label" : "ghost_points", "tail" : ": Stream[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.ghost_points", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#ghost_points:Stream[(Double,Double)]", "kind" : "val"}, {"label" : "injection_process", "tail" : ": BoundaryInjection", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.injection_process", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#injection_process:io.github.mandar2812.PlasmaML.dynamics.diffusion.BoundaryInjection", "kind" : "val"}, {"label" : "lossRate", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.lossRate", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#lossRate:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "diffusionField", "tail" : ": MagTrend", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.diffusionField", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#diffusionField:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.logger", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel#<init>", "error" : "unsupported entity"}, {"label" : "basisCovFlag", "tail" : ": Boolean", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.basisCovFlag", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#basisCovFlag:Boolean", "kind" : "val"}, {"label" : "hyper_param_basis", "tail" : ": Map[String, MagParamBasis]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.hyper_param_basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#hyper_param_basis:Map[String,io.github.mandar2812.PlasmaML.dynamics.diffusion.MagParamBasis]", "kind" : "val"}, {"label" : "quadrature_t", "tail" : ": QuadratureRule", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.quadrature_t", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#quadrature_t:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.QuadratureRule", "kind" : "val"}, {"label" : "quadrature_l", "tail" : ": QuadratureRule", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.quadrature_l", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#quadrature_l:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.QuadratureRule", "kind" : "val"}, {"label" : "timeDomain", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.timeDomain", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#timeDomain:(Double,Double)", "kind" : "val"}, {"label" : "lShellDomain", "tail" : ": (Double, Double)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.lShellDomain", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#lShellDomain:(Double,Double)", "kind" : "val"}, {"label" : "basis", "tail" : ": PSDBasis", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.basis", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#basis:io.github.mandar2812.PlasmaML.dynamics.diffusion.PSDBasis", "kind" : "val"}, {"label" : "psd_data", "tail" : ": Stream[((Double, Double), Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.psd_data", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#psd_data:Stream[((Double,Double),Double)]", "kind" : "val"}, {"label" : "noise_psd", "tail" : ": DiracTuple2Kernel", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.noise_psd", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#noise_psd:io.github.mandar2812.PlasmaML.utils.DiracTuple2Kernel", "kind" : "val"}, {"label" : "covariance", "tail" : ": LocalScalarKernel[(Double, Double)]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.covariance", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#covariance:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[(Double,Double)]", "kind" : "val"}, {"label" : "Kp", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.Kp", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : "persist", "tail" : "(state: Map[String, Double]): Unit", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable.persist", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#persist(state:Map[String,Double]):Unit", "kind" : "def"}, {"label" : "_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable._hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "_current_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.optimization.GloballyOptimizable._current_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#_current_state:Map[String,Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "loadCachedResults", "tail" : "(lambda_alpha: Double, lambda_beta: Double, lambda_a: Double, lambda_b: Double)(file: String): Stream[DenseVector[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.loadCachedResults", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#loadCachedResults(lambda_alpha:Double,lambda_beta:Double,lambda_a:Double,lambda_b:Double)(file:String):Stream[breeze.linalg.DenseVector[Double]]", "kind" : "def"}, {"label" : "metaDesignMatFlow", "tail" : ": MetaPipe[Basis[(Double, Double)], Stream[(Double, Double)], DenseMatrix[Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.metaDesignMatFlow", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#metaDesignMatFlow:io.github.mandar2812.dynaml.pipes.MetaPipe[io.github.mandar2812.dynaml.pipes.Basis[(Double,Double)],Stream[(Double,Double)],breeze.linalg.DenseMatrix[Double]]", "kind" : "val"}, {"label" : "stateEncoder", "tail" : "(prefix: String): Encoder[Map[String, Double], Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.stateEncoder", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#stateEncoder(prefix:String):io.github.mandar2812.dynaml.pipes.Encoder[Map[String,Double],Map[String,Double]]", "kind" : "def"}, {"label" : "quadrature_primitives", "tail" : "(quadrature_l: QuadratureRule, quadrature_t: QuadratureRule)(lShellDomain: (Double, Double), timeDomain: (Double, Double)): (Stream[(Double, Double)], DenseMatrix[Double])", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.quadrature_primitives", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#quadrature_primitives(quadrature_l:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.QuadratureRule,quadrature_t:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.QuadratureRule)(lShellDomain:(Double,Double),timeDomain:(Double,Double)):(Stream[(Double,Double)],breeze.linalg.DenseMatrix[Double])", "kind" : "def"}, {"label" : "eightPointGaussLegendre", "tail" : ": GaussianQuadrature", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.eightPointGaussLegendre", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#eightPointGaussLegendre:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.GaussianQuadrature", "kind" : "val"}, {"label" : "sevenPointGaussLegendre", "tail" : ": GaussianQuadrature", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.sevenPointGaussLegendre", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#sevenPointGaussLegendre:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.GaussianQuadrature", "kind" : "val"}, {"label" : "sixPointGaussLegendre", "tail" : ": GaussianQuadrature", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.sixPointGaussLegendre", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#sixPointGaussLegendre:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.GaussianQuadrature", "kind" : "val"}, {"label" : "fivePointGaussLegendre", "tail" : ": GaussianQuadrature", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.fivePointGaussLegendre", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#fivePointGaussLegendre:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.GaussianQuadrature", "kind" : "val"}, {"label" : "fourPointGaussLegendre", "tail" : ": GaussianQuadrature", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.fourPointGaussLegendre", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#fourPointGaussLegendre:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.GaussianQuadrature", "kind" : "val"}, {"label" : "threePointGaussLegendre", "tail" : ": GaussianQuadrature", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.threePointGaussLegendre", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#threePointGaussLegendre:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.GaussianQuadrature", "kind" : "val"}, {"label" : "twoPointGaussLegendre", "tail" : ": GaussianQuadrature", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.twoPointGaussLegendre", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#twoPointGaussLegendre:io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.GaussianQuadrature", "kind" : "val"}, {"label" : "monte_carlo_quadrature", "tail" : "(num: Int): MonteCarloQuadrature", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.monte_carlo_quadrature", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#monte_carlo_quadrature(num:Int):io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.MonteCarloQuadrature", "kind" : "def"}, {"label" : "GaussianQuadrature", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.GaussianQuadrature", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#GaussianQuadratureextendsSGRadialDiffusionModel.QuadratureRulewithProductwithSerializable", "kind" : "case class"}, {"label" : "MonteCarloQuadrature", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.MonteCarloQuadrature", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#MonteCarloQuadratureextendsSGRadialDiffusionModel.QuadratureRulewithProductwithSerializable", "kind" : "case class"}, {"label" : "QuadratureRule", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SGRadialDiffusionModel.QuadratureRule", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#QuadratureRuleextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SGRadialDiffusionModel.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SimpleMagTrend", "shortDescription" : "", "members_case class" : [{"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SimpleMagTrend#<init>", "error" : "unsupported entity"}, {"label" : "prefix", "tail" : ": String", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.SimpleMagTrend.prefix", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#prefix:String", "kind" : "val"}, {"label" : "transform", "tail" : ": MagConfigEncoding", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend.transform", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#transform:io.github.mandar2812.PlasmaML.utils.MagConfigEncoding", "kind" : "val"}, {"label" : "Kp", "tail" : ": DataPipe[Double, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagTrend.Kp", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#Kp:io.github.mandar2812.dynaml.pipes.DataPipe[Double,Double]", "kind" : "val"}, {"label" : "grad", "tail" : "(): Seq[MAGProcess[Map[String, Double]]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.grad", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#grad:Seq[io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGProcess[T]]", "kind" : "def"}, {"label" : "gradL", "tail" : "(): MAGProcess[Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.gradL", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#gradL:io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.MAGProcess[T]", "kind" : "def"}, {"label" : "run", "tail" : "(data: Map[String, Double]): DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.MagnetosphericProcessTrend.run", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#run(data:T):io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double),Double]", "kind" : "def"}, {"label" : ">>", "tail" : "(next: DataPipe[Double, Further]): MetaPipe[Map[String, Double], (Double, Double), Further]", "member" : "io.github.mandar2812.dynaml.pipes.MetaPipe.>>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#>>[Further](next:io.github.mandar2812.dynaml.pipes.DataPipe[Destination,Further]):io.github.mandar2812.dynaml.pipes.MetaPipe[Source,Intermediate,Further]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): (Map[String, Double]) ⇒ DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[Map[String, Double], OtherSource, (DataPipe[(Double, Double), Double], OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[Map[String, Double], DataPipe[(Double, Double), Double], OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[DataPipe[(Double, Double), Double]]): Basis[Map[String, Double]]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[DataPipe[(Double, Double), Double], Further]): ComposedPipe[Map[String, Double], DataPipe[(Double, Double), Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: Map[String, Double]): DataPipe[(Double, Double), Double]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/SimpleMagTrend.html", "kind" : "case class"}, {"name" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion", "shortDescription" : "A radial diffusion system where the injection and diffusion functionsare treated as latent i.e.", "object" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html", "members_class" : [{"label" : "forwardModel", "tail" : "(lDomain: DomainLimits, nL: Int, timeDomain: DomainLimits, nT: Int)(f0: TimeSlice): MatrixNormalRV", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.forwardModel", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#forwardModel(lDomain:StochasticRadialDiffusion.this.DomainLimits,nL:Int,timeDomain:StochasticRadialDiffusion.this.DomainLimits,nT:Int)(f0:StochasticRadialDiffusion.this.TimeSlice):io.github.mandar2812.dynaml.probability.MatrixNormalRV", "kind" : "def"}, {"label" : "epistemics", "tail" : "(l_values: Seq[Double], t_values: Seq[Double]): (MatrixNormalRV, MatrixNormalRV, MatrixNormalRV)", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.epistemics", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#epistemics(l_values:Seq[Double],t_values:Seq[Double]):(io.github.mandar2812.dynaml.probability.MatrixNormalRV,io.github.mandar2812.dynaml.probability.MatrixNormalRV,io.github.mandar2812.dynaml.probability.MatrixNormalRV)", "kind" : "def"}, {"label" : "forwardSolver", "tail" : ": (DomainLimits, Int, DomainLimits, Int) ⇒ RadialDiffusion", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.forwardSolver", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#forwardSolver:(StochasticRadialDiffusion.this.DomainLimits,Int,StochasticRadialDiffusion.this.DomainLimits,Int)=>io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion", "kind" : "val"}, {"label" : "setState", "tail" : "(s: Map[String, Double]): Kernel", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.setState", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#setState(s:Map[String,Double]):io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.Kernel", "kind" : "def"}, {"label" : "effective_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.effective_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#effective_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "effective_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.effective_state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#effective_state:Map[String,Double]", "kind" : "def"}, {"label" : "_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion._state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#_state:Map[String,Double]", "kind" : "def"}, {"label" : "block_++", "tail" : "(h: String*): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.block_++", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#block_++(h:String*):Unit", "kind" : "def"}, {"label" : "block", "tail" : "(h: String*): Unit", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.block", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#block(h:String*):Unit", "kind" : "def"}, {"label" : "blocked_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.blocked_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#blocked_hyper_parameters:List[String]", "kind" : "var"}, {"label" : "hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#hyper_parameters:List[String]", "kind" : "val"}, {"label" : "state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.state", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#state:Map[String,Double]", "kind" : "var"}, {"label" : "lEnc", "tail" : ": Encoder[ParamsL, Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.lEnc", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#lEnc:io.github.mandar2812.dynaml.pipes.Encoder[ParamsL,Map[String,Double]]", "kind" : "val"}, {"label" : "dEnc", "tail" : ": Encoder[ParamsD, Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.dEnc", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#dEnc:io.github.mandar2812.dynaml.pipes.Encoder[ParamsD,Map[String,Double]]", "kind" : "val"}, {"label" : "qEnc", "tail" : ": Encoder[ParamsQ, Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.qEnc", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#qEnc:io.github.mandar2812.dynaml.pipes.Encoder[ParamsQ,Map[String,Double]]", "kind" : "val"}, {"label" : "ensembleMode", "tail" : ": Boolean", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.ensembleMode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#ensembleMode:Boolean", "kind" : "var"}, {"label" : "num_samples", "tail" : ": Int", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.num_samples", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#num_samples:Int", "kind" : "var"}, {"label" : "TimeSlice", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.TimeSlice", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#TimeSlice=breeze.linalg.DenseVector[Double]", "kind" : "type"}, {"label" : "DomainLimits", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.DomainLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#DomainLimits=(Double,Double)", "kind" : "type"}, {"member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion#<init>", "error" : "unsupported entity"}, {"label" : "lossProcess", "tail" : ": LatentProcess[ParamsL]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.lossProcess", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#lossProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[ParamsL]", "kind" : "val"}, {"label" : "diffusionProcess", "tail" : ": LatentProcess[ParamsD]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.diffusionProcess", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#diffusionProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[ParamsD]", "kind" : "val"}, {"label" : "injectionProcess", "tail" : ": LatentProcess[ParamsQ]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.injectionProcess", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#injectionProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[ParamsQ]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ensembleAvg", "tail" : "(injection_dist: MatrixNormalRV, diffusion_dist: MatrixNormalRV, loss_dist: MatrixNormalRV, radialSolver: RadialDiffusion, num_samples: Int)(f0: DenseVector[Double]): DenseMatrix[Double]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.ensembleAvg", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#ensembleAvg(injection_dist:io.github.mandar2812.dynaml.probability.MatrixNormalRV,diffusion_dist:io.github.mandar2812.dynaml.probability.MatrixNormalRV,loss_dist:io.github.mandar2812.dynaml.probability.MatrixNormalRV,radialSolver:io.github.mandar2812.PlasmaML.dynamics.diffusion.RadialDiffusion,num_samples:Int)(f0:breeze.linalg.DenseVector[Double]):breeze.linalg.DenseMatrix[Double]", "kind" : "def"}, {"label" : "marginalLikelihood", "tail" : "(psdCovarianceL: Kernel, psdCovarianceT: Kernel, injectionProcess: LatentProcess[MPQ], diffusionProcess: LatentProcess[MPD], lossProcess: LatentProcess[MPL])(lDomain: DomainLimits, nL: Int, timeDomain: DomainLimits, nT: Int)(num_samples: Int, f0: TimeSlice): MatrixNormalRV", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.marginalLikelihood", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#marginalLikelihood[MPQ,MPD,MPL](psdCovarianceL:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.Kernel,psdCovarianceT:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.Kernel,injectionProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPQ],diffusionProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPD],lossProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPL])(lDomain:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.DomainLimits,nL:Int,timeDomain:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.DomainLimits,nT:Int)(num_samples:Int,f0:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.TimeSlice):io.github.mandar2812.dynaml.probability.MatrixNormalRV", "kind" : "def"}, {"label" : "likelihood", "tail" : "(psdCovarianceL: Kernel, psdCovarianceT: Kernel, injectionProcess: LatentProcess[MPQ], diffusionProcess: LatentProcess[MPD], lossProcess: LatentProcess[MPL])(lDomain: DomainLimits, nL: Int, timeDomain: DomainLimits, nT: Int)(f0: TimeSlice): MatrixNormalRV", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.likelihood", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#likelihood[MPQ,MPD,MPL](psdCovarianceL:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.Kernel,psdCovarianceT:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.Kernel,injectionProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPQ],diffusionProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPD],lossProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPL])(lDomain:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.DomainLimits,nL:Int,timeDomain:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.DomainLimits,nT:Int)(f0:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.TimeSlice):io.github.mandar2812.dynaml.probability.MatrixNormalRV", "kind" : "def"}, {"label" : "epistemics", "tail" : "(injectionProcess: LatentProcess[MPQ], diffusionProcess: LatentProcess[MPD], lossProcess: LatentProcess[MPL])(l_values: Seq[Double], t_values: Seq[Double]): EpistemicUncertainties", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.epistemics", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#epistemics[MPQ,MPD,MPL](injectionProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPQ],diffusionProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPD],lossProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPL])(l_values:Seq[Double],t_values:Seq[Double]):io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.EpistemicUncertainties", "kind" : "def"}, {"label" : "apply", "tail" : "(psdCovarianceL: Kernel, psdCovarianceT: Kernel, injectionProcess: LatentProcess[MPQ], diffusionProcess: LatentProcess[MPD], lossProcess: LatentProcess[MPL]): StochasticRadialDiffusion[MPQ, MPD, MPL]", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#apply[MPD,MPQ,MPL](psdCovarianceL:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.Kernel,psdCovarianceT:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.Kernel,injectionProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPQ],diffusionProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPD],lossProcess:io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess[MPL]):io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion[MPQ,MPD,MPL]", "kind" : "def"}, {"label" : "TimeSlice", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.TimeSlice", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#TimeSlice=breeze.linalg.DenseVector[Double]", "kind" : "type"}, {"label" : "DomainLimits", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.DomainLimits", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#DomainLimits=(Double,Double)", "kind" : "type"}, {"label" : "EpistemicUncertainties", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.EpistemicUncertainties", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#EpistemicUncertainties=(io.github.mandar2812.dynaml.probability.MatrixNormalRV,io.github.mandar2812.dynaml.probability.MatrixNormalRV,io.github.mandar2812.dynaml.probability.MatrixNormalRV)", "kind" : "type"}, {"label" : "Kernel", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.Kernel", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#Kernel=io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Double]", "kind" : "type"}, {"label" : "LatentProcess", "tail" : "", "member" : "io.github.mandar2812.PlasmaML.dynamics.diffusion.StochasticRadialDiffusion.LatentProcess", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#LatentProcess[MP]=io.github.mandar2812.dynaml.models.bayes.CoRegGPPrior[Double,Double,MP]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/dynamics\/diffusion\/StochasticRadialDiffusion.html", "kind" : "class"}], "io.github.mandar2812.PlasmaML.cdf.util" : [{"name" : "io.github.mandar2812.PlasmaML.cdf.util.CdfDump", "shortDescription" : "Utility to dump the records of a CDF file, optionally with field values.", "members_class" : [{"label" : "run", "tail" : "(): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.util.CdfDump.run", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#run():Unit", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.util.CdfDump#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfDump.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.util.CdfList", "shortDescription" : "Utility to describe a CDF file, optionally with record data.", "members_class" : [{"label" : "run", "tail" : "(): Unit", "member" : "io.github.mandar2812.PlasmaML.cdf.util.CdfList.run", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#run():Unit", "kind" : "def"}, {"member" : "io.github.mandar2812.PlasmaML.cdf.util.CdfList#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/CdfList.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.cdf.util.LogUtil", "shortDescription" : "Utilities for controlling logging level.", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/cdf\/util\/LogUtil.html", "kind" : "class"}], "scala" : [], "io.github" : [], "io.github.mandar2812" : [], "io" : [], "scala.collection.compat" : [], "io.github.mandar2812.PlasmaML.utils" : [{"name" : "io.github.mandar2812.PlasmaML.utils.DiracTuple2Kernel", "shortDescription" : "", "members_class" : [{"label" : "buildKernelMatrix", "tail" : "(mappedData: S, length: Int): KernelMatrix[DenseMatrix[Double]]", "member" : "io.github.mandar2812.PlasmaML.utils.DiracTuple2Kernel.buildKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#buildKernelMatrix[S<:Seq[(Double,Double)]](mappedData:S,length:Int):io.github.mandar2812.dynaml.kernels.KernelMatrix[breeze.linalg.DenseMatrix[Double]]", "kind" : "def"}, {"label" : "gradientAt", "tail" : "(config: Map[String, Double])(x: (Double, Double), y: (Double, Double)): Map[String, Double]", "member" : "io.github.mandar2812.PlasmaML.utils.DiracTuple2Kernel.gradientAt", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#gradientAt(config:Map[String,Double])(x:(Double,Double),y:(Double,Double)):Map[String,Double]", "kind" : "def"}, {"label" : "evaluateAt", "tail" : "(config: Map[String, Double])(x: (Double, Double), y: (Double, Double)): Double", "member" : "io.github.mandar2812.PlasmaML.utils.DiracTuple2Kernel.evaluateAt", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#evaluateAt(config:Map[String,Double])(x:(Double,Double),y:(Double,Double)):Double", "kind" : "def"}, {"label" : "setNoiseLevel", "tail" : "(d: Double): Unit", "member" : "io.github.mandar2812.PlasmaML.utils.DiracTuple2Kernel.setNoiseLevel", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#setNoiseLevel(d:Double):Unit", "kind" : "def"}, {"label" : "hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.PlasmaML.utils.DiracTuple2Kernel.hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#hyper_parameters:List[String]", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.utils.DiracTuple2Kernel#<init>", "error" : "unsupported entity"}, {"label" : "asPipe", "tail" : "(): DataPipe[Map[String, Double], LocalScalarKernel[(Double, Double)]]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.asPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#asPipe:io.github.mandar2812.dynaml.pipes.DataPipe[Map[String,Double],io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]]", "kind" : "def"}, {"label" : "buildBlockedCrossKernelMatrix", "tail" : "(dataset1: S, dataset2: S): PartitionedMatrix", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildBlockedCrossKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#buildBlockedCrossKernelMatrix[S<:Seq[Index]](dataset1:S,dataset2:S):io.github.mandar2812.dynaml.algebra.PartitionedMatrix", "kind" : "def"}, {"label" : "buildBlockedKernelMatrix", "tail" : "(mappedData: S, length: Long): PartitionedPSDMatrix", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildBlockedKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#buildBlockedKernelMatrix[S<:Seq[Index]](mappedData:S,length:Long):io.github.mandar2812.dynaml.algebra.PartitionedPSDMatrix", "kind" : "def"}, {"label" : "buildCrossKernelMatrix", "tail" : "(dataset1: S, dataset2: S): DenseMatrix[Double]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.buildCrossKernelMatrix", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#buildCrossKernelMatrix[S<:Seq[Index]](dataset1:S,dataset2:S):breeze.linalg.DenseMatrix[Double]", "kind" : "def"}, {"label" : ":+", "tail" : "(otherKernel: LocalScalarKernel[T1]): CompositeCovariance[((Double, Double), T1)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.:+", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#:+[T1](otherKernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[T1]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[(Index,T1)]", "kind" : "def"}, {"label" : ":*", "tail" : "(otherKernel: LocalScalarKernel[T1]): KroneckerProductKernel[(Double, Double), T1]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.:*", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#:*[T1](otherKernel:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[T1]):io.github.mandar2812.dynaml.kernels.KroneckerProductKernel[Index,T1]", "kind" : "def"}, {"label" : ">", "tail" : "(otherKernel: K): CompositeCovariance[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.>", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#>[K<:io.github.mandar2812.dynaml.kernels.GenericRBFKernel[Index]](otherKernel:K):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "*", "tail" : "(c: Double): LocalScalarKernel[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.*", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#*(c:Double):io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]", "kind" : "def"}, {"label" : "*", "tail" : "(otherKernel: T)(ev: ClassTag[(Double, Double)]): CompositeCovariance[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.*", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#*[T<:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]](otherKernel:T)(implicitev:scala.reflect.ClassTag[Index]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "+", "tail" : "(otherKernel: T)(ev: ClassTag[(Double, Double)]): CompositeCovariance[(Double, Double)]", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.+", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#+[T<:io.github.mandar2812.dynaml.kernels.LocalScalarKernel[Index]](otherKernel:T)(implicitev:scala.reflect.ClassTag[Index]):io.github.mandar2812.dynaml.kernels.CompositeCovariance[Index]", "kind" : "def"}, {"label" : "setBlockSizes", "tail" : "(s: (Int, Int)): Unit", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.setBlockSizes", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#setBlockSizes(s:(Int,Int)):Unit", "kind" : "def"}, {"label" : "colBlocking", "tail" : ": Int", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.colBlocking", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#colBlocking:Int", "kind" : "val"}, {"label" : "rowBlocking", "tail" : ": Int", "member" : "io.github.mandar2812.dynaml.kernels.LocalScalarKernel.rowBlocking", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#rowBlocking:Int", "kind" : "val"}, {"label" : "gradient", "tail" : "(x: (Double, Double), y: (Double, Double)): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.gradient", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#gradient(x:T,y:T):Map[String,V]", "kind" : "def"}, {"label" : "evaluate", "tail" : "(x: (Double, Double), y: (Double, Double)): Double", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.evaluate", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#evaluate(x:T,y:T):V", "kind" : "def"}, {"label" : "setHyperParameters", "tail" : "(h: Map[String, Double]): DiracTuple2Kernel.this.type", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.setHyperParameters", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#setHyperParameters(h:Map[String,Double]):CovarianceFunction.this.type", "kind" : "def"}, {"label" : "effective_hyper_parameters", "tail" : "(): List[String]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.effective_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#effective_hyper_parameters:List[String]", "kind" : "def"}, {"label" : "effective_state", "tail" : "(): Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.effective_state", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#effective_state:Map[String,Double]", "kind" : "def"}, {"label" : "block_all_hyper_parameters", "tail" : "(): Unit", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.block_all_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#block_all_hyper_parameters:Unit", "kind" : "def"}, {"label" : "block", "tail" : "(h: String*): Unit", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.block", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#block(h:String*):Unit", "kind" : "def"}, {"label" : "state", "tail" : ": Map[String, Double]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.state", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#state:Map[String,Double]", "kind" : "var"}, {"label" : "blocked_hyper_parameters", "tail" : ": List[String]", "member" : "io.github.mandar2812.dynaml.kernels.CovarianceFunction.blocked_hyper_parameters", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#blocked_hyper_parameters:List[String]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/mandar2812\/PlasmaML\/utils\/DiracTuple2Kernel.html", "kind" : "class"}, {"name" : "io.github.mandar2812.PlasmaML.utils.MagConfigEncoding", "shortDescription" : "", "members_case class" : [{"label" : "_keys", "tail" : "(): Seq[String]", "member" : "io.github.mandar2812.PlasmaML.utils.MagConfigEncoding._keys", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#_keys:Seq[String]", "kind" : "def"}, {"label" : "run", "tail" : "(data: Map[String, Double]): (Double, Double, Double, Double)", "member" : "io.github.mandar2812.PlasmaML.utils.MagConfigEncoding.run", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#run(data:Map[String,Double]):(Double,Double,Double,Double)", "kind" : "def"}, {"label" : "i", "tail" : ": DataPipe[(Double, Double, Double, Double), Map[String, Double]]", "member" : "io.github.mandar2812.PlasmaML.utils.MagConfigEncoding.i", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#i:io.github.mandar2812.dynaml.pipes.DataPipe[(Double,Double,Double,Double),scala.collection.immutable.Map[String,Double]]", "kind" : "val"}, {"member" : "io.github.mandar2812.PlasmaML.utils.MagConfigEncoding#<init>", "error" : "unsupported entity"}, {"label" : "keys", "tail" : ": (String, String, String, String)", "member" : "io.github.mandar2812.PlasmaML.utils.MagConfigEncoding.keys", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#keys:(String,String,String,String)", "kind" : "val"}, {"label" : "*", "tail" : "(that: Encoder[S2, D2]): EncoderTuple[Map[String, Double], S2, (Double, Double, Double, Double), D2]", "member" : "io.github.mandar2812.dynaml.pipes.Encoder.*", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#*[S2,D2](that:io.github.mandar2812.dynaml.pipes.Encoder[S2,D2]):io.github.mandar2812.dynaml.pipes.EncoderTuple[S,S2,D,D2]", "kind" : "def"}, {"label" : ">", "tail" : "(that: Encoder[(Double, Double, Double, Double), Further]): Encoder[Map[String, Double], Further]", "member" : "io.github.mandar2812.dynaml.pipes.Encoder.>", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#>[Further](that:io.github.mandar2812.dynaml.pipes.Encoder[D,Further]):io.github.mandar2812.dynaml.pipes.Encoder[S,Further]", "kind" : "def"}, {"label" : "toPipe", "tail" : "(): (Map[String, Double]) ⇒ (Double, Double, Double, Double)", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.toPipe", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#toPipe:Source=>Destination", "kind" : "def"}, {"label" : ">-<", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): DataPipe2[Map[String, Double], OtherSource, ((Double, Double, Double, Double), OtherDestination)]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>-<", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#>-<[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.DataPipe2[Source,OtherSource,(Destination,OtherDestination)]", "kind" : "def"}, {"label" : "*", "tail" : "(that: DataPipe[OtherSource, OtherDestination]): ParallelPipe[Map[String, Double], (Double, Double, Double, Double), OtherSource, OtherDestination]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.*", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#*[OtherSource,OtherDestination](that:io.github.mandar2812.dynaml.pipes.DataPipe[OtherSource,OtherDestination]):io.github.mandar2812.dynaml.pipes.ParallelPipe[Source,Destination,OtherSource,OtherDestination]", "kind" : "def"}, {"label" : "%>", "tail" : "(that: Basis[(Double, Double, Double, Double)]): Basis[Map[String, Double]]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.%>", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#%>(that:io.github.mandar2812.dynaml.pipes.Basis[Destination]):io.github.mandar2812.dynaml.pipes.Basis[Source]", "kind" : "def"}, {"label" : ">", "tail" : "(other: DataPipeConvertible[(Double, Double, Double, Double), Further]): ComposedPipe[Map[String, Double], (Double, Double, Double, Double), Further]", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.>", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#>[Further](other:io.github.mandar2812.dynaml.pipes.DataPipeConvertible[Destination,Further]):io.github.mandar2812.dynaml.pipes.ComposedPipe[Source,Destination,Further]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: T): T", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#apply[T<:Traversable[Source]](data:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(data: Map[String, Double]): (Double, Double, Double, Double)", "member" : "io.github.mandar2812.dynaml.pipes.DataPipe.apply", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#apply(data:Source):Destination", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/mandar2812\/PlasmaML\/utils\/MagConfigEncoding.html", "kind" : "case class"}], "ammonite" : []};